#!/bin/sh
TEST_FILES='tests/integration/cloudformation/test_cloudformation_acm.py tests/integration/cloudformation/test_cloudformation_changesets.py tests/integration/cloudformation/test_cloudformation_events.py tests/integration/cloudformation/test_cloudformation_integration.py tests/integration/cloudformation/test_cloudformation_kms.py tests/integration/cloudformation/test_cloudformation_logs.py tests/integration/cloudformation/test_cloudformation_s3.py tests/integration/cloudformation/test_cloudformation_sqs.py tests/integration/cloudformation/test_cloudformation_stacks.py tests/integration/dashboard/test_graph.py tests/integration/test_acm.py tests/integration/test_cloudformation.py tests/integration/test_config_endpoint.py tests/integration/test_dynamodb.py tests/integration/test_edge.py tests/integration/test_es.py tests/integration/test_firehose.py tests/integration/test_integration.py tests/integration/test_kms.py tests/integration/test_logs.py tests/integration/test_notifications.py tests/integration/test_resourcegroups.py tests/integration/test_route53.py tests/integration/test_secretsmanager.py tests/integration/test_serverless.py tests/integration/test_sns.py tests/integration/test_ssm.py tests/integration/test_sts.py tests/integration/test_swf.py tests/integration/test_web_ui.py'
echo "'$TEST_FILES'"
PYTEST_ARGS="-o junit_family=legacy --junitxml=target/reports/test-report-<< parameters.platform >>-${CIRCLE_NODE_INDEX}.xml" \
COVERAGE_FILE="target/coverage/.coverage.<< parameters.platform >>.${CIRCLE_NODE_INDEX}" \
TEST_PATH="$TEST_FILES" \
make docker-run-tests
