name: Open marker report GH issue
on:
  push:
    branches: # TODO: remove this before merge
      - reusable-workflow-markers
  # only manual for now
  workflow_dispatch:
    inputs:
      dryRun:
        description: 'Execute a Dry-Run? A Dry-Run will not create any issues and only print the issue content in the logs instead'
        required: false
        type: boolean
        default: false
      updateExistingIssue:
        description: 'Select the empty string "" to open duplicate issues, "true" to update duplicate issues and "false" to skip duplicate issues'
        required: false
        type: choice
        default: ''
        options:
          - ''
          - 'false'
          - 'true'
  workflow_call:
    inputs:
      target-repo:
        description: "Target repository to check out and generate the marker report."
        required: false
        type: string
      project-name:
        description: "Name of the project to use for the marker report."
        required: false
        type: string
        default: 'localstack'
      targetRef:
        description: 'LocalStack (Community) Ref'
        required: false
        type: string
    secrets:
      TEST_LOCALSTACK_API_KEY:
        description: "LocalStack API key for running tests."
        required: false

jobs:
  marker-report-issue:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:

      - name: Checkout this repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install build dependencies (if needed)
        if: ${{ inputs.project-name }}
        run: |
          sudo apt-get update
          sudo apt-get install -y libsnappy-dev jq libvirt-dev

      - name: Install dependencies
        run: |
          if [ -n "${{ inputs.project-name }}" ]; then
            make install-ci
          else
            make install-dev
          fi

        # makes use of the marker report plugin localstack.testing.pytest.marker_report
      - name: Generate marker report
        working-directory: ${{ inputs.target-repo }}
        env:
          PYTEST_ADDOPTS: "-p no:localstack.testing.pytest.fixtures -p no:localstack_snapshot.pytest.snapshot -p no:localstack.testing.pytest.filters -p no:localstack.testing.pytest.fixture_conflicts -p no:tests.fixtures -p no:localstack.testing.pytest.stepfunctions.fixtures -s --co --disable-warnings --marker-report --marker-report-path './target'"
          MARKER_REPORT_COMMIT_SHA: ${{ github.sha }}
          LOCALSTACK_API_KEY: ${{ secrets.TEST_LOCALSTACK_API_KEY }}
        run: |
          if [ -n "${{ inputs.project-name }}" ]; then
            echo "MARKER_REPORT_PROJECT_NAME=${{ inputs.project-name }}" >> $GITHUB_ENV
            . ../.venv/bin/activate
          else
            echo "MARKER_REPORT_PROJECT_NAME=localstack" >> $GITHUB_ENV
            . ./.venv/bin/activate
          fi
          pip install codeowners
          python -m pytest tests/aws/
          mv ./target/marker-report*.json ./target/marker-report.json

      - name: Enrich and render marker report
        env:
          MARKER_REPORT_PATH: ${{ inputs.target-repo || '.'}}/target/marker-report.json
          TEMPLATE_PATH: ./.github/bot_templates/MARKER_REPORT_ISSUE.md.j2
          OUTPUT_PATH: ${{ inputs.target-repo || '.'}}/target/MARKER_REPORT_ISSUE.md
          CODEOWNERS_PATH: ./CODEOWNERS
          GITHUB_REPO: ${{ github.repository }}
          COMMIT_SHA: ${{ github.sha }}
        run: |
          if [ -n "${{ inputs.project-name }}" ]; then
            cd ${{ inputs.target-repo }}
            . ../.venv/bin/activate
            pip install codeowners
            cd ..
            curl -o render_marker_report.py -L https://raw.githubusercontent.com/localstack/localstack/master/scripts/render_marker_report.py -H 'Accept: application/vnd.github.v3.raw'
            chmod +x render_marker_report.py
            curl -o MARKER_REPORT_ISSUE.md.j2 -L https://raw.githubusercontent.com/localstack/localstack/master/.github/bot_templates/MARKER_REPORT_ISSUE.md.j2 -H 'Accept: application/vnd.github.v3.raw'
            chmod +x MARKER_REPORT_ISSUE.md.j2
            python render_marker_report.py
          else
            . ./.venv/bin/activate
            pip install codeowners
            python scripts/render_marker_report.py
          fi

      - name: Print generated markdown
        run: |
          cat ./target/MARKER_REPORT_ISSUE.md

      - name: Upload generated markdown
        uses: actions/upload-artifact@v4
        with:
          path: ./target/MARKER_REPORT_ISSUE.md

# TODO: enable before merge
#      - name: Create GH issue from template
#        if: inputs.dryRun != true
#        uses: JasonEtco/create-an-issue@v2
#        env:
#          GITHUB_TOKEN: ${{ secrets.PRO_ACCESS_TOKEN }}
#        with:
#          # `update_existing` actually has 3 possible values:
#          # 1. not set => will always open duplicates
#          # 2. false => will not update and will not open duplicates (NOOP if title conflict detected)
#          # 3. true => will update an existing one if conflict detected
#          update_existing: ${{ inputs.updateExistingIssue || '' }}
##          search_existing: open
#          filename: ./target/MARKER_REPORT_ISSUE.md
