name: Generate pytest marker report
on:
  workflow_dispatch:
  push:
#    paths:
#      - "tests/**"
#    branches:
#      - master
    branches: # TODO: remove this before merge and uncomment the above
      - reusable-workflow-markers

  workflow_call:
    inputs:
      target-repo:
        description: "Target repository to check out and generate the marker report."
        required: false
        type: string
      requirements-file:
        description: "Path to the requirements file to use for caching dependencies."
        required: false
        type: string
      project-name:
        description: "Name of the project to use for the marker report."
        required: false
        type: string
    secrets:
      TINYBIRD_PARITY_ANALYTICS_TOKEN:
        description: "Tinybird token to upload test data to the dashboard."
        required: false
      TEST_LOCALSTACK_API_KEY:
        description: "LocalStack API key for running tests."
        required: false



concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  marker-report:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # setuptools_scm requires the git history (at least until the last tag) to determine the version
          fetch-depth: 0

      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache LocalStack dependencies (venv)
        uses: actions/cache@v4
        with:
          path: .venv
          key: ${{ runner.os }}-python-${{ steps.setup-python.outputs.python-version }}-venv-${{ hashFiles(inputs.requirements-file || 'requirements-dev.txt') }}

      - name: Install build dependencies (if needed)
        if: ${{ inputs.project-name }}
        run: |
          sudo apt-get update
          sudo apt-get install -y libsnappy-dev jq libvirt-dev

      - name: Install dependencies
        run: |
          if [ -n "${{ inputs.project-name }}" ]; then
            make install-ci
          else
            make install-dev
          fi

      - name: Upgrade localstack-core to the latest dev release
        if: ${{ inputs.project-name }}
        run: |
          source .venv/bin/activate
          pip install --upgrade --pre localstack-core[test]

      - name: Collect marker report
        working-directory: ${{ inputs.target-repo }}
        env:
          PYTEST_ADDOPTS: "-p no:localstack.testing.pytest.fixtures -p no:localstack_snapshot.pytest.snapshot -p no:localstack.testing.pytest.filters -p no:localstack.testing.pytest.fixture_conflicts -p no:tests.fixtures -p no:localstack.testing.pytest.stepfunctions.fixtures -s --co --disable-warnings --marker-report --marker-report-tinybird-upload"
          MARKER_REPORT_COMMIT_SHA: ${{ github.sha }}
          MARKER_REPORT_PROJECT_NAME: ${{ inputs.project-name || 'localstack' }}
          MARKER_REPORT_TINYBIRD_TOKEN: ${{ !inputs.project-name && secrets.MARKER_REPORT_TINYBIRD_TOKEN || secrets.TINYBIRD_PARITY_ANALYTICS_TOKEN }}
          LOCALSTACK_API_KEY: ${{ secrets.TEST_LOCALSTACK_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ -n "${{ inputs.project-name }}" ]; then
            . ../.venv/bin/activate
          else
            . ./.venv/bin/activate
          fi
          python -m pytest tests/aws/
