diff --git a/internal/conns/config.go b/internal/conns/config.go
index 2737b0b2f8..95259e3126 100644
--- a/internal/conns/config.go
+++ b/internal/conns/config.go
@@ -84,8 +84,22 @@ type Config struct {
 	UseFIPSEndpoint                bool
 }

+func GetLocalEndpoints() map[string]string {
+	const localEndpoint = "http://localhost:4566"
+	var localEndpoints = map[string]string{}
+	for _, name := range names.Aliases() {
+		if name == "s3" {
+			localEndpoints[name] = "http://s3.localhost.localstack.cloud:4566"
+		} else {
+			localEndpoints[name] = localEndpoint
+		}
+	}
+	return localEndpoints
+}
+
 // ConfigureProvider configures the provided provider Meta (instance data).
 func (c *Config) ConfigureProvider(ctx context.Context, client *AWSClient) (*AWSClient, diag.Diagnostics) {
+	c.Endpoints = GetLocalEndpoints()
 	awsbaseConfig := awsbase.Config{
 		AccessKey:                     c.AccessKey,
 		APNInfo:                       StdUserAgentProducts(c.TerraformVersion),
diff --git a/internal/provider/provider.go b/internal/provider/provider.go
index a0af64476f..dcb74c0e5a 100644
--- a/internal/provider/provider.go
+++ b/internal/provider/provider.go
@@ -2184,7 +2184,7 @@ func configure(ctx context.Context, provider *schema.Provider, d *schema.Resourc
 		CustomCABundle:                 d.Get("custom_ca_bundle").(string),
 		EC2MetadataServiceEndpoint:     d.Get("ec2_metadata_service_endpoint").(string),
 		EC2MetadataServiceEndpointMode: d.Get("ec2_metadata_service_endpoint_mode").(string),
-		Endpoints:                      make(map[string]string),
+		Endpoints:                      conns.GetLocalEndpoints(),
 		HTTPProxy:                      d.Get("http_proxy").(string),
 		Insecure:                       d.Get("insecure").(bool),
 		MaxRetries:                     25, // Set default here, not in schema (muxing with v6 provider).
