import re

from localstack.testing.snapshots.transformer import (
    KeyValueBasedReferenceTransformer,
    RegexMatchReplaceGroupTransformer,
    RegexTransformer,
    ResponseMetaDataTransformer,
    jsonpath_transformer,
    key_transformer,
    key_transformer_with_reference_replacement,
)

PATTERN_UUID = re.compile(
    r"[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
)
PATTERN_ISO8601 = re.compile(
    r"(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:\.\d{1,9})?(?:Z|[+-][01]\d:?([0-5]\d)?)"
)
# TODO
PATTERN_ARN_RESOURCENAME_GROUP = re.compile(
    r"arn:[^:\s$\"']*:[^:\s$\"']*:[^:\s$\"']*:[^:\n][^:\s$\"']*:(function:|[a-z]+/)?([^:\s$\"'\{\}<>]*)"
)
PATTERN_ARN = re.compile(
    r"arn:(aws[a-zA-Z-]*)?:([a-zA-Z0-9-_.]+)?:([a-z]{2}(-gov)?-[a-z]+-\d{1})?:(\d{12})?(:[^:\\\"]+)+"
)

# TODO currently unused

# PATTERN_S3_URL = re.compile(
#     r"[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\.[0-9]{3}(\+[0-9]{4})?"
# )
# PATTERN_SQS_URL = re.compile(
#     r"https?://[^/]+/\d{12}/[^/\"]+"
# )  # TODO: differences here between AWS + localstack structure
#
# PATTERN_HASH_256 = re.compile(r"^[A-Fa-f0-9]{64}$")
DEFAULT_PRIORITY = 0


def _resource_name_transformer(key: str, val: str) -> str:
    if isinstance(val, str):
        match = re.match(PATTERN_ARN, val)
        if match:
            res = match.groups()[-1].lstrip(":")
            if res.startswith("<") and res.endswith(">"):
                # value was already replaced
                return None
            if "/" in res:
                return res.split("/")[-1]
            if "$" in res:
                return res.split("$")[0]
            else:
                return res
        return None


LAMBDA_TRANSFORMER = [
    key_transformer_with_reference_replacement("FunctionName"),
    jsonpath_transformer(jsonpath="$..Code.Location", replacement="<location>"),
    key_transformer("LastModified"),
    # TODO something still wrong:
    # Replacing lambda_func-05b18c0b in snapshot with <function-name:1>
    # will not be replaced as it was already replaced -> but why has it #2?
    # Replacing lambda_func-05b18c0b in snapshot with <resource:2>
    # still #2?
    # Replacing lambda-autogenerated-f10ba3f7 in snapshot with <resource:2>
    # Replacing test-bucket in snapshot with <resource:3>
    # KeyValueBasedReferenceTransformer(
    #    _resource_name_transformer,
    #    "resource",
    # ),
    # TODO replace with _resource_name_transformer
    RegexMatchReplaceGroupTransformer(
        PATTERN_ARN_RESOURCENAME_GROUP, group=2, replacement="resource"
    ),
]

CLOUDFORMATION_TRANSFORMER = [
    key_transformer_with_reference_replacement("ChangeSetName"),
    key_transformer_with_reference_replacement("StackName"),
    key_transformer("ChangeSetId"),
    key_transformer("StackId"),
    key_transformer("CreationTime"),
    key_transformer("LastUpdatedTime"),
]

S3_TRANSFORMER = [
    key_transformer_with_reference_replacement("Name", replacement="bucket-name"),
    key_transformer("LastModified"),
    jsonpath_transformer(jsonpath="$..Owner.DisplayName", replacement="<display-name>"),
    jsonpath_transformer(jsonpath="$..Owner.ID", replacement="<owner-id>"),
    key_transformer_with_reference_replacement("ETag"),
]

SNAPSHOT_BASIC_TRANSFORMER = [
    ResponseMetaDataTransformer(),
    KeyValueBasedReferenceTransformer(
        lambda k, v: (
            v
            if (isinstance(v, str) and k.lower().endswith("id") and re.match(PATTERN_UUID, v))
            else None
        ),
        "uuid",
    ),
    RegexTransformer(PATTERN_ISO8601, "date"),
]
