{
  "tests/aws/services/stepfunctions/v2/credentials/test_credentials_base.py::TestCredentialsBase::test_cross_account_states_start_sync_execution[SFN_START_EXECUTION_SYNC_ROLE_ARN_JSONATA]": {
    "recorded-date": "04-12-2024, 17:11:42",
    "recorded-content": {
      "get_execution_history": {
        "events": [
          {
            "executionStartedEventDetails": {
              "input": {
                "StateMachineArn": "arn:<partition>:states:<region>:<secondary_test_aws_account_id>:stateMachine:<ArnPart_0idx>",
                "Input": "\"InputFromTrustedAccount\"",
                "Name": "TestTaskTargetWithCredentials",
                "CredentialsRoleArn": "<trusted_role_arn>"
              },
              "inputDetails": {
                "truncated": false
              },
              "roleArn": "snf_role_arn"
            },
            "id": 1,
            "previousEventId": 0,
            "timestamp": "timestamp",
            "type": "ExecutionStarted"
          },
          {
            "id": 2,
            "previousEventId": 0,
            "stateEnteredEventDetails": {
              "input": {
                "StateMachineArn": "arn:<partition>:states:<region>:<secondary_test_aws_account_id>:stateMachine:<ArnPart_0idx>",
                "Input": "\"InputFromTrustedAccount\"",
                "Name": "TestTaskTargetWithCredentials",
                "CredentialsRoleArn": "<trusted_role_arn>"
              },
              "inputDetails": {
                "truncated": false
              },
              "name": "StartExecution"
            },
            "timestamp": "timestamp",
            "type": "TaskStateEntered"
          },
          {
            "id": 3,
            "previousEventId": 2,
            "taskScheduledEventDetails": {
              "parameters": {
                "StateMachineArn": "arn:<partition>:states:<region>:<secondary_test_aws_account_id>:stateMachine:<ArnPart_0idx>",
                "Input": "\"InputFromTrustedAccount\"",
                "Name": "TestTaskTargetWithCredentials"
              },
              "region": "<region>",
              "resource": "startExecution.sync",
              "resourceType": "states",
              "taskCredentials": {
                "roleArn": "<trusted_role_arn>"
              }
            },
            "timestamp": "timestamp",
            "type": "TaskScheduled"
          },
          {
            "id": 4,
            "previousEventId": 3,
            "taskStartedEventDetails": {
              "resource": "startExecution.sync",
              "resourceType": "states"
            },
            "timestamp": "timestamp",
            "type": "TaskStarted"
          },
          {
            "id": 5,
            "previousEventId": 4,
            "taskSubmittedEventDetails": {
              "output": {
                "ExecutionArn": "arn:<partition>:states:<region>:<secondary_test_aws_account_id>:execution:<ArnPart_0idx>:TestTaskTargetWithCredentials",
                "SdkHttpMetadata": {
                  "AllHttpHeaders": {
                    "x-amzn-RequestId": [
                      "<uuid:1>"
                    ],
                    "connection": [
                      "keep-alive"
                    ],
                    "Content-Length": [
                      "178"
                    ],
                    "Date": "date",
                    "Content-Type": [
                      "application/x-amz-json-1.0"
                    ]
                  },
                  "HttpHeaders": {
                    "connection": "keep-alive",
                    "Content-Length": "178",
                    "Content-Type": "application/x-amz-json-1.0",
                    "Date": "date",
                    "x-amzn-RequestId": "<uuid:1>"
                  },
                  "HttpStatusCode": 200
                },
                "SdkResponseMetadata": {
                  "RequestId": "<uuid:1>"
                },
                "StartDate": "<start-date>"
              },
              "outputDetails": {
                "truncated": false
              },
              "resource": "startExecution.sync",
              "resourceType": "states"
            },
            "timestamp": "timestamp",
            "type": "TaskSubmitted"
          },
          {
            "id": 6,
            "previousEventId": 5,
            "taskSucceededEventDetails": {
              "output": {
                "ExecutionArn": "arn:<partition>:states:<region>:<secondary_test_aws_account_id>:execution:<ArnPart_0idx>:TestTaskTargetWithCredentials",
                "Input": "\"InputFromTrustedAccount\"",
                "InputDetails": {
                  "Included": true
                },
                "Name": "TestTaskTargetWithCredentials",
                "Output": "{\"Arg1\":\"argument1\"}",
                "OutputDetails": {
                  "Included": true
                },
                "RedriveCount": 0,
                "RedriveStatus": "NOT_REDRIVABLE",
                "RedriveStatusReason": "Execution is SUCCEEDED and cannot be redriven",
                "StartDate": "<start-date>",
                "StateMachineArn": "arn:<partition>:states:<region>:<secondary_test_aws_account_id>:stateMachine:<ArnPart_0idx>",
                "Status": "SUCCEEDED",
                "StopDate": "<stop-date>"
              },
              "outputDetails": {
                "truncated": false
              },
              "resource": "startExecution.sync",
              "resourceType": "states"
            },
            "timestamp": "timestamp",
            "type": "TaskSucceeded"
          },
          {
            "id": 7,
            "previousEventId": 6,
            "stateExitedEventDetails": {
              "name": "StartExecution",
              "output": {
                "ExecutionArn": "arn:<partition>:states:<region>:<secondary_test_aws_account_id>:execution:<ArnPart_0idx>:TestTaskTargetWithCredentials",
                "Input": "\"InputFromTrustedAccount\"",
                "InputDetails": {
                  "Included": true
                },
                "Name": "TestTaskTargetWithCredentials",
                "Output": "{\"Arg1\":\"argument1\"}",
                "OutputDetails": {
                  "Included": true
                },
                "RedriveCount": 0,
                "RedriveStatus": "NOT_REDRIVABLE",
                "RedriveStatusReason": "Execution is SUCCEEDED and cannot be redriven",
                "StartDate": "<start-date>",
                "StateMachineArn": "arn:<partition>:states:<region>:<secondary_test_aws_account_id>:stateMachine:<ArnPart_0idx>",
                "Status": "SUCCEEDED",
                "StopDate": "<stop-date>"
              },
              "outputDetails": {
                "truncated": false
              }
            },
            "timestamp": "timestamp",
            "type": "TaskStateExited"
          },
          {
            "executionSucceededEventDetails": {
              "output": {
                "ExecutionArn": "arn:<partition>:states:<region>:<secondary_test_aws_account_id>:execution:<ArnPart_0idx>:TestTaskTargetWithCredentials",
                "Input": "\"InputFromTrustedAccount\"",
                "InputDetails": {
                  "Included": true
                },
                "Name": "TestTaskTargetWithCredentials",
                "Output": "{\"Arg1\":\"argument1\"}",
                "OutputDetails": {
                  "Included": true
                },
                "RedriveCount": 0,
                "RedriveStatus": "NOT_REDRIVABLE",
                "RedriveStatusReason": "Execution is SUCCEEDED and cannot be redriven",
                "StartDate": "<start-date>",
                "StateMachineArn": "arn:<partition>:states:<region>:<secondary_test_aws_account_id>:stateMachine:<ArnPart_0idx>",
                "Status": "SUCCEEDED",
                "StopDate": "<stop-date>"
              },
              "outputDetails": {
                "truncated": false
              }
            },
            "id": 8,
            "previousEventId": 7,
            "timestamp": "timestamp",
            "type": "ExecutionSucceeded"
          }
        ],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/stepfunctions/v2/credentials/test_credentials_base.py::TestCredentialsBase::test_cross_account_states_start_sync_execution[SFN_START_EXECUTION_SYNC_ROLE_ARN_PATH]": {
    "recorded-date": "04-12-2024, 17:12:32",
    "recorded-content": {
      "get_execution_history": {
        "events": [
          {
            "executionStartedEventDetails": {
              "input": {
                "StateMachineArn": "arn:<partition>:states:<region>:<secondary_test_aws_account_id>:stateMachine:<ArnPart_0idx>",
                "Input": "\"InputFromTrustedAccount\"",
                "Name": "TestTaskTargetWithCredentials",
                "CredentialsRoleArn": "<trusted_role_arn>"
              },
              "inputDetails": {
                "truncated": false
              },
              "roleArn": "snf_role_arn"
            },
            "id": 1,
            "previousEventId": 0,
            "timestamp": "timestamp",
            "type": "ExecutionStarted"
          },
          {
            "id": 2,
            "previousEventId": 0,
            "stateEnteredEventDetails": {
              "input": {
                "StateMachineArn": "arn:<partition>:states:<region>:<secondary_test_aws_account_id>:stateMachine:<ArnPart_0idx>",
                "Input": "\"InputFromTrustedAccount\"",
                "Name": "TestTaskTargetWithCredentials",
                "CredentialsRoleArn": "<trusted_role_arn>"
              },
              "inputDetails": {
                "truncated": false
              },
              "name": "StartExecution"
            },
            "timestamp": "timestamp",
            "type": "TaskStateEntered"
          },
          {
            "id": 3,
            "previousEventId": 2,
            "taskScheduledEventDetails": {
              "parameters": {
                "Input": "\"InputFromTrustedAccount\"",
                "StateMachineArn": "arn:<partition>:states:<region>:<secondary_test_aws_account_id>:stateMachine:<ArnPart_0idx>",
                "Name": "TestTaskTargetWithCredentials"
              },
              "region": "<region>",
              "resource": "startExecution.sync",
              "resourceType": "states",
              "taskCredentials": {
                "roleArn": "<trusted_role_arn>"
              }
            },
            "timestamp": "timestamp",
            "type": "TaskScheduled"
          },
          {
            "id": 4,
            "previousEventId": 3,
            "taskStartedEventDetails": {
              "resource": "startExecution.sync",
              "resourceType": "states"
            },
            "timestamp": "timestamp",
            "type": "TaskStarted"
          },
          {
            "id": 5,
            "previousEventId": 4,
            "taskSubmittedEventDetails": {
              "output": {
                "ExecutionArn": "arn:<partition>:states:<region>:<secondary_test_aws_account_id>:execution:<ArnPart_0idx>:TestTaskTargetWithCredentials",
                "SdkHttpMetadata": {
                  "AllHttpHeaders": {
                    "x-amzn-RequestId": [
                      "<uuid:1>"
                    ],
                    "connection": [
                      "keep-alive"
                    ],
                    "Content-Length": [
                      "178"
                    ],
                    "Date": "date",
                    "Content-Type": [
                      "application/x-amz-json-1.0"
                    ]
                  },
                  "HttpHeaders": {
                    "connection": "keep-alive",
                    "Content-Length": "178",
                    "Content-Type": "application/x-amz-json-1.0",
                    "Date": "date",
                    "x-amzn-RequestId": "<uuid:1>"
                  },
                  "HttpStatusCode": 200
                },
                "SdkResponseMetadata": {
                  "RequestId": "<uuid:1>"
                },
                "StartDate": "<start-date>"
              },
              "outputDetails": {
                "truncated": false
              },
              "resource": "startExecution.sync",
              "resourceType": "states"
            },
            "timestamp": "timestamp",
            "type": "TaskSubmitted"
          },
          {
            "id": 6,
            "previousEventId": 5,
            "taskSucceededEventDetails": {
              "output": {
                "ExecutionArn": "arn:<partition>:states:<region>:<secondary_test_aws_account_id>:execution:<ArnPart_0idx>:TestTaskTargetWithCredentials",
                "Input": "\"InputFromTrustedAccount\"",
                "InputDetails": {
                  "Included": true
                },
                "Name": "TestTaskTargetWithCredentials",
                "Output": "{\"Arg1\":\"argument1\"}",
                "OutputDetails": {
                  "Included": true
                },
                "RedriveCount": 0,
                "RedriveStatus": "NOT_REDRIVABLE",
                "RedriveStatusReason": "Execution is SUCCEEDED and cannot be redriven",
                "StartDate": "<start-date>",
                "StateMachineArn": "arn:<partition>:states:<region>:<secondary_test_aws_account_id>:stateMachine:<ArnPart_0idx>",
                "Status": "SUCCEEDED",
                "StopDate": "<stop-date>"
              },
              "outputDetails": {
                "truncated": false
              },
              "resource": "startExecution.sync",
              "resourceType": "states"
            },
            "timestamp": "timestamp",
            "type": "TaskSucceeded"
          },
          {
            "id": 7,
            "previousEventId": 6,
            "stateExitedEventDetails": {
              "name": "StartExecution",
              "output": {
                "ExecutionArn": "arn:<partition>:states:<region>:<secondary_test_aws_account_id>:execution:<ArnPart_0idx>:TestTaskTargetWithCredentials",
                "Input": "\"InputFromTrustedAccount\"",
                "InputDetails": {
                  "Included": true
                },
                "Name": "TestTaskTargetWithCredentials",
                "Output": "{\"Arg1\":\"argument1\"}",
                "OutputDetails": {
                  "Included": true
                },
                "RedriveCount": 0,
                "RedriveStatus": "NOT_REDRIVABLE",
                "RedriveStatusReason": "Execution is SUCCEEDED and cannot be redriven",
                "StartDate": "<start-date>",
                "StateMachineArn": "arn:<partition>:states:<region>:<secondary_test_aws_account_id>:stateMachine:<ArnPart_0idx>",
                "Status": "SUCCEEDED",
                "StopDate": "<stop-date>"
              },
              "outputDetails": {
                "truncated": false
              }
            },
            "timestamp": "timestamp",
            "type": "TaskStateExited"
          },
          {
            "executionSucceededEventDetails": {
              "output": {
                "ExecutionArn": "arn:<partition>:states:<region>:<secondary_test_aws_account_id>:execution:<ArnPart_0idx>:TestTaskTargetWithCredentials",
                "Input": "\"InputFromTrustedAccount\"",
                "InputDetails": {
                  "Included": true
                },
                "Name": "TestTaskTargetWithCredentials",
                "Output": "{\"Arg1\":\"argument1\"}",
                "OutputDetails": {
                  "Included": true
                },
                "RedriveCount": 0,
                "RedriveStatus": "NOT_REDRIVABLE",
                "RedriveStatusReason": "Execution is SUCCEEDED and cannot be redriven",
                "StartDate": "<start-date>",
                "StateMachineArn": "arn:<partition>:states:<region>:<secondary_test_aws_account_id>:stateMachine:<ArnPart_0idx>",
                "Status": "SUCCEEDED",
                "StopDate": "<stop-date>"
              },
              "outputDetails": {
                "truncated": false
              }
            },
            "id": 8,
            "previousEventId": 7,
            "timestamp": "timestamp",
            "type": "ExecutionSucceeded"
          }
        ],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/stepfunctions/v2/credentials/test_credentials_base.py::TestCredentialsBase::test_cross_account_states_start_sync_execution[SFN_START_EXECUTION_SYNC_ROLE_ARN_PATH_CONTEXT]": {
    "recorded-date": "04-12-2024, 17:13:18",
    "recorded-content": {
      "get_execution_history": {
        "events": [
          {
            "executionStartedEventDetails": {
              "input": {
                "StateMachineArn": "arn:<partition>:states:<region>:<secondary_test_aws_account_id>:stateMachine:<ArnPart_0idx>",
                "Input": "\"InputFromTrustedAccount\"",
                "Name": "TestTaskTargetWithCredentials",
                "CredentialsRoleArn": "<trusted_role_arn>"
              },
              "inputDetails": {
                "truncated": false
              },
              "roleArn": "snf_role_arn"
            },
            "id": 1,
            "previousEventId": 0,
            "timestamp": "timestamp",
            "type": "ExecutionStarted"
          },
          {
            "id": 2,
            "previousEventId": 0,
            "stateEnteredEventDetails": {
              "input": {
                "StateMachineArn": "arn:<partition>:states:<region>:<secondary_test_aws_account_id>:stateMachine:<ArnPart_0idx>",
                "Input": "\"InputFromTrustedAccount\"",
                "Name": "TestTaskTargetWithCredentials",
                "CredentialsRoleArn": "<trusted_role_arn>"
              },
              "inputDetails": {
                "truncated": false
              },
              "name": "StartExecution"
            },
            "timestamp": "timestamp",
            "type": "PassStateEntered"
          },
          {
            "id": 3,
            "previousEventId": 2,
            "stateExitedEventDetails": {
              "assignedVariables": {
                "roleArn": "\"<trusted_role_arn>\""
              },
              "assignedVariablesDetails": {
                "truncated": false
              },
              "name": "StartExecution",
              "output": {
                "StateMachineArn": "arn:<partition>:states:<region>:<secondary_test_aws_account_id>:stateMachine:<ArnPart_0idx>",
                "Input": "\"InputFromTrustedAccount\"",
                "Name": "TestTaskTargetWithCredentials",
                "CredentialsRoleArn": "<trusted_role_arn>"
              },
              "outputDetails": {
                "truncated": false
              }
            },
            "timestamp": "timestamp",
            "type": "PassStateExited"
          },
          {
            "id": 4,
            "previousEventId": 3,
            "stateEnteredEventDetails": {
              "input": {
                "StateMachineArn": "arn:<partition>:states:<region>:<secondary_test_aws_account_id>:stateMachine:<ArnPart_0idx>",
                "Input": "\"InputFromTrustedAccount\"",
                "Name": "TestTaskTargetWithCredentials",
                "CredentialsRoleArn": "<trusted_role_arn>"
              },
              "inputDetails": {
                "truncated": false
              },
              "name": "RunTask"
            },
            "timestamp": "timestamp",
            "type": "TaskStateEntered"
          },
          {
            "id": 5,
            "previousEventId": 4,
            "taskScheduledEventDetails": {
              "parameters": {
                "Input": "\"InputFromTrustedAccount\"",
                "StateMachineArn": "arn:<partition>:states:<region>:<secondary_test_aws_account_id>:stateMachine:<ArnPart_0idx>",
                "Name": "TestTaskTargetWithCredentials"
              },
              "region": "<region>",
              "resource": "startExecution.sync",
              "resourceType": "states",
              "taskCredentials": {
                "roleArn": "<trusted_role_arn>"
              }
            },
            "timestamp": "timestamp",
            "type": "TaskScheduled"
          },
          {
            "id": 6,
            "previousEventId": 5,
            "taskStartedEventDetails": {
              "resource": "startExecution.sync",
              "resourceType": "states"
            },
            "timestamp": "timestamp",
            "type": "TaskStarted"
          },
          {
            "id": 7,
            "previousEventId": 6,
            "taskSubmittedEventDetails": {
              "output": {
                "ExecutionArn": "arn:<partition>:states:<region>:<secondary_test_aws_account_id>:execution:<ArnPart_0idx>:TestTaskTargetWithCredentials",
                "SdkHttpMetadata": {
                  "AllHttpHeaders": {
                    "x-amzn-RequestId": [
                      "<uuid:1>"
                    ],
                    "connection": [
                      "keep-alive"
                    ],
                    "Content-Length": [
                      "177"
                    ],
                    "Date": "date",
                    "Content-Type": [
                      "application/x-amz-json-1.0"
                    ]
                  },
                  "HttpHeaders": {
                    "connection": "keep-alive",
                    "Content-Length": "177",
                    "Content-Type": "application/x-amz-json-1.0",
                    "Date": "date",
                    "x-amzn-RequestId": "<uuid:1>"
                  },
                  "HttpStatusCode": 200
                },
                "SdkResponseMetadata": {
                  "RequestId": "<uuid:1>"
                },
                "StartDate": "<start-date>"
              },
              "outputDetails": {
                "truncated": false
              },
              "resource": "startExecution.sync",
              "resourceType": "states"
            },
            "timestamp": "timestamp",
            "type": "TaskSubmitted"
          },
          {
            "id": 8,
            "previousEventId": 7,
            "taskSucceededEventDetails": {
              "output": {
                "ExecutionArn": "arn:<partition>:states:<region>:<secondary_test_aws_account_id>:execution:<ArnPart_0idx>:TestTaskTargetWithCredentials",
                "Input": "\"InputFromTrustedAccount\"",
                "InputDetails": {
                  "Included": true
                },
                "Name": "TestTaskTargetWithCredentials",
                "Output": "{\"Arg1\":\"argument1\"}",
                "OutputDetails": {
                  "Included": true
                },
                "RedriveCount": 0,
                "RedriveStatus": "NOT_REDRIVABLE",
                "RedriveStatusReason": "Execution is SUCCEEDED and cannot be redriven",
                "StartDate": "<start-date>",
                "StateMachineArn": "arn:<partition>:states:<region>:<secondary_test_aws_account_id>:stateMachine:<ArnPart_0idx>",
                "Status": "SUCCEEDED",
                "StopDate": "<stop-date>"
              },
              "outputDetails": {
                "truncated": false
              },
              "resource": "startExecution.sync",
              "resourceType": "states"
            },
            "timestamp": "timestamp",
            "type": "TaskSucceeded"
          },
          {
            "id": 9,
            "previousEventId": 8,
            "stateExitedEventDetails": {
              "name": "RunTask",
              "output": {
                "ExecutionArn": "arn:<partition>:states:<region>:<secondary_test_aws_account_id>:execution:<ArnPart_0idx>:TestTaskTargetWithCredentials",
                "Input": "\"InputFromTrustedAccount\"",
                "InputDetails": {
                  "Included": true
                },
                "Name": "TestTaskTargetWithCredentials",
                "Output": "{\"Arg1\":\"argument1\"}",
                "OutputDetails": {
                  "Included": true
                },
                "RedriveCount": 0,
                "RedriveStatus": "NOT_REDRIVABLE",
                "RedriveStatusReason": "Execution is SUCCEEDED and cannot be redriven",
                "StartDate": "<start-date>",
                "StateMachineArn": "arn:<partition>:states:<region>:<secondary_test_aws_account_id>:stateMachine:<ArnPart_0idx>",
                "Status": "SUCCEEDED",
                "StopDate": "<stop-date>"
              },
              "outputDetails": {
                "truncated": false
              }
            },
            "timestamp": "timestamp",
            "type": "TaskStateExited"
          },
          {
            "executionSucceededEventDetails": {
              "output": {
                "ExecutionArn": "arn:<partition>:states:<region>:<secondary_test_aws_account_id>:execution:<ArnPart_0idx>:TestTaskTargetWithCredentials",
                "Input": "\"InputFromTrustedAccount\"",
                "InputDetails": {
                  "Included": true
                },
                "Name": "TestTaskTargetWithCredentials",
                "Output": "{\"Arg1\":\"argument1\"}",
                "OutputDetails": {
                  "Included": true
                },
                "RedriveCount": 0,
                "RedriveStatus": "NOT_REDRIVABLE",
                "RedriveStatusReason": "Execution is SUCCEEDED and cannot be redriven",
                "StartDate": "<start-date>",
                "StateMachineArn": "arn:<partition>:states:<region>:<secondary_test_aws_account_id>:stateMachine:<ArnPart_0idx>",
                "Status": "SUCCEEDED",
                "StopDate": "<stop-date>"
              },
              "outputDetails": {
                "truncated": false
              }
            },
            "id": 10,
            "previousEventId": 9,
            "timestamp": "timestamp",
            "type": "ExecutionSucceeded"
          }
        ],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/stepfunctions/v2/credentials/test_credentials_base.py::TestCredentialsBase::test_cross_account_states_start_sync_execution[SFN_START_EXECUTION_SYNC_ROLE_ARN_VARIABLE]": {
    "recorded-date": "04-12-2024, 17:14:14",
    "recorded-content": {
      "get_execution_history": {
        "events": [
          {
            "executionStartedEventDetails": {
              "input": {
                "StateMachineArn": "arn:<partition>:states:<region>:<secondary_test_aws_account_id>:stateMachine:<ArnPart_0idx>",
                "Input": "\"InputFromTrustedAccount\"",
                "Name": "TestTaskTargetWithCredentials",
                "CredentialsRoleArn": "<trusted_role_arn>"
              },
              "inputDetails": {
                "truncated": false
              },
              "roleArn": "snf_role_arn"
            },
            "id": 1,
            "previousEventId": 0,
            "timestamp": "timestamp",
            "type": "ExecutionStarted"
          },
          {
            "id": 2,
            "previousEventId": 0,
            "stateEnteredEventDetails": {
              "input": {
                "StateMachineArn": "arn:<partition>:states:<region>:<secondary_test_aws_account_id>:stateMachine:<ArnPart_0idx>",
                "Input": "\"InputFromTrustedAccount\"",
                "Name": "TestTaskTargetWithCredentials",
                "CredentialsRoleArn": "<trusted_role_arn>"
              },
              "inputDetails": {
                "truncated": false
              },
              "name": "StartExecution"
            },
            "timestamp": "timestamp",
            "type": "PassStateEntered"
          },
          {
            "id": 3,
            "previousEventId": 2,
            "stateExitedEventDetails": {
              "assignedVariables": {
                "roleArn": "\"<trusted_role_arn>\""
              },
              "assignedVariablesDetails": {
                "truncated": false
              },
              "name": "StartExecution",
              "output": {
                "StateMachineArn": "arn:<partition>:states:<region>:<secondary_test_aws_account_id>:stateMachine:<ArnPart_0idx>",
                "Input": "\"InputFromTrustedAccount\"",
                "Name": "TestTaskTargetWithCredentials",
                "CredentialsRoleArn": "<trusted_role_arn>"
              },
              "outputDetails": {
                "truncated": false
              }
            },
            "timestamp": "timestamp",
            "type": "PassStateExited"
          },
          {
            "id": 4,
            "previousEventId": 3,
            "stateEnteredEventDetails": {
              "input": {
                "StateMachineArn": "arn:<partition>:states:<region>:<secondary_test_aws_account_id>:stateMachine:<ArnPart_0idx>",
                "Input": "\"InputFromTrustedAccount\"",
                "Name": "TestTaskTargetWithCredentials",
                "CredentialsRoleArn": "<trusted_role_arn>"
              },
              "inputDetails": {
                "truncated": false
              },
              "name": "RunTask"
            },
            "timestamp": "timestamp",
            "type": "TaskStateEntered"
          },
          {
            "id": 5,
            "previousEventId": 4,
            "taskScheduledEventDetails": {
              "parameters": {
                "Input": "\"InputFromTrustedAccount\"",
                "StateMachineArn": "arn:<partition>:states:<region>:<secondary_test_aws_account_id>:stateMachine:<ArnPart_0idx>",
                "Name": "TestTaskTargetWithCredentials"
              },
              "region": "<region>",
              "resource": "startExecution.sync",
              "resourceType": "states",
              "taskCredentials": {
                "roleArn": "<trusted_role_arn>"
              }
            },
            "timestamp": "timestamp",
            "type": "TaskScheduled"
          },
          {
            "id": 6,
            "previousEventId": 5,
            "taskStartedEventDetails": {
              "resource": "startExecution.sync",
              "resourceType": "states"
            },
            "timestamp": "timestamp",
            "type": "TaskStarted"
          },
          {
            "id": 7,
            "previousEventId": 6,
            "taskSubmittedEventDetails": {
              "output": {
                "ExecutionArn": "arn:<partition>:states:<region>:<secondary_test_aws_account_id>:execution:<ArnPart_0idx>:TestTaskTargetWithCredentials",
                "SdkHttpMetadata": {
                  "AllHttpHeaders": {
                    "x-amzn-RequestId": [
                      "<uuid:1>"
                    ],
                    "connection": [
                      "keep-alive"
                    ],
                    "Content-Length": [
                      "178"
                    ],
                    "Date": "date",
                    "Content-Type": [
                      "application/x-amz-json-1.0"
                    ]
                  },
                  "HttpHeaders": {
                    "connection": "keep-alive",
                    "Content-Length": "178",
                    "Content-Type": "application/x-amz-json-1.0",
                    "Date": "date",
                    "x-amzn-RequestId": "<uuid:1>"
                  },
                  "HttpStatusCode": 200
                },
                "SdkResponseMetadata": {
                  "RequestId": "<uuid:1>"
                },
                "StartDate": "<start-date>"
              },
              "outputDetails": {
                "truncated": false
              },
              "resource": "startExecution.sync",
              "resourceType": "states"
            },
            "timestamp": "timestamp",
            "type": "TaskSubmitted"
          },
          {
            "id": 8,
            "previousEventId": 7,
            "taskSucceededEventDetails": {
              "output": {
                "ExecutionArn": "arn:<partition>:states:<region>:<secondary_test_aws_account_id>:execution:<ArnPart_0idx>:TestTaskTargetWithCredentials",
                "Input": "\"InputFromTrustedAccount\"",
                "InputDetails": {
                  "Included": true
                },
                "Name": "TestTaskTargetWithCredentials",
                "Output": "{\"Arg1\":\"argument1\"}",
                "OutputDetails": {
                  "Included": true
                },
                "RedriveCount": 0,
                "RedriveStatus": "NOT_REDRIVABLE",
                "RedriveStatusReason": "Execution is SUCCEEDED and cannot be redriven",
                "StartDate": "<start-date>",
                "StateMachineArn": "arn:<partition>:states:<region>:<secondary_test_aws_account_id>:stateMachine:<ArnPart_0idx>",
                "Status": "SUCCEEDED",
                "StopDate": "<stop-date>"
              },
              "outputDetails": {
                "truncated": false
              },
              "resource": "startExecution.sync",
              "resourceType": "states"
            },
            "timestamp": "timestamp",
            "type": "TaskSucceeded"
          },
          {
            "id": 9,
            "previousEventId": 8,
            "stateExitedEventDetails": {
              "name": "RunTask",
              "output": {
                "ExecutionArn": "arn:<partition>:states:<region>:<secondary_test_aws_account_id>:execution:<ArnPart_0idx>:TestTaskTargetWithCredentials",
                "Input": "\"InputFromTrustedAccount\"",
                "InputDetails": {
                  "Included": true
                },
                "Name": "TestTaskTargetWithCredentials",
                "Output": "{\"Arg1\":\"argument1\"}",
                "OutputDetails": {
                  "Included": true
                },
                "RedriveCount": 0,
                "RedriveStatus": "NOT_REDRIVABLE",
                "RedriveStatusReason": "Execution is SUCCEEDED and cannot be redriven",
                "StartDate": "<start-date>",
                "StateMachineArn": "arn:<partition>:states:<region>:<secondary_test_aws_account_id>:stateMachine:<ArnPart_0idx>",
                "Status": "SUCCEEDED",
                "StopDate": "<stop-date>"
              },
              "outputDetails": {
                "truncated": false
              }
            },
            "timestamp": "timestamp",
            "type": "TaskStateExited"
          },
          {
            "executionSucceededEventDetails": {
              "output": {
                "ExecutionArn": "arn:<partition>:states:<region>:<secondary_test_aws_account_id>:execution:<ArnPart_0idx>:TestTaskTargetWithCredentials",
                "Input": "\"InputFromTrustedAccount\"",
                "InputDetails": {
                  "Included": true
                },
                "Name": "TestTaskTargetWithCredentials",
                "Output": "{\"Arg1\":\"argument1\"}",
                "OutputDetails": {
                  "Included": true
                },
                "RedriveCount": 0,
                "RedriveStatus": "NOT_REDRIVABLE",
                "RedriveStatusReason": "Execution is SUCCEEDED and cannot be redriven",
                "StartDate": "<start-date>",
                "StateMachineArn": "arn:<partition>:states:<region>:<secondary_test_aws_account_id>:stateMachine:<ArnPart_0idx>",
                "Status": "SUCCEEDED",
                "StopDate": "<stop-date>"
              },
              "outputDetails": {
                "truncated": false
              }
            },
            "id": 10,
            "previousEventId": 9,
            "timestamp": "timestamp",
            "type": "ExecutionSucceeded"
          }
        ],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/stepfunctions/v2/credentials/test_credentials_base.py::TestCredentialsBase::test_invalid_credentials_field[EMPTY_CREDENTIALS]": {
    "recorded-date": "04-12-2024, 14:50:43",
    "recorded-content": {
      "invalid_definition": {
        "Error": {
          "Code": "InvalidDefinition",
          "Message": "Invalid State Machine Definition: 'SCHEMA_VALIDATION_FAILED: The field 'RoleArn' is required but was missing at /States/State0/Credentials'"
        },
        "message": "Invalid State Machine Definition: 'SCHEMA_VALIDATION_FAILED: The field 'RoleArn' is required but was missing at /States/State0/Credentials'",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      }
    }
  },
  "tests/aws/services/stepfunctions/v2/credentials/test_credentials_base.py::TestCredentialsBase::test_invalid_credentials_field[INVALID_CREDENTIALS_FIELD]": {
    "recorded-date": "04-12-2024, 14:51:02",
    "recorded-content": {
      "invalid_definition": {
        "Error": {
          "Code": "InvalidDefinition",
          "Message": "Invalid State Machine Definition: 'SCHEMA_VALIDATION_FAILED: The field 'RoleArn' is required but was missing at /States/State0/Credentials'"
        },
        "message": "Invalid State Machine Definition: 'SCHEMA_VALIDATION_FAILED: The field 'RoleArn' is required but was missing at /States/State0/Credentials'",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      }
    }
  },
  "tests/aws/services/stepfunctions/v2/credentials/test_credentials_base.py::TestCredentialsBase::test_cross_account_states_start_sync_execution[SFN_START_EXECUTION_SYNC_ROLE_ARN_INTRINSIC]": {
    "recorded-date": "04-12-2024, 17:15:00",
    "recorded-content": {
      "get_execution_history": {
        "events": [
          {
            "executionStartedEventDetails": {
              "input": {
                "StateMachineArn": "arn:<partition>:states:<region>:<secondary_test_aws_account_id>:stateMachine:<ArnPart_0idx>",
                "Input": "\"InputFromTrustedAccount\"",
                "Name": "TestTaskTargetWithCredentials",
                "CredentialsRoleArn": "<trusted_role_arn>"
              },
              "inputDetails": {
                "truncated": false
              },
              "roleArn": "snf_role_arn"
            },
            "id": 1,
            "previousEventId": 0,
            "timestamp": "timestamp",
            "type": "ExecutionStarted"
          },
          {
            "id": 2,
            "previousEventId": 0,
            "stateEnteredEventDetails": {
              "input": {
                "StateMachineArn": "arn:<partition>:states:<region>:<secondary_test_aws_account_id>:stateMachine:<ArnPart_0idx>",
                "Input": "\"InputFromTrustedAccount\"",
                "Name": "TestTaskTargetWithCredentials",
                "CredentialsRoleArn": "<trusted_role_arn>"
              },
              "inputDetails": {
                "truncated": false
              },
              "name": "StartExecution"
            },
            "timestamp": "timestamp",
            "type": "TaskStateEntered"
          },
          {
            "id": 3,
            "previousEventId": 2,
            "taskScheduledEventDetails": {
              "parameters": {
                "Input": "\"InputFromTrustedAccount\"",
                "StateMachineArn": "arn:<partition>:states:<region>:<secondary_test_aws_account_id>:stateMachine:<ArnPart_0idx>",
                "Name": "TestTaskTargetWithCredentials"
              },
              "region": "<region>",
              "resource": "startExecution.sync",
              "resourceType": "states",
              "taskCredentials": {
                "roleArn": "<trusted_role_arn>"
              }
            },
            "timestamp": "timestamp",
            "type": "TaskScheduled"
          },
          {
            "id": 4,
            "previousEventId": 3,
            "taskStartedEventDetails": {
              "resource": "startExecution.sync",
              "resourceType": "states"
            },
            "timestamp": "timestamp",
            "type": "TaskStarted"
          },
          {
            "id": 5,
            "previousEventId": 4,
            "taskSubmittedEventDetails": {
              "output": {
                "ExecutionArn": "arn:<partition>:states:<region>:<secondary_test_aws_account_id>:execution:<ArnPart_0idx>:TestTaskTargetWithCredentials",
                "SdkHttpMetadata": {
                  "AllHttpHeaders": {
                    "x-amzn-RequestId": [
                      "<uuid:1>"
                    ],
                    "connection": [
                      "keep-alive"
                    ],
                    "Content-Length": [
                      "178"
                    ],
                    "Date": "date",
                    "Content-Type": [
                      "application/x-amz-json-1.0"
                    ]
                  },
                  "HttpHeaders": {
                    "connection": "keep-alive",
                    "Content-Length": "178",
                    "Content-Type": "application/x-amz-json-1.0",
                    "Date": "date",
                    "x-amzn-RequestId": "<uuid:1>"
                  },
                  "HttpStatusCode": 200
                },
                "SdkResponseMetadata": {
                  "RequestId": "<uuid:1>"
                },
                "StartDate": "<start-date>"
              },
              "outputDetails": {
                "truncated": false
              },
              "resource": "startExecution.sync",
              "resourceType": "states"
            },
            "timestamp": "timestamp",
            "type": "TaskSubmitted"
          },
          {
            "id": 6,
            "previousEventId": 5,
            "taskSucceededEventDetails": {
              "output": {
                "ExecutionArn": "arn:<partition>:states:<region>:<secondary_test_aws_account_id>:execution:<ArnPart_0idx>:TestTaskTargetWithCredentials",
                "Input": "\"InputFromTrustedAccount\"",
                "InputDetails": {
                  "Included": true
                },
                "Name": "TestTaskTargetWithCredentials",
                "Output": "{\"Arg1\":\"argument1\"}",
                "OutputDetails": {
                  "Included": true
                },
                "RedriveCount": 0,
                "RedriveStatus": "NOT_REDRIVABLE",
                "RedriveStatusReason": "Execution is SUCCEEDED and cannot be redriven",
                "StartDate": "<start-date>",
                "StateMachineArn": "arn:<partition>:states:<region>:<secondary_test_aws_account_id>:stateMachine:<ArnPart_0idx>",
                "Status": "SUCCEEDED",
                "StopDate": "<stop-date>"
              },
              "outputDetails": {
                "truncated": false
              },
              "resource": "startExecution.sync",
              "resourceType": "states"
            },
            "timestamp": "timestamp",
            "type": "TaskSucceeded"
          },
          {
            "id": 7,
            "previousEventId": 6,
            "stateExitedEventDetails": {
              "name": "StartExecution",
              "output": {
                "ExecutionArn": "arn:<partition>:states:<region>:<secondary_test_aws_account_id>:execution:<ArnPart_0idx>:TestTaskTargetWithCredentials",
                "Input": "\"InputFromTrustedAccount\"",
                "InputDetails": {
                  "Included": true
                },
                "Name": "TestTaskTargetWithCredentials",
                "Output": "{\"Arg1\":\"argument1\"}",
                "OutputDetails": {
                  "Included": true
                },
                "RedriveCount": 0,
                "RedriveStatus": "NOT_REDRIVABLE",
                "RedriveStatusReason": "Execution is SUCCEEDED and cannot be redriven",
                "StartDate": "<start-date>",
                "StateMachineArn": "arn:<partition>:states:<region>:<secondary_test_aws_account_id>:stateMachine:<ArnPart_0idx>",
                "Status": "SUCCEEDED",
                "StopDate": "<stop-date>"
              },
              "outputDetails": {
                "truncated": false
              }
            },
            "timestamp": "timestamp",
            "type": "TaskStateExited"
          },
          {
            "executionSucceededEventDetails": {
              "output": {
                "ExecutionArn": "arn:<partition>:states:<region>:<secondary_test_aws_account_id>:execution:<ArnPart_0idx>:TestTaskTargetWithCredentials",
                "Input": "\"InputFromTrustedAccount\"",
                "InputDetails": {
                  "Included": true
                },
                "Name": "TestTaskTargetWithCredentials",
                "Output": "{\"Arg1\":\"argument1\"}",
                "OutputDetails": {
                  "Included": true
                },
                "RedriveCount": 0,
                "RedriveStatus": "NOT_REDRIVABLE",
                "RedriveStatusReason": "Execution is SUCCEEDED and cannot be redriven",
                "StartDate": "<start-date>",
                "StateMachineArn": "arn:<partition>:states:<region>:<secondary_test_aws_account_id>:stateMachine:<ArnPart_0idx>",
                "Status": "SUCCEEDED",
                "StopDate": "<stop-date>"
              },
              "outputDetails": {
                "truncated": false
              }
            },
            "id": 8,
            "previousEventId": 7,
            "timestamp": "timestamp",
            "type": "ExecutionSucceeded"
          }
        ],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/stepfunctions/v2/credentials/test_credentials_base.py::TestCredentialsBase::test_cross_account_service_lambda_invoke": {
    "recorded-date": "04-12-2024, 20:28:21",
    "recorded-content": {
      "get_execution_history": {
        "events": [
          {
            "executionStartedEventDetails": {
              "input": {
                "FunctionName": "<lambda_function_name>",
                "Payload": "\"PayloadFromTrustedAccount\"",
                "CredentialsRoleArn": "<trusted_role_arn>"
              },
              "inputDetails": {
                "truncated": false
              },
              "roleArn": "snf_role_arn"
            },
            "id": 1,
            "previousEventId": 0,
            "timestamp": "timestamp",
            "type": "ExecutionStarted"
          },
          {
            "id": 2,
            "previousEventId": 0,
            "stateEnteredEventDetails": {
              "input": {
                "FunctionName": "<lambda_function_name>",
                "Payload": "\"PayloadFromTrustedAccount\"",
                "CredentialsRoleArn": "<trusted_role_arn>"
              },
              "inputDetails": {
                "truncated": false
              },
              "name": "InvokeLambda"
            },
            "timestamp": "timestamp",
            "type": "TaskStateEntered"
          },
          {
            "id": 3,
            "previousEventId": 2,
            "taskScheduledEventDetails": {
              "parameters": {
                "FunctionName": "<lambda_function_name>",
                "Payload": "\"PayloadFromTrustedAccount\""
              },
              "region": "<region>",
              "resource": "invoke",
              "resourceType": "lambda",
              "taskCredentials": {
                "roleArn": "<trusted_role_arn>"
              }
            },
            "timestamp": "timestamp",
            "type": "TaskScheduled"
          },
          {
            "id": 4,
            "previousEventId": 3,
            "taskStartedEventDetails": {
              "resource": "invoke",
              "resourceType": "lambda"
            },
            "timestamp": "timestamp",
            "type": "TaskStarted"
          },
          {
            "id": 5,
            "previousEventId": 4,
            "taskSucceededEventDetails": {
              "output": {
                "ExecutedVersion": "$LATEST",
                "Payload": "PayloadFromTrustedAccount",
                "SdkHttpMetadata": {
                  "AllHttpHeaders": {
                    "X-Amz-Executed-Version": [
                      "$LATEST"
                    ],
                    "x-amzn-Remapped-Content-Length": [
                      "0"
                    ],
                    "Connection": [
                      "keep-alive"
                    ],
                    "x-amzn-RequestId": [
                      "<uuid:1>"
                    ],
                    "Content-Length": [
                      "27"
                    ],
                    "Date": "date",
                    "X-Amzn-Trace-Id": "X-Amzn-Trace-Id",
                    "Content-Type": [
                      "application/json"
                    ]
                  },
                  "HttpHeaders": {
                    "Connection": "keep-alive",
                    "Content-Length": "27",
                    "Content-Type": "application/json",
                    "Date": "date",
                    "X-Amz-Executed-Version": "$LATEST",
                    "x-amzn-Remapped-Content-Length": "0",
                    "x-amzn-RequestId": "<uuid:1>",
                    "X-Amzn-Trace-Id": "X-Amzn-Trace-Id"
                  },
                  "HttpStatusCode": 200
                },
                "SdkResponseMetadata": {
                  "RequestId": "<uuid:1>"
                },
                "StatusCode": 200
              },
              "outputDetails": {
                "truncated": false
              },
              "resource": "invoke",
              "resourceType": "lambda"
            },
            "timestamp": "timestamp",
            "type": "TaskSucceeded"
          },
          {
            "id": 6,
            "previousEventId": 5,
            "stateExitedEventDetails": {
              "name": "InvokeLambda",
              "output": {
                "ExecutedVersion": "$LATEST",
                "Payload": "PayloadFromTrustedAccount",
                "SdkHttpMetadata": {
                  "AllHttpHeaders": {
                    "X-Amz-Executed-Version": [
                      "$LATEST"
                    ],
                    "x-amzn-Remapped-Content-Length": [
                      "0"
                    ],
                    "Connection": [
                      "keep-alive"
                    ],
                    "x-amzn-RequestId": [
                      "<uuid:1>"
                    ],
                    "Content-Length": [
                      "27"
                    ],
                    "Date": "date",
                    "X-Amzn-Trace-Id": "X-Amzn-Trace-Id",
                    "Content-Type": [
                      "application/json"
                    ]
                  },
                  "HttpHeaders": {
                    "Connection": "keep-alive",
                    "Content-Length": "27",
                    "Content-Type": "application/json",
                    "Date": "date",
                    "X-Amz-Executed-Version": "$LATEST",
                    "x-amzn-Remapped-Content-Length": "0",
                    "x-amzn-RequestId": "<uuid:1>",
                    "X-Amzn-Trace-Id": "X-Amzn-Trace-Id"
                  },
                  "HttpStatusCode": 200
                },
                "SdkResponseMetadata": {
                  "RequestId": "<uuid:1>"
                },
                "StatusCode": 200
              },
              "outputDetails": {
                "truncated": false
              }
            },
            "timestamp": "timestamp",
            "type": "TaskStateExited"
          },
          {
            "executionSucceededEventDetails": {
              "output": {
                "ExecutedVersion": "$LATEST",
                "Payload": "PayloadFromTrustedAccount",
                "SdkHttpMetadata": {
                  "AllHttpHeaders": {
                    "X-Amz-Executed-Version": [
                      "$LATEST"
                    ],
                    "x-amzn-Remapped-Content-Length": [
                      "0"
                    ],
                    "Connection": [
                      "keep-alive"
                    ],
                    "x-amzn-RequestId": [
                      "<uuid:1>"
                    ],
                    "Content-Length": [
                      "27"
                    ],
                    "Date": "date",
                    "X-Amzn-Trace-Id": "X-Amzn-Trace-Id",
                    "Content-Type": [
                      "application/json"
                    ]
                  },
                  "HttpHeaders": {
                    "Connection": "keep-alive",
                    "Content-Length": "27",
                    "Content-Type": "application/json",
                    "Date": "date",
                    "X-Amz-Executed-Version": "$LATEST",
                    "x-amzn-Remapped-Content-Length": "0",
                    "x-amzn-RequestId": "<uuid:1>",
                    "X-Amzn-Trace-Id": "X-Amzn-Trace-Id"
                  },
                  "HttpStatusCode": 200
                },
                "SdkResponseMetadata": {
                  "RequestId": "<uuid:1>"
                },
                "StatusCode": 200
              },
              "outputDetails": {
                "truncated": false
              }
            },
            "id": 7,
            "previousEventId": 6,
            "timestamp": "timestamp",
            "type": "ExecutionSucceeded"
          }
        ],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/stepfunctions/v2/credentials/test_credentials_base.py::TestCredentialsBase::test_cross_account_service_lambda_invoke_retry": {
    "recorded-date": "04-12-2024, 20:34:05",
    "recorded-content": {
      "get_execution_history": {
        "events": [
          {
            "executionStartedEventDetails": {
              "input": {
                "FunctionName": "<lambda_function_name>",
                "Payload": "\"PayloadFromTrustedAccount\"",
                "CredentialsRoleArn": "<trusted_role_arn>"
              },
              "inputDetails": {
                "truncated": false
              },
              "roleArn": "snf_role_arn"
            },
            "id": 1,
            "previousEventId": 0,
            "timestamp": "timestamp",
            "type": "ExecutionStarted"
          },
          {
            "id": 2,
            "previousEventId": 0,
            "stateEnteredEventDetails": {
              "input": {
                "FunctionName": "<lambda_function_name>",
                "Payload": "\"PayloadFromTrustedAccount\"",
                "CredentialsRoleArn": "<trusted_role_arn>"
              },
              "inputDetails": {
                "truncated": false
              },
              "name": "InvokeLambda"
            },
            "timestamp": "timestamp",
            "type": "TaskStateEntered"
          },
          {
            "id": 3,
            "previousEventId": 2,
            "taskScheduledEventDetails": {
              "parameters": {
                "FunctionName": "<lambda_function_name>",
                "Payload": "\"PayloadFromTrustedAccount\""
              },
              "region": "<region>",
              "resource": "invoke",
              "resourceType": "lambda",
              "taskCredentials": {
                "roleArn": "<trusted_role_arn>"
              }
            },
            "timestamp": "timestamp",
            "type": "TaskScheduled"
          },
          {
            "id": 4,
            "previousEventId": 3,
            "taskStartedEventDetails": {
              "resource": "invoke",
              "resourceType": "lambda"
            },
            "timestamp": "timestamp",
            "type": "TaskStarted"
          },
          {
            "id": 5,
            "previousEventId": 4,
            "taskFailedEventDetails": {
              "cause": {
                "errorMessage": "Some exception was raised.",
                "errorType": "Exception",
                "requestId": "<uuid:1>",
                "stackTrace": [
                  "  File \"/var/task/handler.py\", line 2, in handler\n    raise Exception(\"Some exception was raised.\")\n"
                ]
              },
              "error": "Exception",
              "resource": "invoke",
              "resourceType": "lambda"
            },
            "timestamp": "timestamp",
            "type": "TaskFailed"
          },
          {
            "id": 6,
            "previousEventId": 5,
            "taskScheduledEventDetails": {
              "parameters": {
                "FunctionName": "<lambda_function_name>",
                "Payload": "\"PayloadFromTrustedAccount\""
              },
              "region": "<region>",
              "resource": "invoke",
              "resourceType": "lambda",
              "taskCredentials": {
                "roleArn": "<trusted_role_arn>"
              }
            },
            "timestamp": "timestamp",
            "type": "TaskScheduled"
          },
          {
            "id": 7,
            "previousEventId": 6,
            "taskStartedEventDetails": {
              "resource": "invoke",
              "resourceType": "lambda"
            },
            "timestamp": "timestamp",
            "type": "TaskStarted"
          },
          {
            "id": 8,
            "previousEventId": 7,
            "taskFailedEventDetails": {
              "cause": {
                "errorMessage": "Some exception was raised.",
                "errorType": "Exception",
                "requestId": "<uuid:2>",
                "stackTrace": [
                  "  File \"/var/task/handler.py\", line 2, in handler\n    raise Exception(\"Some exception was raised.\")\n"
                ]
              },
              "error": "Exception",
              "resource": "invoke",
              "resourceType": "lambda"
            },
            "timestamp": "timestamp",
            "type": "TaskFailed"
          },
          {
            "id": 9,
            "previousEventId": 8,
            "taskScheduledEventDetails": {
              "parameters": {
                "FunctionName": "<lambda_function_name>",
                "Payload": "\"PayloadFromTrustedAccount\""
              },
              "region": "<region>",
              "resource": "invoke",
              "resourceType": "lambda",
              "taskCredentials": {
                "roleArn": "<trusted_role_arn>"
              }
            },
            "timestamp": "timestamp",
            "type": "TaskScheduled"
          },
          {
            "id": 10,
            "previousEventId": 9,
            "taskStartedEventDetails": {
              "resource": "invoke",
              "resourceType": "lambda"
            },
            "timestamp": "timestamp",
            "type": "TaskStarted"
          },
          {
            "id": 11,
            "previousEventId": 10,
            "taskFailedEventDetails": {
              "cause": {
                "errorMessage": "Some exception was raised.",
                "errorType": "Exception",
                "requestId": "<uuid:3>",
                "stackTrace": [
                  "  File \"/var/task/handler.py\", line 2, in handler\n    raise Exception(\"Some exception was raised.\")\n"
                ]
              },
              "error": "Exception",
              "resource": "invoke",
              "resourceType": "lambda"
            },
            "timestamp": "timestamp",
            "type": "TaskFailed"
          },
          {
            "executionFailedEventDetails": {
              "cause": {
                "errorMessage": "Some exception was raised.",
                "errorType": "Exception",
                "requestId": "<uuid:3>",
                "stackTrace": [
                  "  File \"/var/task/handler.py\", line 2, in handler\n    raise Exception(\"Some exception was raised.\")\n"
                ]
              },
              "error": "Exception"
            },
            "id": 12,
            "previousEventId": 11,
            "timestamp": "timestamp",
            "type": "ExecutionFailed"
          }
        ],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/stepfunctions/v2/credentials/test_credentials_base.py::TestCredentialsBase::test_cross_account_lambda_task": {
    "recorded-date": "04-12-2024, 20:43:04",
    "recorded-content": {
      "get_execution_history": {
        "events": [
          {
            "executionStartedEventDetails": {
              "input": {
                "Payload": "\"PayloadFromTrustedAccount\"",
                "CredentialsRoleArn": "<trusted_role_arn>"
              },
              "inputDetails": {
                "truncated": false
              },
              "roleArn": "snf_role_arn"
            },
            "id": 1,
            "previousEventId": 0,
            "timestamp": "timestamp",
            "type": "ExecutionStarted"
          },
          {
            "id": 2,
            "previousEventId": 0,
            "stateEnteredEventDetails": {
              "input": {
                "Payload": "\"PayloadFromTrustedAccount\"",
                "CredentialsRoleArn": "<trusted_role_arn>"
              },
              "inputDetails": {
                "truncated": false
              },
              "name": "LambdaTask"
            },
            "timestamp": "timestamp",
            "type": "TaskStateEntered"
          },
          {
            "id": 3,
            "lambdaFunctionScheduledEventDetails": {
              "input": {
                "Payload": "\"PayloadFromTrustedAccount\"",
                "CredentialsRoleArn": "<trusted_role_arn>"
              },
              "inputDetails": {
                "truncated": false
              },
              "resource": "arn:<partition>:lambda:<region>:<test_aws_account_id>:function:<lambda_function_name>",
              "taskCredentials": {
                "roleArn": "<trusted_role_arn>"
              }
            },
            "previousEventId": 2,
            "timestamp": "timestamp",
            "type": "LambdaFunctionScheduled"
          },
          {
            "id": 4,
            "previousEventId": 3,
            "timestamp": "timestamp",
            "type": "LambdaFunctionStarted"
          },
          {
            "id": 5,
            "lambdaFunctionSucceededEventDetails": {
              "output": {
                "Payload": "\"PayloadFromTrustedAccount\"",
                "CredentialsRoleArn": "<trusted_role_arn>"
              },
              "outputDetails": {
                "truncated": false
              }
            },
            "previousEventId": 4,
            "timestamp": "timestamp",
            "type": "LambdaFunctionSucceeded"
          },
          {
            "id": 6,
            "previousEventId": 5,
            "stateExitedEventDetails": {
              "name": "LambdaTask",
              "output": {
                "Payload": "\"PayloadFromTrustedAccount\"",
                "CredentialsRoleArn": "<trusted_role_arn>"
              },
              "outputDetails": {
                "truncated": false
              }
            },
            "timestamp": "timestamp",
            "type": "TaskStateExited"
          },
          {
            "executionSucceededEventDetails": {
              "output": {
                "Payload": "\"PayloadFromTrustedAccount\"",
                "CredentialsRoleArn": "<trusted_role_arn>"
              },
              "outputDetails": {
                "truncated": false
              }
            },
            "id": 7,
            "previousEventId": 6,
            "timestamp": "timestamp",
            "type": "ExecutionSucceeded"
          }
        ],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  }
}
