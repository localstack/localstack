{
  "Comment": "MAP_STATE_LEGACY_REENTRANT",
  "StartAt": "StartState",
  "States": {
    // Populate memory with two fields: number of iterations left, and input values.
    "StartState": {
      "Type": "Pass",
      "Parameters": {
        "Iterations": 3,
        "Values.$": "States.ArrayRange(0, 3, 1)"
      },
      "Next": "BeforeIteration"
    },
    // Prepare the iteration by updating the iterations count.
    "BeforeIteration": {
      "Type": "Pass",
      "Parameters": {
        "Iterations.$": "States.MathAdd($.Iterations, -1)",
        "Values.$": "$.Values"
      },
      "Next": "IterationBody"
    },
    // Run a distributed map state on the values field.
    "IterationBody": {
      "Type": "Map",
      "MaxConcurrency": 1,
      "ItemsPath": "$.Values",
      "Iterator": {
        "StartAt": "ProcessValue",
        "States": {
          "ProcessValue": {
            "Type": "Pass",
            "End": true
          }
        }
      },
      "ResultPath": "$.Values",
      "Next": "CheckIteration"
    },
    // Check the number of iterations is zero and terminate, otherwise run another iteration.
    "CheckIteration": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.Iterations",
          "NumericEquals": 0,
          "Next": "Terminate"
        }
      ],
      "Default": "BeforeIteration"
    },
    // Terminate the execution.
    "Terminate": {
      "Type": "Succeed"
    }
  }
}
