{
  "tests/aws/services/cloudwatch/test_cloudwatch.py::TestCloudwatch::test_enable_disable_alarm_actions": {
    "recorded-date": "12-09-2023, 12:00:45",
    "recorded-content": {
      "cloudwatch_sns_subscription": {
        "SubscriptionArn": "arn:aws:sns:<region>:111111111111:<topic_arn>:<SubscriptionArn:1>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "describe_alarm": {
        "CompositeAlarms": [],
        "MetricAlarms": [
          {
            "ActionsEnabled": true,
            "AlarmActions": [
              "arn:aws:sns:<region>:111111111111:<topic_arn>"
            ],
            "AlarmArn": "arn:aws:cloudwatch:<region>:111111111111:alarm:<alarm-name:1>",
            "AlarmConfigurationUpdatedTimestamp": "timestamp",
            "AlarmDescription": "testing cloudwatch alarms",
            "AlarmName": "<alarm-name:1>",
            "ComparisonOperator": "GreaterThanThreshold",
            "Dimensions": [
              {
                "Name": "InstanceId",
                "Value": "abc"
              }
            ],
            "EvaluationPeriods": 2,
            "InsufficientDataActions": [],
            "MetricName": "my-metric101",
            "Namespace": "<namespace:1>",
            "OKActions": [
              "arn:aws:sns:<region>:111111111111:<topic_arn>"
            ],
            "Period": 10,
            "StateReason": "Unchecked: Initial alarm creation",
            "StateTransitionedTimestamp": "timestamp",
            "StateUpdatedTimestamp": "timestamp",
            "StateValue": "INSUFFICIENT_DATA",
            "Statistic": "Average",
            "Threshold": 2.0,
            "TreatMissingData": "ignore",
            "Unit": "Seconds"
          }
        ],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "alarm-state-describe": {
        "CompositeAlarms": [],
        "MetricAlarms": [
          {
            "ActionsEnabled": true,
            "AlarmActions": [
              "arn:aws:sns:<region>:111111111111:<topic_arn>"
            ],
            "AlarmArn": "arn:aws:cloudwatch:<region>:111111111111:alarm:<alarm-name:1>",
            "AlarmConfigurationUpdatedTimestamp": "timestamp",
            "AlarmDescription": "testing cloudwatch alarms",
            "AlarmName": "<alarm-name:1>",
            "ComparisonOperator": "GreaterThanThreshold",
            "Dimensions": [
              {
                "Name": "InstanceId",
                "Value": "abc"
              }
            ],
            "EvaluationPeriods": 2,
            "InsufficientDataActions": [],
            "MetricName": "my-metric101",
            "Namespace": "<namespace:1>",
            "OKActions": [
              "arn:aws:sns:<region>:111111111111:<topic_arn>"
            ],
            "Period": 10,
            "StateReason": "testing alarm",
            "StateTransitionedTimestamp": "timestamp",
            "StateUpdatedTimestamp": "timestamp",
            "StateValue": "ALARM",
            "Statistic": "Average",
            "Threshold": 2.0,
            "TreatMissingData": "ignore",
            "Unit": "Seconds"
          }
        ],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "alarm-state-sqs-msg": {
        "AWSAccountId": "111111111111",
        "AlarmActions": [
          "arn:aws:sns:<region>:111111111111:<topic_arn>"
        ],
        "AlarmArn": "arn:aws:cloudwatch:<region>:111111111111:alarm:<alarm-name:1>",
        "AlarmConfigurationUpdatedTimestamp": "date",
        "AlarmDescription": "testing cloudwatch alarms",
        "AlarmName": "<alarm-name:1>",
        "InsufficientDataActions": [],
        "NewStateReason": "testing alarm",
        "NewStateValue": "ALARM",
        "OKActions": [
          "arn:aws:sns:<region>:111111111111:<topic_arn>"
        ],
        "OldStateValue": "INSUFFICIENT_DATA",
        "Region": "<region-name-full:1>",
        "StateChangeTime": "date",
        "Trigger": {
          "ComparisonOperator": "GreaterThanThreshold",
          "Dimensions": [
            {
              "name": "InstanceId",
              "value": "abc"
            }
          ],
          "EvaluateLowSampleCountPercentile": "",
          "EvaluationPeriods": 2,
          "MetricName": "my-metric101",
          "Namespace": "<namespace:1>",
          "Period": 10,
          "Statistic": "AVERAGE",
          "StatisticType": "Statistic",
          "Threshold": 2.0,
          "TreatMissingData": "ignore",
          "Unit": "Seconds"
        }
      },
      "describe_alarm_disabled": {
        "CompositeAlarms": [],
        "MetricAlarms": [
          {
            "ActionsEnabled": false,
            "AlarmActions": [
              "arn:aws:sns:<region>:111111111111:<topic_arn>"
            ],
            "AlarmArn": "arn:aws:cloudwatch:<region>:111111111111:alarm:<alarm-name:1>",
            "AlarmConfigurationUpdatedTimestamp": "timestamp",
            "AlarmDescription": "testing cloudwatch alarms",
            "AlarmName": "<alarm-name:1>",
            "ComparisonOperator": "GreaterThanThreshold",
            "Dimensions": [
              {
                "Name": "InstanceId",
                "Value": "abc"
              }
            ],
            "EvaluationPeriods": 2,
            "InsufficientDataActions": [],
            "MetricName": "my-metric101",
            "Namespace": "<namespace:1>",
            "OKActions": [
              "arn:aws:sns:<region>:111111111111:<topic_arn>"
            ],
            "Period": 10,
            "StateReason": "testing OK state",
            "StateTransitionedTimestamp": "timestamp",
            "StateUpdatedTimestamp": "timestamp",
            "StateValue": "OK",
            "Statistic": "Average",
            "Threshold": 2.0,
            "TreatMissingData": "ignore",
            "Unit": "Seconds"
          }
        ],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "ok-state-action-disabled-describe": {
        "CompositeAlarms": [],
        "MetricAlarms": [
          {
            "ActionsEnabled": false,
            "AlarmActions": [
              "arn:aws:sns:<region>:111111111111:<topic_arn>"
            ],
            "AlarmArn": "arn:aws:cloudwatch:<region>:111111111111:alarm:<alarm-name:1>",
            "AlarmConfigurationUpdatedTimestamp": "timestamp",
            "AlarmDescription": "testing cloudwatch alarms",
            "AlarmName": "<alarm-name:1>",
            "ComparisonOperator": "GreaterThanThreshold",
            "Dimensions": [
              {
                "Name": "InstanceId",
                "Value": "abc"
              }
            ],
            "EvaluationPeriods": 2,
            "InsufficientDataActions": [],
            "MetricName": "my-metric101",
            "Namespace": "<namespace:1>",
            "OKActions": [
              "arn:aws:sns:<region>:111111111111:<topic_arn>"
            ],
            "Period": 10,
            "StateReason": "testing OK state",
            "StateTransitionedTimestamp": "timestamp",
            "StateUpdatedTimestamp": "timestamp",
            "StateValue": "OK",
            "Statistic": "Average",
            "Threshold": 2.0,
            "TreatMissingData": "ignore",
            "Unit": "Seconds"
          }
        ],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "describe_alarm_enabled": {
        "CompositeAlarms": [],
        "MetricAlarms": [
          {
            "ActionsEnabled": true,
            "AlarmActions": [
              "arn:aws:sns:<region>:111111111111:<topic_arn>"
            ],
            "AlarmArn": "arn:aws:cloudwatch:<region>:111111111111:alarm:<alarm-name:1>",
            "AlarmConfigurationUpdatedTimestamp": "timestamp",
            "AlarmDescription": "testing cloudwatch alarms",
            "AlarmName": "<alarm-name:1>",
            "ComparisonOperator": "GreaterThanThreshold",
            "Dimensions": [
              {
                "Name": "InstanceId",
                "Value": "abc"
              }
            ],
            "EvaluationPeriods": 2,
            "InsufficientDataActions": [],
            "MetricName": "my-metric101",
            "Namespace": "<namespace:1>",
            "OKActions": [
              "arn:aws:sns:<region>:111111111111:<topic_arn>"
            ],
            "Period": 10,
            "StateReason": "testing OK state",
            "StateTransitionedTimestamp": "timestamp",
            "StateUpdatedTimestamp": "timestamp",
            "StateValue": "OK",
            "Statistic": "Average",
            "Threshold": 2.0,
            "TreatMissingData": "ignore",
            "Unit": "Seconds"
          }
        ],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/cloudwatch/test_cloudwatch.py::TestCloudwatch::test_breaching_alarm_actions": {
    "recorded-date": "12-09-2023, 11:56:52",
    "recorded-content": {
      "cloudwatch_sns_subscription": {
        "SubscriptionArn": "arn:aws:sns:<region>:111111111111:<topic_arn>:<SubscriptionArn:1>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "alarm-1-describe": {
        "CompositeAlarms": [],
        "MetricAlarms": [
          {
            "ActionsEnabled": true,
            "AlarmActions": [
              "arn:aws:sns:<region>:111111111111:<topic_arn>"
            ],
            "AlarmArn": "arn:aws:cloudwatch:<region>:111111111111:alarm:<alarm-name:1>",
            "AlarmConfigurationUpdatedTimestamp": "timestamp",
            "AlarmDescription": "testing cloudwatch alarms",
            "AlarmName": "<alarm-name:1>",
            "ComparisonOperator": "GreaterThanThreshold",
            "Dimensions": [
              {
                "Name": "InstanceId",
                "Value": "abc"
              }
            ],
            "EvaluationPeriods": 2,
            "InsufficientDataActions": [],
            "MetricName": "my-metric101",
            "Namespace": "<namespace:1>",
            "OKActions": [
              "arn:aws:sns:<region>:111111111111:<topic_arn>"
            ],
            "Period": 10,
            "StateReason": "Threshold Crossed: no datapoints were received for 2 periods and 2 missing datapoints were treated as [Breaching].",
            "StateReasonData": {
              "version": "1.0",
              "queryDate": "date",
              "unit": "Seconds",
              "statistic": "Average",
              "period": 10,
              "recentDatapoints": [],
              "threshold": 2.0,
              "evaluatedDatapoints": [
                {
                  "timestamp": "date"
                },
                {
                  "timestamp": "date"
                }
              ]
            },
            "StateTransitionedTimestamp": "timestamp",
            "StateUpdatedTimestamp": "timestamp",
            "StateValue": "ALARM",
            "Statistic": "Average",
            "Threshold": 2.0,
            "TreatMissingData": "breaching",
            "Unit": "Seconds"
          }
        ],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "alarm-1-sqs-msg": {
        "AWSAccountId": "111111111111",
        "AlarmActions": [
          "arn:aws:sns:<region>:111111111111:<topic_arn>"
        ],
        "AlarmArn": "arn:aws:cloudwatch:<region>:111111111111:alarm:<alarm-name:1>",
        "AlarmConfigurationUpdatedTimestamp": "date",
        "AlarmDescription": "testing cloudwatch alarms",
        "AlarmName": "<alarm-name:1>",
        "InsufficientDataActions": [],
        "NewStateReason": "Threshold Crossed: no datapoints were received for 2 periods and 2 missing datapoints were treated as [Breaching].",
        "NewStateValue": "ALARM",
        "OKActions": [
          "arn:aws:sns:<region>:111111111111:<topic_arn>"
        ],
        "OldStateValue": "INSUFFICIENT_DATA",
        "Region": "<region-name-full:1>",
        "StateChangeTime": "date",
        "Trigger": {
          "ComparisonOperator": "GreaterThanThreshold",
          "Dimensions": [
            {
              "name": "InstanceId",
              "value": "abc"
            }
          ],
          "EvaluateLowSampleCountPercentile": "",
          "EvaluationPeriods": 2,
          "MetricName": "my-metric101",
          "Namespace": "<namespace:1>",
          "Period": 10,
          "Statistic": "AVERAGE",
          "StatisticType": "Statistic",
          "Threshold": 2.0,
          "TreatMissingData": "breaching",
          "Unit": "Seconds"
        }
      }
    }
  },
  "tests/aws/services/cloudwatch/test_cloudwatch.py::TestCloudwatch::test_put_metric_alarm": {
    "recorded-date": "26-10-2023, 11:44:13",
    "recorded-content": {
      "describe-alarm": {
        "CompositeAlarms": [],
        "MetricAlarms": [
          {
            "ActionsEnabled": true,
            "AlarmActions": [
              "arn:aws:sns:<region>:111111111111:<topic_arn>"
            ],
            "AlarmArn": "arn:aws:cloudwatch:<region>:111111111111:alarm:<alarm-name:1>",
            "AlarmConfigurationUpdatedTimestamp": "timestamp",
            "AlarmDescription": "testing cloudwatch alarms",
            "AlarmName": "<alarm-name:1>",
            "ComparisonOperator": "GreaterThanThreshold",
            "Dimensions": [
              {
                "Name": "InstanceId",
                "Value": "abc"
              }
            ],
            "EvaluationPeriods": 1,
            "InsufficientDataActions": [],
            "MetricName": "my-metric1",
            "Namespace": "<namespace:1>",
            "OKActions": [
              "arn:aws:sns:<region>:111111111111:<topic_arn>"
            ],
            "Period": 30,
            "StateReason": "Unchecked: Initial alarm creation",
            "StateTransitionedTimestamp": "timestamp",
            "StateUpdatedTimestamp": "timestamp",
            "StateValue": "INSUFFICIENT_DATA",
            "Statistic": "Average",
            "Threshold": 2.0,
            "TreatMissingData": "notBreaching",
            "Unit": "Seconds"
          }
        ],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "alarm-triggered-describe": {
        "CompositeAlarms": [],
        "MetricAlarms": [
          {
            "ActionsEnabled": true,
            "AlarmActions": [
              "arn:aws:sns:<region>:111111111111:<topic_arn>"
            ],
            "AlarmArn": "arn:aws:cloudwatch:<region>:111111111111:alarm:<alarm-name:1>",
            "AlarmConfigurationUpdatedTimestamp": "timestamp",
            "AlarmDescription": "testing cloudwatch alarms",
            "AlarmName": "<alarm-name:1>",
            "ComparisonOperator": "GreaterThanThreshold",
            "Dimensions": [
              {
                "Name": "InstanceId",
                "Value": "abc"
              }
            ],
            "EvaluationPeriods": 1,
            "InsufficientDataActions": [],
            "MetricName": "my-metric1",
            "Namespace": "<namespace:1>",
            "OKActions": [
              "arn:aws:sns:<region>:111111111111:<topic_arn>"
            ],
            "Period": 30,
            "StateReason": "Threshold Crossed: 1 datapoint [21.5 (26/10/23 16:42:00)] was greater than the threshold (2.0).",
            "StateReasonData": {
              "version": "1.0",
              "queryDate": "date",
              "startDate": "date",
              "unit": "Seconds",
              "statistic": "Average",
              "period": 30,
              "recentDatapoints": [
                21.5
              ],
              "threshold": 2.0,
              "evaluatedDatapoints": [
                {
                  "timestamp": "date",
                  "sampleCount": 2.0,
                  "value": 21.5
                }
              ]
            },
            "StateTransitionedTimestamp": "timestamp",
            "StateUpdatedTimestamp": "timestamp",
            "StateValue": "ALARM",
            "Statistic": "Average",
            "Threshold": 2.0,
            "TreatMissingData": "notBreaching",
            "Unit": "Seconds"
          }
        ],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "alarm-triggered-sqs-msg": {
        "AWSAccountId": "111111111111",
        "AlarmActions": [
          "arn:aws:sns:<region>:111111111111:<topic_arn>"
        ],
        "AlarmArn": "arn:aws:cloudwatch:<region>:111111111111:alarm:<alarm-name:1>",
        "AlarmConfigurationUpdatedTimestamp": "date",
        "AlarmDescription": "testing cloudwatch alarms",
        "AlarmName": "<alarm-name:1>",
        "InsufficientDataActions": [],
        "NewStateReason": "Threshold Crossed: 1 datapoint [21.5 (26/10/23 16:42:00)] was greater than the threshold (2.0).",
        "NewStateValue": "ALARM",
        "OKActions": [
          "arn:aws:sns:<region>:111111111111:<topic_arn>"
        ],
        "OldStateValue": "INSUFFICIENT_DATA",
        "Region": "<region-name-full:1>",
        "StateChangeTime": "date",
        "Trigger": {
          "ComparisonOperator": "GreaterThanThreshold",
          "Dimensions": [
            {
              "name": "InstanceId",
              "value": "abc"
            }
          ],
          "EvaluateLowSampleCountPercentile": "",
          "EvaluationPeriods": 1,
          "MetricName": "my-metric1",
          "Namespace": "<namespace:1>",
          "Period": 30,
          "Statistic": "AVERAGE",
          "StatisticType": "Statistic",
          "Threshold": 2.0,
          "TreatMissingData": "notBreaching",
          "Unit": "Seconds"
        }
      },
      "describe-alarm-history": {
        "AlarmHistoryItems": [
          {
            "AlarmName": "<alarm-name:1>",
            "AlarmType": "MetricAlarm",
            "HistoryData": {
              "version": "1.0",
              "oldState": {
                "stateValue": "INSUFFICIENT_DATA",
                "stateReason": "Unchecked: Initial alarm creation"
              },
              "newState": {
                "stateValue": "ALARM",
                "stateReason": "Threshold Crossed: 1 datapoint [21.5 (26/10/23 16:42:00)] was greater than the threshold (2.0).",
                "stateReasonData": {
                  "version": "1.0",
                  "queryDate": "date",
                  "startDate": "date",
                  "unit": "Seconds",
                  "statistic": "Average",
                  "period": 30,
                  "recentDatapoints": [
                    21.5
                  ],
                  "threshold": 2.0,
                  "evaluatedDatapoints": [
                    {
                      "timestamp": "date",
                      "sampleCount": 2.0,
                      "value": 21.5
                    }
                  ]
                }
              }
            },
            "HistoryItemType": "StateUpdate",
            "HistorySummary": "Alarm updated from INSUFFICIENT_DATA to ALARM",
            "Timestamp": "timestamp"
          }
        ],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "describe-alarms-for-metric": {
        "MetricAlarms": [
          {
            "ActionsEnabled": true,
            "AlarmActions": [
              "arn:aws:sns:<region>:111111111111:<topic_arn>"
            ],
            "AlarmArn": "arn:aws:cloudwatch:<region>:111111111111:alarm:<alarm-name:1>",
            "AlarmConfigurationUpdatedTimestamp": "timestamp",
            "AlarmDescription": "testing cloudwatch alarms",
            "AlarmName": "<alarm-name:1>",
            "ComparisonOperator": "GreaterThanThreshold",
            "Dimensions": [
              {
                "Name": "InstanceId",
                "Value": "abc"
              }
            ],
            "EvaluationPeriods": 1,
            "InsufficientDataActions": [],
            "MetricName": "my-metric1",
            "Namespace": "<namespace:1>",
            "OKActions": [
              "arn:aws:sns:<region>:111111111111:<topic_arn>"
            ],
            "Period": 30,
            "StateReason": "Threshold Crossed: 1 datapoint [21.5 (26/10/23 16:42:00)] was greater than the threshold (2.0).",
            "StateReasonData": {
              "version": "1.0",
              "queryDate": "date",
              "startDate": "date",
              "unit": "Seconds",
              "statistic": "Average",
              "period": 30,
              "recentDatapoints": [
                21.5
              ],
              "threshold": 2.0,
              "evaluatedDatapoints": [
                {
                  "timestamp": "date",
                  "sampleCount": 2.0,
                  "value": 21.5
                }
              ]
            },
            "StateTransitionedTimestamp": "timestamp",
            "StateUpdatedTimestamp": "timestamp",
            "StateValue": "ALARM",
            "Statistic": "Average",
            "Threshold": 2.0,
            "TreatMissingData": "notBreaching",
            "Unit": "Seconds"
          }
        ],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "ok-triggered-describe": {
        "CompositeAlarms": [],
        "MetricAlarms": [
          {
            "ActionsEnabled": true,
            "AlarmActions": [
              "arn:aws:sns:<region>:111111111111:<topic_arn>"
            ],
            "AlarmArn": "arn:aws:cloudwatch:<region>:111111111111:alarm:<alarm-name:1>",
            "AlarmConfigurationUpdatedTimestamp": "timestamp",
            "AlarmDescription": "testing cloudwatch alarms",
            "AlarmName": "<alarm-name:1>",
            "ComparisonOperator": "GreaterThanThreshold",
            "Dimensions": [
              {
                "Name": "InstanceId",
                "Value": "abc"
              }
            ],
            "EvaluationPeriods": 1,
            "InsufficientDataActions": [],
            "MetricName": "my-metric1",
            "Namespace": "<namespace:1>",
            "OKActions": [
              "arn:aws:sns:<region>:111111111111:<topic_arn>"
            ],
            "Period": 30,
            "StateReason": "Threshold Crossed: no datapoints were received for 1 period and 1 missing datapoint was treated as [NonBreaching].",
            "StateReasonData": {
              "version": "1.0",
              "queryDate": "date",
              "unit": "Seconds",
              "statistic": "Average",
              "period": 30,
              "recentDatapoints": [],
              "threshold": 2.0,
              "evaluatedDatapoints": [
                {
                  "timestamp": "date"
                }
              ]
            },
            "StateTransitionedTimestamp": "timestamp",
            "StateUpdatedTimestamp": "timestamp",
            "StateValue": "OK",
            "Statistic": "Average",
            "Threshold": 2.0,
            "TreatMissingData": "notBreaching",
            "Unit": "Seconds"
          }
        ],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "ok-triggered-sqs-msg": {
        "AWSAccountId": "111111111111",
        "AlarmActions": [
          "arn:aws:sns:<region>:111111111111:<topic_arn>"
        ],
        "AlarmArn": "arn:aws:cloudwatch:<region>:111111111111:alarm:<alarm-name:1>",
        "AlarmConfigurationUpdatedTimestamp": "date",
        "AlarmDescription": "testing cloudwatch alarms",
        "AlarmName": "<alarm-name:1>",
        "InsufficientDataActions": [],
        "NewStateReason": "Threshold Crossed: no datapoints were received for 1 period and 1 missing datapoint was treated as [NonBreaching].",
        "NewStateValue": "OK",
        "OKActions": [
          "arn:aws:sns:<region>:111111111111:<topic_arn>"
        ],
        "OldStateValue": "ALARM",
        "Region": "<region-name-full:1>",
        "StateChangeTime": "date",
        "Trigger": {
          "ComparisonOperator": "GreaterThanThreshold",
          "Dimensions": [
            {
              "name": "InstanceId",
              "value": "abc"
            }
          ],
          "EvaluateLowSampleCountPercentile": "",
          "EvaluationPeriods": 1,
          "MetricName": "my-metric1",
          "Namespace": "<namespace:1>",
          "Period": 30,
          "Statistic": "AVERAGE",
          "StatisticType": "Statistic",
          "Threshold": 2.0,
          "TreatMissingData": "notBreaching",
          "Unit": "Seconds"
        }
      }
    }
  },
  "tests/aws/services/cloudwatch/test_cloudwatch.py::TestCloudwatch::test_aws_sqs_metrics_created": {
    "recorded-date": "25-09-2023, 10:25:29",
    "recorded-content": {
      "get_metric_data": {
        "Messages": [],
        "MetricDataResults": [
          {
            "Id": "sent",
            "Label": "NumberOfMessagesSent",
            "StatusCode": "Complete",
            "Timestamps": "timestamp",
            "Values": [
              1.0
            ]
          },
          {
            "Id": "sent_size",
            "Label": "SentMessageSize",
            "StatusCode": "Complete",
            "Timestamps": "timestamp",
            "Values": [
              5.0
            ]
          },
          {
            "Id": "empty_receives",
            "Label": "NumberOfEmptyReceives",
            "StatusCode": "Complete",
            "Timestamps": "timestamp",
            "Values": [
              1.0
            ]
          }
        ],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_metric_data_2": {
        "Messages": [],
        "MetricDataResults": [
          {
            "Id": "num_msg_received",
            "Label": "NumberOfMessagesReceived",
            "StatusCode": "Complete",
            "Timestamps": "timestamp",
            "Values": [
              1.0
            ]
          },
          {
            "Id": "num_msg_deleted",
            "Label": "NumberOfMessagesDeleted",
            "StatusCode": "Complete",
            "Timestamps": "timestamp",
            "Values": [
              1.0
            ]
          }
        ],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/cloudwatch/test_cloudwatch.py::TestCloudwatch::test_put_metric_data_values_list": {
    "recorded-date": "25-09-2023, 10:26:17",
    "recorded-content": {
      "get_metric_statistics": {
        "Datapoints": [
          {
            "Maximum": 10.0,
            "SampleCount": 6.0,
            "Sum": 42.0,
            "Timestamp": "timestamp",
            "Unit": "Count"
          }
        ],
        "Label": "test-metric",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/cloudwatch/test_cloudwatch.py::TestCloudwatch::test_store_tags": {
    "recorded-date": "12-09-2023, 11:54:46",
    "recorded-content": {
      "put_metric_alarm": {
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "describe_alarms": {
        "CompositeAlarms": [],
        "MetricAlarms": [
          {
            "ActionsEnabled": true,
            "AlarmActions": [],
            "AlarmArn": "arn:aws:cloudwatch:<region>:111111111111:alarm:<alarm-name:1>",
            "AlarmConfigurationUpdatedTimestamp": "timestamp",
            "AlarmName": "<alarm-name:1>",
            "ComparisonOperator": "GreaterThanThreshold",
            "Dimensions": [],
            "EvaluationPeriods": 1,
            "InsufficientDataActions": [],
            "MetricName": "store_tags",
            "Namespace": "<namespace:1>",
            "OKActions": [],
            "Period": 60,
            "StateReason": "Unchecked: Initial alarm creation",
            "StateTransitionedTimestamp": "timestamp",
            "StateUpdatedTimestamp": "timestamp",
            "StateValue": "INSUFFICIENT_DATA",
            "Statistic": "Sum",
            "Threshold": 30.0
          }
        ],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "list_tags_for_resource": {
        "Tags": [
          {
            "Key": "tag1",
            "Value": "foo"
          },
          {
            "Key": "tag2",
            "Value": "bar"
          }
        ],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "list_tags_for_resource_post_untag": {
        "Tags": [
          {
            "Key": "tag2",
            "Value": "bar"
          }
        ],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/cloudwatch/test_cloudwatch.py::TestCloudwatch::test_dashboard_lifecycle": {
    "recorded-date": "25-10-2023, 13:16:20",
    "recorded-content": {
      "get_dashboard": {
        "DashboardArn": "arn:aws:cloudwatch::111111111111:dashboard/<dashboard-name:1>",
        "DashboardBody": {
          "widgets": [
            {
              "type": "metric",
              "x": 0,
              "y": 0,
              "width": 6,
              "height": 6,
              "properties": {
                "metrics": [
                  [
                    "AWS/EC2",
                    "CPUUtilization",
                    "InstanceId",
                    "i-12345678"
                  ]
                ],
                "region": "<region>",
                "view": "timeSeries",
                "stacked": false
              }
            }
          ]
        },
        "DashboardName": "<dashboard-name:1>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/cloudwatch/test_cloudwatch.py::TestCloudwatch::test_create_metric_stream": {
    "recorded-date": "26-10-2023, 09:12:10",
    "recorded-content": {
      "create_metric_stream": {
        "Arn": "arn:aws:cloudwatch:<region>:111111111111:metric-stream/<name:1>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_metric_stream": {
        "Arn": "arn:aws:cloudwatch:<region>:111111111111:metric-stream/<name:1>",
        "CreationDate": "datetime",
        "FirehoseArn": "<firehose-arn:1>",
        "IncludeLinkedAccountsMetrics": false,
        "LastUpdateDate": "datetime",
        "Name": "<name:1>",
        "OutputFormat": "json",
        "RoleArn": "<role-arn:1>",
        "State": "running",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "start_metric_stream": {
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "stop_metric_stream": {
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "delete_metric_stream": {
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/cloudwatch/test_cloudwatch.py::TestCloudwatch::test_insight_rule": {
    "recorded-date": "26-10-2023, 10:07:59",
    "recorded-content": {
      "create_insight_rule": {
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "describe_insight_rule": {
        "InsightRules": [
          {
            "Definition": {
              "Schema": {
                "Name": "<name:1>",
                "Version": 1
              },
              "LogGroupNames": [
                "API-Gateway-Access-Logs*"
              ],
              "LogFormat": "CLF",
              "Fields": {
                "4": "IpAddress",
                "7": "StatusCode"
              },
              "Contribution": {
                "Keys": [
                  "IpAddress"
                ],
                "Filters": [
                  {
                    "Match": "StatusCode",
                    "EqualTo": 200
                  }
                ]
              },
              "AggregateOn": "Count"
            },
            "ManagedRule": false,
            "Name": "<name:2>",
            "Schema": "<name:1>/1",
            "State": "ENABLED"
          },
          {
            "Definition": {
              "Schema": {
                "Name": "<name:1>",
                "Version": 1
              },
              "LogGroupNames": [
                "API-Gateway-Access-Logs*"
              ],
              "LogFormat": "CLF",
              "Fields": {
                "4": "IpAddress",
                "7": "StatusCode"
              },
              "Contribution": {
                "Keys": [
                  "IpAddress"
                ],
                "Filters": [
                  {
                    "Match": "StatusCode",
                    "EqualTo": 200
                  }
                ]
              },
              "AggregateOn": "Count"
            },
            "ManagedRule": false,
            "Name": "<name:3>",
            "Schema": "<name:1>/1",
            "State": "ENABLED"
          },
          {
            "Definition": {
              "Schema": {
                "Name": "<name:1>",
                "Version": 1
              },
              "LogGroupNames": [
                "API-Gateway-Access-Logs*"
              ],
              "LogFormat": "CLF",
              "Fields": {
                "4": "IpAddress",
                "7": "StatusCode"
              },
              "Contribution": {
                "Keys": [
                  "IpAddress"
                ],
                "Filters": [
                  {
                    "Match": "StatusCode",
                    "EqualTo": 200
                  }
                ]
              },
              "AggregateOn": "Count"
            },
            "ManagedRule": false,
            "Name": "<name:4>",
            "Schema": "<name:1>/1",
            "State": "ENABLED"
          }
        ],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "disable_insight_rule": {
        "Failures": [],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "enable_insight_rule": {
        "Failures": [],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_insight_rule_report": {
        "AggregateValue": 0.0,
        "AggregationStatistic": "SampleCount",
        "ApproximateUniqueCount": 0,
        "Contributors": [],
        "KeyLabels": [
          "IpAddress"
        ],
        "MetricDatapoints": [
          {
            "Timestamp": "timestamp",
            "UniqueContributors": 0.0
          },
          {
            "Timestamp": "timestamp",
            "UniqueContributors": 0.0
          },
          {
            "Timestamp": "timestamp",
            "UniqueContributors": 0.0
          },
          {
            "Timestamp": "timestamp",
            "UniqueContributors": 0.0
          },
          {
            "Timestamp": "timestamp",
            "UniqueContributors": 0.0
          },
          {
            "Timestamp": "timestamp",
            "UniqueContributors": 0.0
          },
          {
            "Timestamp": "timestamp",
            "UniqueContributors": 0.0
          },
          {
            "Timestamp": "timestamp",
            "UniqueContributors": 0.0
          },
          {
            "Timestamp": "timestamp",
            "UniqueContributors": 0.0
          },
          {
            "Timestamp": "timestamp",
            "UniqueContributors": 0.0
          },
          {
            "Timestamp": "timestamp",
            "UniqueContributors": 0.0
          },
          {
            "Timestamp": "timestamp",
            "UniqueContributors": 0.0
          },
          {
            "Timestamp": "timestamp",
            "UniqueContributors": 0.0
          }
        ],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "delete_insight_rule": {
        "Failures": [],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/cloudwatch/test_cloudwatch.py::TestCloudwatch::test_anomaly_detector_lifecycle": {
    "recorded-date": "26-10-2023, 10:42:43",
    "recorded-content": {
      "create_anomaly_detector": {
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "describe_anomaly_detector": {
        "AnomalyDetectors": [
          {
            "Configuration": {
              "ExcludedTimeRanges": []
            },
            "Dimensions": [
              {
                "Name": "DimensionName",
                "Value": "DimensionValue"
              }
            ],
            "MetricName": "MyMetric",
            "Namespace": "MyNamespace",
            "SingleMetricAnomalyDetector": {
              "Dimensions": [
                {
                  "Name": "DimensionName",
                  "Value": "DimensionValue"
                }
              ],
              "MetricName": "MyMetric",
              "Namespace": "MyNamespace",
              "Stat": "Sum"
            },
            "Stat": "Sum",
            "StateValue": "PENDING_TRAINING"
          }
        ],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "delete_anomaly_detector": {
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  }
}
