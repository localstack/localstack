{
  "tests/aws/services/cloudwatch/test_cloudwatch.py::TestCloudWatchMultiProtocol::test_basic_operations_multiple_protocols[json]": {
    "recorded-date": "18-09-2025, 13:56:03",
    "recorded-content": {
      "describe-alarms": {
        "CompositeAlarms": [],
        "LogAlarms": [],
        "MetricAlarms": []
      },
      "get-metric-data": {
        "Messages": [],
        "MetricDataResults": [
          {
            "Id": "some",
            "Label": "<label:1>",
            "StatusCode": "Complete",
            "Timestamps": "timestamp",
            "Values": [
              41.0
            ]
          },
          {
            "Id": "part",
            "Label": "<label:2>",
            "StatusCode": "Complete",
            "Timestamps": "timestamp",
            "Values": [
              23.0
            ]
          }
        ]
      }
    }
  },
  "tests/aws/services/cloudwatch/test_cloudwatch.py::TestCloudWatchMultiProtocol::test_basic_operations_multiple_protocols[smithy-rpc-v2-cbor]": {
    "recorded-date": "18-09-2025, 13:56:06",
    "recorded-content": {
      "describe-alarms": {
        "CompositeAlarms": [],
        "LogAlarms": [],
        "MetricAlarms": []
      },
      "get-metric-data": {
        "Messages": [],
        "MetricDataResults": [
          {
            "Id": "some",
            "Label": "<label:1>",
            "StatusCode": "Complete",
            "Timestamps": "timestamp",
            "Values": [
              41.0
            ]
          },
          {
            "Id": "part",
            "Label": "<label:2>",
            "StatusCode": "Complete",
            "Timestamps": "timestamp",
            "Values": [
              23.0
            ]
          }
        ]
      }
    }
  },
  "tests/aws/services/cloudwatch/test_cloudwatch.py::TestCloudWatchMultiProtocol::test_basic_operations_multiple_protocols[query]": {
    "recorded-date": "18-09-2025, 13:56:09",
    "recorded-content": {
      "describe-alarms": {
        "DescribeAlarmsResponse": {
          "@xmlns": "http://monitoring.amazonaws.com/doc/2010-08-01/",
          "DescribeAlarmsResult": {
            "CompositeAlarms": null,
            "LogAlarms": null,
            "MetricAlarms": null
          }
        }
      },
      "get-metric-data": {
        "GetMetricDataResponse": {
          "@xmlns": "http://monitoring.amazonaws.com/doc/2010-08-01/",
          "GetMetricDataResult": {
            "Messages": null,
            "MetricDataResults": {
              "member": [
                {
                  "Id": "some",
                  "Label": "<label:1>",
                  "StatusCode": "Complete",
                  "Timestamps": "timestamp",
                  "Values": {
                    "member": "41.0"
                  }
                },
                {
                  "Id": "part",
                  "Label": "<label:2>",
                  "StatusCode": "Complete",
                  "Timestamps": "timestamp",
                  "Values": {
                    "member": "23.0"
                  }
                }
              ]
            }
          }
        }
      }
    }
  },
  "tests/aws/services/cloudwatch/test_cloudwatch.py::TestCloudwatch::test_put_metric_data_values_list[query]": {
    "recorded-date": "19-09-2025, 17:27:14",
    "recorded-content": {
      "get_metric_statistics": {
        "Datapoints": [
          {
            "Maximum": 10.0,
            "SampleCount": 6.0,
            "Sum": 42.0,
            "Timestamp": "timestamp",
            "Unit": "Count"
          }
        ],
        "Label": "test-metric",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/cloudwatch/test_cloudwatch.py::TestCloudwatch::test_put_metric_data_values_list[json]": {
    "recorded-date": "19-09-2025, 17:27:15",
    "recorded-content": {
      "get_metric_statistics": {
        "Datapoints": [
          {
            "Maximum": 10.0,
            "SampleCount": 6.0,
            "Sum": 42.0,
            "Timestamp": "timestamp",
            "Unit": "Count"
          }
        ],
        "Label": "test-metric",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/cloudwatch/test_cloudwatch.py::TestCloudwatch::test_put_metric_data_values_list[smithy-rpc-v2-cbor]": {
    "recorded-date": "19-09-2025, 17:27:17",
    "recorded-content": {
      "get_metric_statistics": {
        "Datapoints": [
          {
            "Maximum": 10.0,
            "SampleCount": 6.0,
            "Sum": 42.0,
            "Timestamp": "timestamp",
            "Unit": "Count"
          }
        ],
        "Label": "test-metric",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/cloudwatch/test_cloudwatch.py::TestCloudwatch::test_put_metric_data_validation[query]": {
    "recorded-date": "19-09-2025, 17:28:29",
    "recorded-content": {
      "invalid-param-combination": {
        "Error": {
          "Code": "InvalidParameterCombination",
          "Message": "The parameters MetricData.member.1.Value and MetricData.member.1.Values are mutually exclusive and you have specified both.",
          "Type": "Sender"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "invalid-param-value": {
        "Error": {
          "Code": "InvalidParameterValue",
          "Message": "The parameters MetricData.member.1.Values and MetricData.member.1.Counts must be of the same size.",
          "Type": "Sender"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "invalid-param-combination-2": {
        "Error": {
          "Code": "InvalidParameterCombination",
          "Message": "The parameters MetricData.member.1.Value and MetricData.member.1.StatisticValues are mutually exclusive and you have specified both.",
          "Type": "Sender"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      }
    }
  },
  "tests/aws/services/cloudwatch/test_cloudwatch.py::TestCloudwatch::test_put_metric_data_validation[json]": {
    "recorded-date": "19-09-2025, 17:28:30",
    "recorded-content": {
      "invalid-param-combination": {
        "Error": {
          "Code": "InvalidParameterCombination",
          "Message": "The parameters MetricData.member.1.Value and MetricData.member.1.Values are mutually exclusive and you have specified both.",
          "QueryErrorCode": "InvalidParameterCombinationException",
          "Type": "Sender"
        },
        "message": "The parameters MetricData.member.1.Value and MetricData.member.1.Values are mutually exclusive and you have specified both.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "invalid-param-value": {
        "Error": {
          "Code": "InvalidParameterValue",
          "Message": "The parameters MetricData.member.1.Values and MetricData.member.1.Counts must be of the same size.",
          "QueryErrorCode": "InvalidParameterValueException",
          "Type": "Sender"
        },
        "message": "The parameters MetricData.member.1.Values and MetricData.member.1.Counts must be of the same size.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "invalid-param-combination-2": {
        "Error": {
          "Code": "InvalidParameterCombination",
          "Message": "The parameters MetricData.member.1.Value and MetricData.member.1.StatisticValues are mutually exclusive and you have specified both.",
          "QueryErrorCode": "InvalidParameterCombinationException",
          "Type": "Sender"
        },
        "message": "The parameters MetricData.member.1.Value and MetricData.member.1.StatisticValues are mutually exclusive and you have specified both.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      }
    }
  },
  "tests/aws/services/cloudwatch/test_cloudwatch.py::TestCloudwatch::test_put_metric_data_validation[smithy-rpc-v2-cbor]": {
    "recorded-date": "19-09-2025, 17:28:32",
    "recorded-content": {
      "invalid-param-combination": {
        "Error": {
          "Code": "InvalidParameterCombination",
          "Message": "The parameters MetricData.member.1.Value and MetricData.member.1.Values are mutually exclusive and you have specified both.",
          "QueryErrorCode": "InvalidParameterCombinationException",
          "Type": "Sender"
        },
        "message": "The parameters MetricData.member.1.Value and MetricData.member.1.Values are mutually exclusive and you have specified both.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "invalid-param-value": {
        "Error": {
          "Code": "InvalidParameterValue",
          "Message": "The parameters MetricData.member.1.Values and MetricData.member.1.Counts must be of the same size.",
          "QueryErrorCode": "InvalidParameterValueException",
          "Type": "Sender"
        },
        "message": "The parameters MetricData.member.1.Values and MetricData.member.1.Counts must be of the same size.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "invalid-param-combination-2": {
        "Error": {
          "Code": "InvalidParameterCombination",
          "Message": "The parameters MetricData.member.1.Value and MetricData.member.1.StatisticValues are mutually exclusive and you have specified both.",
          "QueryErrorCode": "InvalidParameterCombinationException",
          "Type": "Sender"
        },
        "message": "The parameters MetricData.member.1.Value and MetricData.member.1.StatisticValues are mutually exclusive and you have specified both.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      }
    }
  }
}
