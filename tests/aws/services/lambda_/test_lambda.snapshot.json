{
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaFeatures::test_basic_invoke": {
    "recorded-date": "09-09-2022, 19:13:34",
    "recorded-content": {
      "lambda_create_fn": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "code-sha256",
        "CodeSize": "<code-size>",
        "Description": "",
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "FunctionName": "<function-name:1>",
        "Handler": "index.handler",
        "LastModified": "date",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:1>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.9",
        "State": "Pending",
        "StateReason": "The function is being created.",
        "StateReasonCode": "Creating",
        "Timeout": 3,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "$LATEST",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "lambda_create_fn_2": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "code-sha256",
        "CodeSize": "<code-size>",
        "Description": "",
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:2>",
        "FunctionName": "<function-name:2>",
        "Handler": "index.handler",
        "LastModified": "date",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:2>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.9",
        "State": "Pending",
        "StateReason": "The function is being created.",
        "StateReasonCode": "Creating",
        "Timeout": 3,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "$LATEST",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "lambda_get_fn": {
        "Code": {
          "Location": "<location>",
          "RepositoryType": "S3"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "code-sha256",
          "CodeSize": "<code-size>",
          "Description": "",
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "Handler": "index.handler",
          "LastModified": "date",
          "LastUpdateStatus": "Successful",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:3>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.9",
          "State": "Active",
          "Timeout": 3,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "lambda_get_fn_2": {
        "Code": {
          "Location": "<location>",
          "RepositoryType": "S3"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "code-sha256",
          "CodeSize": "<code-size>",
          "Description": "",
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:2>",
          "FunctionName": "<function-name:2>",
          "Handler": "index.handler",
          "LastModified": "date",
          "LastUpdateStatus": "Successful",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:4>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.9",
          "State": "Active",
          "Timeout": 3,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "lambda_invoke_result": {
        "ExecutedVersion": "$LATEST",
        "Payload": {},
        "StatusCode": 200,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaBehavior::test_lambda_cache_local[nodejs]": {
    "recorded-date": "02-05-2023, 16:51:46",
    "recorded-content": {
      "first_invoke_result": {
        "ExecutedVersion": "$LATEST",
        "Payload": {
          "counter": 0
        },
        "StatusCode": 200,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "second_invoke_result": {
        "ExecutedVersion": "$LATEST",
        "Payload": {
          "counter": 1
        },
        "StatusCode": 200,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaBehavior::test_lambda_cache_local[python]": {
    "recorded-date": "02-05-2023, 16:51:48",
    "recorded-content": {
      "first_invoke_result": {
        "ExecutedVersion": "$LATEST",
        "Payload": {
          "counter": 0
        },
        "StatusCode": 200,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "second_invoke_result": {
        "ExecutedVersion": "$LATEST",
        "Payload": {
          "counter": 1
        },
        "StatusCode": 200,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaBehavior::test_lambda_invoke_with_timeout": {
    "recorded-date": "02-05-2023, 16:51:53",
    "recorded-content": {
      "create-result": {
        "CreateEventSourceMappingResponse": null,
        "CreateFunctionResponse": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "code-sha256",
          "CodeSize": "<code-size>",
          "Description": "",
          "Environment": {
            "Variables": {}
          },
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "Handler": "handler.handler",
          "LastModified": "date",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:1>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.8",
          "RuntimeVersionConfig": {
            "RuntimeVersionArn": "arn:aws:lambda:<region>::runtime:<resource:2>"
          },
          "SnapStart": {
            "ApplyOn": "None",
            "OptimizationStatus": "Off"
          },
          "State": "Pending",
          "StateReason": "The function is being created.",
          "StateReasonCode": "Creating",
          "Timeout": 1,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST",
          "ResponseMetadata": {
            "HTTPHeaders": {},
            "HTTPStatusCode": 201
          }
        }
      },
      "invoke-result": {
        "ExecutedVersion": "$LATEST",
        "FunctionError": "Unhandled",
        "Payload": {
          "errorMessage": "date <timeout_error_msg> Task timed out after 1.00 seconds"
        },
        "StatusCode": 200,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaBehavior::test_lambda_invoke_no_timeout": {
    "recorded-date": "02-05-2023, 16:52:03",
    "recorded-content": {
      "create-result": {
        "CreateEventSourceMappingResponse": null,
        "CreateFunctionResponse": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "code-sha256",
          "CodeSize": "<code-size>",
          "Description": "",
          "Environment": {
            "Variables": {}
          },
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "Handler": "handler.handler",
          "LastModified": "date",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:1>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.8",
          "RuntimeVersionConfig": {
            "RuntimeVersionArn": "arn:aws:lambda:<region>::runtime:<resource:2>"
          },
          "SnapStart": {
            "ApplyOn": "None",
            "OptimizationStatus": "Off"
          },
          "State": "Pending",
          "StateReason": "The function is being created.",
          "StateReasonCode": "Creating",
          "Timeout": 2,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST",
          "ResponseMetadata": {
            "HTTPHeaders": {},
            "HTTPStatusCode": 201
          }
        }
      },
      "invoke-result": {
        "ExecutedVersion": "$LATEST",
        "Payload": "null",
        "StatusCode": 200,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaBaseFeatures::test_function_state": {
    "recorded-date": "02-05-2023, 16:51:31",
    "recorded-content": {
      "create-fn-response": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "code-sha256",
        "CodeSize": "<code-size>",
        "Description": "",
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "FunctionName": "<function-name:1>",
        "Handler": "handler.handler",
        "LastModified": "date",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:1>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.10",
        "RuntimeVersionConfig": {
          "RuntimeVersionArn": "arn:aws:lambda:<region>::runtime:<resource:2>"
        },
        "SnapStart": {
          "ApplyOn": "None",
          "OptimizationStatus": "Off"
        },
        "State": "Pending",
        "StateReason": "The function is being created.",
        "StateReasonCode": "Creating",
        "Timeout": 3,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "$LATEST",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "get-fn-response": {
        "Code": {
          "Location": "<location>",
          "RepositoryType": "S3"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "code-sha256",
          "CodeSize": "<code-size>",
          "Description": "",
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "Handler": "handler.handler",
          "LastModified": "date",
          "LastUpdateStatus": "Successful",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:2>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.10",
          "RuntimeVersionConfig": {
            "RuntimeVersionArn": "arn:aws:lambda:<region>::runtime:<resource:2>"
          },
          "SnapStart": {
            "ApplyOn": "None",
            "OptimizationStatus": "Off"
          },
          "State": "Active",
          "Timeout": 3,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaFeatures::test_invocation_with_logs[python3.10]": {
    "recorded-date": "17-10-2023, 15:46:02",
    "recorded-content": {
      "invoke": {
        "ExecutedVersion": "$LATEST",
        "LogResult": "log-result",
        "Payload": {},
        "StatusCode": 200,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "logs": {
        "logs": [
          "START RequestId: <request-id> Version: $LATEST\n",
          "{}\n",
          "END RequestId: <request-id>\n",
          "REPORT RequestId: <request-id>\tDuration: <duration> ms\tBilled Duration: <duration> ms\tMemory Size: 128 MB\tMax Memory Used: <memory> MB\tInit Duration: <duration> ms\t\n"
        ]
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaFeatures::test_invocation_with_logs[nodejs16.x]": {
    "recorded-date": "17-10-2023, 15:45:59",
    "recorded-content": {
      "invoke": {
        "ExecutedVersion": "$LATEST",
        "LogResult": "log-result",
        "Payload": {},
        "StatusCode": 200,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "logs": {
        "logs": [
          "START RequestId: <request-id> Version: $LATEST\n",
          "date\t<request-id>\tINFO\t{}\n",
          "END RequestId: <request-id>\n",
          "REPORT RequestId: <request-id>\tDuration: <duration> ms\tBilled Duration: <duration> ms\tMemory Size: 128 MB\tMax Memory Used: <memory> MB\tInit Duration: <duration> ms\t\n"
        ]
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaFeatures::test_invocation_type_request_response[python3.9]": {
    "recorded-date": "17-02-2023, 14:01:34",
    "recorded-content": {
      "invoke-result": {
        "ExecutedVersion": "$LATEST",
        "Payload": {},
        "StatusCode": 200,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaFeatures::test_invocation_type_request_response[python3.10]": {
    "recorded-date": "02-05-2023, 16:52:47",
    "recorded-content": {
      "invoke-result": {
        "ExecutedVersion": "$LATEST",
        "Payload": {},
        "StatusCode": 200,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaFeatures::test_invocation_type_request_response[nodejs16.x]": {
    "recorded-date": "02-05-2023, 16:52:44",
    "recorded-content": {
      "invoke-result": {
        "ExecutedVersion": "$LATEST",
        "Payload": {},
        "StatusCode": 200,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaFeatures::test_invocation_type_event[python3.9]": {
    "recorded-date": "17-02-2023, 14:01:40",
    "recorded-content": {
      "invoke-result": {
        "Payload": "",
        "StatusCode": 202,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 202
        }
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaFeatures::test_invocation_type_event[python3.10]": {
    "recorded-date": "02-05-2023, 16:52:51",
    "recorded-content": {
      "invoke-result": {
        "Payload": "",
        "StatusCode": 202,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 202
        }
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaFeatures::test_invocation_type_event[nodejs16.x]": {
    "recorded-date": "02-05-2023, 16:52:49",
    "recorded-content": {
      "invoke-result": {
        "Payload": "",
        "StatusCode": 202,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 202
        }
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaFeatures::test_invocation_type_dry_run[python3.9]": {
    "recorded-date": "09-09-2022, 19:15:23",
    "recorded-content": {
      "invoke-result": {
        "Payload": "",
        "StatusCode": 204,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 204
        }
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaFeatures::test_invocation_type_dry_run[python3.10]": {
    "recorded-date": "26-04-2023, 19:37:23",
    "recorded-content": {
      "invoke-result": {
        "Payload": "",
        "StatusCode": 204,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 204
        }
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaFeatures::test_invocation_type_dry_run[nodejs16.x]": {
    "recorded-date": "09-09-2022, 19:15:38",
    "recorded-content": {
      "invoke-result": {
        "Payload": "",
        "StatusCode": 204,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 204
        }
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaFeatures::test_lambda_environment": {
    "recorded-date": "09-09-2022, 20:46:21",
    "recorded-content": {
      "creation-result": {
        "CreateEventSourceMappingResponse": null,
        "CreateFunctionResponse": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "code-sha256",
          "CodeSize": "<code-size>",
          "Description": "",
          "Environment": {
            "Variables": {
              "Hello": "World"
            }
          },
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "Handler": "handler.handler",
          "LastModified": "date",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:1>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.9",
          "State": "Pending",
          "StateReason": "The function is being created.",
          "StateReasonCode": "Creating",
          "Timeout": 30,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST",
          "ResponseMetadata": {
            "HTTPHeaders": {},
            "HTTPStatusCode": 201
          }
        }
      },
      "invocation-result": {
        "ExecutedVersion": "$LATEST",
        "Payload": {
          "Hello": "World"
        },
        "StatusCode": 200,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get-configuration-result": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "code-sha256",
        "CodeSize": "<code-size>",
        "Description": "",
        "Environment": {
          "Variables": {
            "Hello": "World"
          }
        },
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "FunctionName": "<function-name:1>",
        "Handler": "handler.handler",
        "LastModified": "date",
        "LastUpdateStatus": "Successful",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:2>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.9",
        "State": "Active",
        "Timeout": 30,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "$LATEST",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaFeatures::test_invocation_with_qualifier": {
    "recorded-date": "02-05-2023, 16:53:01",
    "recorded-content": {
      "creation-response": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "code-sha256",
        "CodeSize": "<code-size>",
        "Description": "",
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "FunctionName": "<function-name:1>",
        "Handler": "handler.handler",
        "LastModified": "date",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:1>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.10",
        "RuntimeVersionConfig": {
          "RuntimeVersionArn": "arn:aws:lambda:<region>::runtime:<resource:2>"
        },
        "SnapStart": {
          "ApplyOn": "None",
          "OptimizationStatus": "Off"
        },
        "State": "Pending",
        "StateReason": "The function is being created.",
        "StateReasonCode": "Creating",
        "Timeout": 10,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "1",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "log_result": {
        "log_result": [
          "START RequestId: <uuid:2> Version: 1",
          "Lambda log message - print function",
          "[INFO]\tdate\t<uuid:2>\tLambda log message - logging module",
          "END RequestId: <uuid:2>"
        ]
      },
      "invocation-response": {
        "ExecutedVersion": "1",
        "LogResult": "<log-result:1>",
        "Payload": {
          "event": {
            "foo": "bar with 'quotes\""
          },
          "context": {
            "invoked_function_arn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:1",
            "function_version": "1",
            "function_name": "<function-name:1>",
            "memory_limit_in_mb": "128",
            "aws_request_id": "<uuid:2>",
            "log_group_name": "/aws/lambda/<function-name:1>",
            "log_stream_name": "<log-stream-name:1>",
            "client_context": null
          }
        },
        "StatusCode": 200,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaFeatures::test_upload_lambda_from_s3": {
    "recorded-date": "02-05-2023, 16:53:08",
    "recorded-content": {
      "creation-response": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "code-sha256",
        "CodeSize": "<code-size>",
        "Description": "",
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "FunctionName": "<function-name:1>",
        "Handler": "handler.handler",
        "LastModified": "date",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:1>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.10",
        "RuntimeVersionConfig": {
          "RuntimeVersionArn": "arn:aws:lambda:<region>::runtime:<resource:2>"
        },
        "SnapStart": {
          "ApplyOn": "None",
          "OptimizationStatus": "Off"
        },
        "State": "Pending",
        "StateReason": "The function is being created.",
        "StateReasonCode": "Creating",
        "Timeout": 10,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "$LATEST",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "invocation-response": {
        "ExecutedVersion": "$LATEST",
        "Payload": {
          "event": {
            "foo": "bar with 'quotes\""
          },
          "context": {
            "invoked_function_arn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
            "function_version": "$LATEST",
            "function_name": "<function-name:1>",
            "memory_limit_in_mb": "128",
            "aws_request_id": "<uuid:2>",
            "log_group_name": "/aws/lambda/<function-name:1>",
            "log_stream_name": "<log-stream-name:1>",
            "client_context": null
          }
        },
        "StatusCode": 200,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaFeatures::test_lambda_with_context": {
    "recorded-date": "09-09-2022, 20:19:33",
    "recorded-content": {
      "creation": {
        "CreateEventSourceMappingResponse": null,
        "CreateFunctionResponse": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "code-sha256",
          "CodeSize": "<code-size>",
          "Description": "",
          "Environment": {
            "Variables": {}
          },
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "Handler": "lambda_integration.handler",
          "LastModified": "date",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:1>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "nodejs16.x",
          "State": "Pending",
          "StateReason": "The function is being created.",
          "StateReasonCode": "Creating",
          "Timeout": 30,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST",
          "ResponseMetadata": {
            "HTTPHeaders": {},
            "HTTPStatusCode": 201
          }
        }
      },
      "invocation": {
        "ExecutedVersion": "$LATEST",
        "Payload": {
          "context": {
            "callbackWaitsForEmptyEventLoop": true,
            "functionVersion": "$LATEST",
            "functionName": "<function-name:1>",
            "memoryLimitInMB": "128",
            "logGroupName": "/aws/lambda/<function-name:1>",
            "logStreamName": "<log-stream-name:1>",
            "clientContext": {
              "custom": {
                "foo": "bar"
              },
              "client": {
                "snap": [
                  "crackle",
                  "pop"
                ]
              },
              "env": {
                "fizz": "buzz"
              }
            },
            "invokedFunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
            "awsRequestId": "<uuid:2>"
          }
        },
        "StatusCode": 200,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaConcurrency::test_lambda_concurrency_block": {
    "recorded-date": "29-08-2023, 15:26:41",
    "recorded-content": {
      "v1_result": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "code-sha256",
        "CodeSize": "<code-size>",
        "Description": "",
        "Environment": {
          "Variables": {}
        },
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:1",
        "FunctionName": "<function-name:1>",
        "Handler": "handler.handler",
        "LastModified": "date",
        "LastUpdateStatus": "Successful",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:1>",
        "Role": "arn:aws:iam::111111111111:role/<resource:2>",
        "Runtime": "python3.10",
        "RuntimeVersionConfig": {
          "RuntimeVersionArn": "arn:aws:lambda:<region>::runtime:<resource:3>"
        },
        "SnapStart": {
          "ApplyOn": "None",
          "OptimizationStatus": "Off"
        },
        "State": "Active",
        "Timeout": 30,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "1",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "reserved_concurrency_result": {
        "ReservedConcurrentExecutions": 1,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "invoke_latest_before_block": {
        "ExecutedVersion": "$LATEST",
        "Payload": {
          "hello": "world"
        },
        "StatusCode": 200,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "provisioned_concurrency_result": {
        "AllocatedProvisionedConcurrentExecutions": 0,
        "AvailableProvisionedConcurrentExecutions": 0,
        "LastModified": "date",
        "RequestedProvisionedConcurrentExecutions": 1,
        "Status": "IN_PROGRESS",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 202
        }
      },
      "invoke_latest_first_exc": {
        "Error": {
          "Code": "TooManyRequestsException",
          "Message": "Rate Exceeded."
        },
        "Reason": "ReservedFunctionConcurrentInvocationLimitExceeded",
        "Type": "User",
        "message": "Rate Exceeded.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 429
        }
      },
      "invoke_v1_after_block": {
        "ExecutedVersion": "1",
        "Payload": {
          "hello": "world"
        },
        "StatusCode": 200,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "invoke_latest_second_exc": {
        "Error": {
          "Code": "TooManyRequestsException",
          "Message": "Rate Exceeded."
        },
        "Reason": "ReservedFunctionConcurrentInvocationLimitExceeded",
        "Type": "User",
        "message": "Rate Exceeded.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 429
        }
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaVersions::test_lambda_versions_with_code_changes": {
    "recorded-date": "02-05-2023, 17:00:57",
    "recorded-content": {
      "create_response": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "code-sha256",
        "CodeSize": "<code-size>",
        "Description": "No version :(",
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "FunctionName": "<function-name:1>",
        "Handler": "handler.handler",
        "LastModified": "date",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:1>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.10",
        "RuntimeVersionConfig": {
          "RuntimeVersionArn": "arn:aws:lambda:<region>::runtime:<resource:2>"
        },
        "SnapStart": {
          "ApplyOn": "None",
          "OptimizationStatus": "Off"
        },
        "State": "Pending",
        "StateReason": "The function is being created.",
        "StateReasonCode": "Creating",
        "Timeout": 3,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "$LATEST",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "first_publish_response": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "code-sha256",
        "CodeSize": "<code-size>",
        "Description": "First version description :)",
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:1",
        "FunctionName": "<function-name:1>",
        "Handler": "handler.handler",
        "LastModified": "date",
        "LastUpdateStatus": "Successful",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:2>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.10",
        "RuntimeVersionConfig": {
          "RuntimeVersionArn": "arn:aws:lambda:<region>::runtime:<resource:2>"
        },
        "SnapStart": {
          "ApplyOn": "None",
          "OptimizationStatus": "Off"
        },
        "State": "Active",
        "Timeout": 3,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "1",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "update_lambda_response": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "code-sha256",
        "CodeSize": "<code-size>",
        "Description": "No version :(",
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "FunctionName": "<function-name:1>",
        "Handler": "handler.handler",
        "LastModified": "date",
        "LastUpdateStatus": "InProgress",
        "LastUpdateStatusReason": "The function is being created.",
        "LastUpdateStatusReasonCode": "Creating",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:3>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.10",
        "RuntimeVersionConfig": {
          "RuntimeVersionArn": "arn:aws:lambda:<region>::runtime:<resource:2>"
        },
        "SnapStart": {
          "ApplyOn": "None",
          "OptimizationStatus": "Off"
        },
        "State": "Active",
        "Timeout": 3,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "$LATEST",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "invocation_result_latest": {
        "ExecutedVersion": "$LATEST",
        "Payload": {
          "version_id": "version2",
          "invoked_arn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "version_from_ctx": "$LATEST"
        },
        "StatusCode": 200,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "invocation_result_v1": {
        "ExecutedVersion": "1",
        "Payload": {
          "version_id": "version1",
          "invoked_arn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:1",
          "version_from_ctx": "1"
        },
        "StatusCode": 200,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "second_publish_response": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "code-sha256",
        "CodeSize": "<code-size>",
        "Description": "Second version description :)",
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:2",
        "FunctionName": "<function-name:1>",
        "Handler": "handler.handler",
        "LastModified": "date",
        "LastUpdateStatus": "Successful",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:4>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.10",
        "RuntimeVersionConfig": {
          "RuntimeVersionArn": "arn:aws:lambda:<region>::runtime:<resource:2>"
        },
        "SnapStart": {
          "ApplyOn": "None",
          "OptimizationStatus": "Off"
        },
        "State": "Active",
        "Timeout": 3,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "2",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "invocation_result_v2": {
        "ExecutedVersion": "2",
        "Payload": {
          "version_id": "version2",
          "invoked_arn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:2",
          "version_from_ctx": "2"
        },
        "StatusCode": 200,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "update_lambda_response_with_publish": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "code-sha256",
        "CodeSize": "<code-size>",
        "Description": "No version :(",
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:3",
        "FunctionName": "<function-name:1>",
        "Handler": "handler.handler",
        "LastModified": "date",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:5>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.10",
        "RuntimeVersionConfig": {
          "RuntimeVersionArn": "arn:aws:lambda:<region>::runtime:<resource:2>"
        },
        "SnapStart": {
          "ApplyOn": "None",
          "OptimizationStatus": "Off"
        },
        "State": "Pending",
        "StateReason": "The function is being created.",
        "StateReasonCode": "Creating",
        "Timeout": 3,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "3",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "invocation_result_v3": {
        "ExecutedVersion": "3",
        "Payload": {
          "version_id": "version3",
          "invoked_arn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:3",
          "version_from_ctx": "3"
        },
        "StatusCode": 200,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "invocation_result_latest_end": {
        "ExecutedVersion": "$LATEST",
        "Payload": {
          "version_id": "version3",
          "invoked_arn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "version_from_ctx": "$LATEST"
        },
        "StatusCode": 200,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "invocation_result_v2_end": {
        "ExecutedVersion": "2",
        "Payload": {
          "version_id": "version2",
          "invoked_arn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:2",
          "version_from_ctx": "2"
        },
        "StatusCode": 200,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "invocation_result_v1_end": {
        "ExecutedVersion": "1",
        "Payload": {
          "version_id": "version1",
          "invoked_arn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:1",
          "version_from_ctx": "1"
        },
        "StatusCode": 200,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaAliases::test_lambda_alias_moving": {
    "recorded-date": "02-05-2023, 17:01:03",
    "recorded-content": {
      "create_response": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "code-sha256",
        "CodeSize": "<code-size>",
        "Description": "No version :(",
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "FunctionName": "<function-name:1>",
        "Handler": "handler.handler",
        "LastModified": "date",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:1>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.10",
        "RuntimeVersionConfig": {
          "RuntimeVersionArn": "arn:aws:lambda:<region>::runtime:<resource:2>"
        },
        "SnapStart": {
          "ApplyOn": "None",
          "OptimizationStatus": "Off"
        },
        "State": "Pending",
        "StateReason": "The function is being created.",
        "StateReasonCode": "Creating",
        "Timeout": 3,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "$LATEST",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "create_alias_response": {
        "AliasArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:alias1",
        "Description": "",
        "FunctionVersion": "1",
        "Name": "alias1",
        "RevisionId": "<uuid:2>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "invocation_result_qualifier_v1": {
        "ExecutedVersion": "1",
        "Payload": {
          "version_id": "version1",
          "invoked_arn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:alias1",
          "version_from_ctx": "1"
        },
        "StatusCode": 200,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "invocation_result_qualifier_v1_arn": {
        "ExecutedVersion": "1",
        "Payload": {
          "version_id": "version1",
          "invoked_arn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:alias1",
          "version_from_ctx": "1"
        },
        "StatusCode": 200,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "update_lambda_response": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "code-sha256",
        "CodeSize": "<code-size>",
        "Description": "No version :(",
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "FunctionName": "<function-name:1>",
        "Handler": "handler.handler",
        "LastModified": "date",
        "LastUpdateStatus": "InProgress",
        "LastUpdateStatusReason": "The function is being created.",
        "LastUpdateStatusReasonCode": "Creating",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:3>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.10",
        "RuntimeVersionConfig": {
          "RuntimeVersionArn": "arn:aws:lambda:<region>::runtime:<resource:2>"
        },
        "SnapStart": {
          "ApplyOn": "None",
          "OptimizationStatus": "Off"
        },
        "State": "Active",
        "Timeout": 3,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "$LATEST",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "invocation_result_qualifier_v1_after_update": {
        "ExecutedVersion": "1",
        "Payload": {
          "version_id": "version1",
          "invoked_arn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:alias1",
          "version_from_ctx": "1"
        },
        "StatusCode": 200,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "second_publish_response": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "code-sha256",
        "CodeSize": "<code-size>",
        "Description": "Second version description :)",
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:2",
        "FunctionName": "<function-name:1>",
        "Handler": "handler.handler",
        "LastModified": "date",
        "LastUpdateStatus": "Successful",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:4>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.10",
        "RuntimeVersionConfig": {
          "RuntimeVersionArn": "arn:aws:lambda:<region>::runtime:<resource:2>"
        },
        "SnapStart": {
          "ApplyOn": "None",
          "OptimizationStatus": "Off"
        },
        "State": "Active",
        "Timeout": 3,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "2",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "invocation_result_qualifier_v1_after_publish": {
        "ExecutedVersion": "1",
        "Payload": {
          "version_id": "version1",
          "invoked_arn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:alias1",
          "version_from_ctx": "1"
        },
        "StatusCode": 200,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "update_alias_response": {
        "AliasArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:alias1",
        "Description": "",
        "FunctionVersion": "2",
        "Name": "alias1",
        "RevisionId": "<uuid:5>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "invocation_result_qualifier_v2": {
        "ExecutedVersion": "2",
        "Payload": {
          "version_id": "version2",
          "invoked_arn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:alias1",
          "version_from_ctx": "2"
        },
        "StatusCode": 200,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "invocation_exc_not_existent": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:<function-name:1>:non-existent-alias"
        },
        "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:<function-name:1>:non-existent-alias",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaAliases::test_alias_routingconfig": {
    "recorded-date": "02-05-2023, 17:01:13",
    "recorded-content": {
      "create_alias_response": {
        "AliasArn": "arn:aws:lambda:<region>:111111111111:function:<resource:1>",
        "Description": "",
        "FunctionVersion": "1",
        "Name": "alias1",
        "RevisionId": "<uuid:1>",
        "RoutingConfig": {
          "AdditionalVersionWeights": {
            "2": 0.5
          }
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaBaseFeatures::test_lambda_different_iam_keys_environment": {
    "recorded-date": "02-05-2023, 16:51:37",
    "recorded-content": {
      "create-result": {
        "CreateEventSourceMappingResponse": null,
        "CreateFunctionResponse": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "code-sha256",
          "CodeSize": "<code-size>",
          "Description": "",
          "Environment": {
            "Variables": {}
          },
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "Handler": "handler.handler",
          "LastModified": "date",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:1>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.10",
          "RuntimeVersionConfig": {
            "RuntimeVersionArn": "arn:aws:lambda:<region>::runtime:<resource:2>"
          },
          "SnapStart": {
            "ApplyOn": "None",
            "OptimizationStatus": "Off"
          },
          "State": "Pending",
          "StateReason": "The function is being created.",
          "StateReasonCode": "Creating",
          "Timeout": 30,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST",
          "ResponseMetadata": {
            "HTTPHeaders": {},
            "HTTPStatusCode": 201
          }
        }
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaConcurrency::test_lambda_provisioned_concurrency_moves_with_alias": {
    "recorded-date": "21-03-2023, 08:47:38",
    "recorded-content": {
      "create-result": {
        "CreateEventSourceMappingResponse": null,
        "CreateFunctionResponse": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "code-sha256",
          "CodeSize": "<code-size>",
          "Description": "",
          "Environment": {
            "Variables": {}
          },
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "Handler": "handler.handler",
          "LastModified": "date",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:1>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.8",
          "RuntimeVersionConfig": {
            "RuntimeVersionArn": "arn:aws:lambda:<region>::runtime:<resource:2>"
          },
          "SnapStart": {
            "ApplyOn": "None",
            "OptimizationStatus": "Off"
          },
          "State": "Pending",
          "StateReason": "The function is being created.",
          "StateReasonCode": "Creating",
          "Timeout": 2,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST",
          "ResponseMetadata": {
            "HTTPHeaders": {},
            "HTTPStatusCode": 201
          }
        }
      },
      "get-function-configuration": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "code-sha256",
        "CodeSize": "<code-size>",
        "Description": "",
        "Environment": {
          "Variables": {}
        },
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:$LATEST",
        "FunctionName": "<function-name:1>",
        "Handler": "handler.handler",
        "LastModified": "date",
        "LastUpdateStatus": "Successful",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:2>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.8",
        "RuntimeVersionConfig": {
          "RuntimeVersionArn": "arn:aws:lambda:<region>::runtime:<resource:2>"
        },
        "SnapStart": {
          "ApplyOn": "None",
          "OptimizationStatus": "Off"
        },
        "State": "Active",
        "Timeout": 2,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "$LATEST",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "publish_version_1": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "code-sha256",
        "CodeSize": "<code-size>",
        "Description": "my-first-version",
        "Environment": {
          "Variables": {}
        },
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:1",
        "FunctionName": "<function-name:1>",
        "Handler": "handler.handler",
        "LastModified": "date",
        "LastUpdateStatus": "Successful",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:3>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.8",
        "RuntimeVersionConfig": {
          "RuntimeVersionArn": "arn:aws:lambda:<region>::runtime:<resource:2>"
        },
        "SnapStart": {
          "ApplyOn": "None",
          "OptimizationStatus": "Off"
        },
        "State": "Active",
        "Timeout": 2,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "1",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "get_function_configuration_version_1": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "code-sha256",
        "CodeSize": "<code-size>",
        "Description": "my-first-version",
        "Environment": {
          "Variables": {}
        },
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:1",
        "FunctionName": "<function-name:1>",
        "Handler": "handler.handler",
        "LastModified": "date",
        "LastUpdateStatus": "Successful",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:3>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.8",
        "RuntimeVersionConfig": {
          "RuntimeVersionArn": "arn:aws:lambda:<region>::runtime:<resource:2>"
        },
        "SnapStart": {
          "ApplyOn": "None",
          "OptimizationStatus": "Off"
        },
        "State": "Active",
        "Timeout": 2,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "1",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "create_alias": {
        "AliasArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:<alias-name>",
        "Description": "",
        "FunctionVersion": "1",
        "Name": "<alias-name>",
        "RevisionId": "<uuid:4>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "get_function_before_provisioned": {
        "Code": {
          "Location": "<location>",
          "RepositoryType": "S3"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "code-sha256",
          "CodeSize": "<code-size>",
          "Description": "my-first-version",
          "Environment": {
            "Variables": {}
          },
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:1",
          "FunctionName": "<function-name:1>",
          "Handler": "handler.handler",
          "LastModified": "date",
          "LastUpdateStatus": "Successful",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:3>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.8",
          "RuntimeVersionConfig": {
            "RuntimeVersionArn": "arn:aws:lambda:<region>::runtime:<resource:2>"
          },
          "SnapStart": {
            "ApplyOn": "None",
            "OptimizationStatus": "Off"
          },
          "State": "Active",
          "Timeout": 2,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "1"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_function_after_provisioned": {
        "Code": {
          "Location": "<location>",
          "RepositoryType": "S3"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "code-sha256",
          "CodeSize": "<code-size>",
          "Description": "my-first-version",
          "Environment": {
            "Variables": {}
          },
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:<alias-name>",
          "FunctionName": "<function-name:1>",
          "Handler": "handler.handler",
          "LastModified": "date",
          "LastUpdateStatus": "Successful",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:5>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.8",
          "RuntimeVersionConfig": {
            "RuntimeVersionArn": "arn:aws:lambda:<region>::runtime:<resource:2>"
          },
          "SnapStart": {
            "ApplyOn": "None",
            "OptimizationStatus": "Off"
          },
          "State": "Active",
          "Timeout": 2,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "1"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_function_after_update": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "code-sha256",
        "CodeSize": "<code-size>",
        "Description": "",
        "Environment": {
          "Variables": {}
        },
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "FunctionName": "<function-name:1>",
        "Handler": "handler.handler",
        "LastModified": "date",
        "LastUpdateStatus": "Successful",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:6>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.8",
        "RuntimeVersionConfig": {
          "RuntimeVersionArn": "arn:aws:lambda:<region>::runtime:<resource:2>"
        },
        "SnapStart": {
          "ApplyOn": "None",
          "OptimizationStatus": "Off"
        },
        "State": "Active",
        "Timeout": 10,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "$LATEST",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "publish_version_2": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "code-sha256",
        "CodeSize": "<code-size>",
        "Description": "",
        "Environment": {
          "Variables": {}
        },
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:2",
        "FunctionName": "<function-name:1>",
        "Handler": "handler.handler",
        "LastModified": "date",
        "LastUpdateStatus": "Successful",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:7>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.8",
        "RuntimeVersionConfig": {
          "RuntimeVersionArn": "arn:aws:lambda:<region>::runtime:<resource:2>"
        },
        "SnapStart": {
          "ApplyOn": "None",
          "OptimizationStatus": "Off"
        },
        "State": "Active",
        "Timeout": 10,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "2",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "update_alias": {
        "AliasArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:<alias-name>",
        "Description": "",
        "FunctionVersion": "2",
        "Name": "<alias-name>",
        "RevisionId": "<uuid:8>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_provisioned_config_after_alias_move": {
        "AllocatedProvisionedConcurrentExecutions": 1,
        "AvailableProvisionedConcurrentExecutions": 1,
        "LastModified": "date",
        "RequestedProvisionedConcurrentExecutions": 1,
        "Status": "IN_PROGRESS",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "provisioned_concurrency_notfound": {
        "Error": {
          "Code": "ProvisionedConcurrencyConfigNotFoundException",
          "Message": "No Provisioned Concurrency Config found for this function"
        },
        "Type": "User",
        "message": "No Provisioned Concurrency Config found for this function",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaFeatures::test_invocation_type_event_error": {
    "recorded-date": "04-09-2023, 22:49:02",
    "recorded-content": {
      "creation_response": {
        "CreateEventSourceMappingResponse": null,
        "CreateFunctionResponse": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "code-sha256",
          "CodeSize": "<code-size>",
          "Description": "",
          "Environment": {
            "Variables": {}
          },
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "Handler": "handler.handler",
          "LastModified": "date",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<request-id>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.10",
          "RuntimeVersionConfig": {
            "RuntimeVersionArn": "arn:aws:lambda:<region>::runtime:<resource:2>"
          },
          "SnapStart": {
            "ApplyOn": "None",
            "OptimizationStatus": "Off"
          },
          "State": "Pending",
          "StateReason": "The function is being created.",
          "StateReasonCode": "Creating",
          "Timeout": 30,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST",
          "ResponseMetadata": {
            "HTTPHeaders": {},
            "HTTPStatusCode": 201
          }
        }
      },
      "invocation_response": {
        "Payload": "",
        "StatusCode": 202,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 202
        }
      },
      "log_events": [
        {
          "timestamp": "timestamp",
          "message": "INIT_START Runtime Version: python:3.10.v11\tRuntime Version ARN: arn:aws:lambda:<region>::runtime:<resource:2>\n",
          "ingestionTime": "timestamp"
        },
        {
          "timestamp": "timestamp",
          "message": "START RequestId: <request-id> Version: $LATEST\n",
          "ingestionTime": "timestamp"
        },
        {
          "timestamp": "timestamp",
          "message": "[ERROR] CustomException: some error occurred\nTraceback (most recent call last):\n\u00a0\u00a0File \"/var/task/handler.py\", line 6, in handler\n\u00a0\u00a0\u00a0\u00a0raise CustomException(\"some error occurred\")",
          "ingestionTime": "timestamp"
        },
        {
          "timestamp": "timestamp",
          "message": "END RequestId: <request-id>\n",
          "ingestionTime": "timestamp"
        },
        {
          "timestamp": "timestamp",
          "message": "REPORT RequestId: <request-id>\tDuration: 3.01 ms\tBilled Duration: 4 ms\tMemory Size: 128 MB\tMax Memory Used: 36 MB\tInit Duration: 110.10 ms\t\n",
          "ingestionTime": "timestamp"
        },
        {
          "timestamp": "timestamp",
          "message": "START RequestId: <request-id> Version: $LATEST\n",
          "ingestionTime": "timestamp"
        },
        {
          "timestamp": "timestamp",
          "message": "[ERROR] CustomException: some error occurred\nTraceback (most recent call last):\n\u00a0\u00a0File \"/var/task/handler.py\", line 6, in handler\n\u00a0\u00a0\u00a0\u00a0raise CustomException(\"some error occurred\")",
          "ingestionTime": "timestamp"
        },
        {
          "timestamp": "timestamp",
          "message": "END RequestId: <request-id>\n",
          "ingestionTime": "timestamp"
        },
        {
          "timestamp": "timestamp",
          "message": "REPORT RequestId: <request-id>\tDuration: 2.90 ms\tBilled Duration: 3 ms\tMemory Size: 128 MB\tMax Memory Used: 36 MB\t\n",
          "ingestionTime": "timestamp"
        }
      ]
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaBehavior::test_lambda_invoke_timed_out_environment_reuse": {
    "recorded-date": "02-05-2023, 16:52:08",
    "recorded-content": {
      "create-result": {
        "CreateEventSourceMappingResponse": null,
        "CreateFunctionResponse": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "code-sha256",
          "CodeSize": "<code-size>",
          "Description": "",
          "Environment": {
            "Variables": {}
          },
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "Handler": "handler.handler",
          "LastModified": "date",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:1>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.10",
          "RuntimeVersionConfig": {
            "RuntimeVersionArn": "arn:aws:lambda:<region>::runtime:<resource:2>"
          },
          "SnapStart": {
            "ApplyOn": "None",
            "OptimizationStatus": "Off"
          },
          "State": "Pending",
          "StateReason": "The function is being created.",
          "StateReasonCode": "Creating",
          "Timeout": 1,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST",
          "ResponseMetadata": {
            "HTTPHeaders": {},
            "HTTPStatusCode": 201
          }
        }
      },
      "invoke-result-file-write": {
        "ExecutedVersion": "$LATEST",
        "Payload": "null",
        "StatusCode": 200,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "invoke-result-file-read": {
        "ExecutedVersion": "$LATEST",
        "Payload": {
          "content": "some-content"
        },
        "StatusCode": 200,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "invoke-result-set-number": {
        "ExecutedVersion": "$LATEST",
        "Payload": "null",
        "StatusCode": 200,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "invoke-result-read-number": {
        "ExecutedVersion": "$LATEST",
        "Payload": {
          "number": 42
        },
        "StatusCode": 200,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "invoke-result-timed-out": {
        "ExecutedVersion": "$LATEST",
        "FunctionError": "Unhandled",
        "Payload": {
          "errorMessage": "date <timeout_error_msg> Task timed out after 1.00 seconds"
        },
        "StatusCode": 200,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "invoke-result-file-read-after-timeout": {
        "ExecutedVersion": "$LATEST",
        "Payload": {
          "content": "some-content"
        },
        "StatusCode": 200,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "invoke-result-read-number-after-timeout": {
        "ExecutedVersion": "$LATEST",
        "Payload": {
          "number": 0
        },
        "StatusCode": 200,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaURL::test_lambda_url_invocation_exception": {
    "recorded-date": "02-05-2023, 16:52:35",
    "recorded-content": {
      "get_fn_result": {
        "Code": {
          "Location": "<location>",
          "RepositoryType": "S3"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "code-sha256",
          "CodeSize": "<code-size>",
          "Description": "",
          "Environment": {
            "Variables": {}
          },
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "Handler": "handler.handler",
          "LastModified": "date",
          "LastUpdateStatus": "Successful",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:1>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.10",
          "RuntimeVersionConfig": {
            "RuntimeVersionArn": "arn:aws:lambda:<region>::runtime:<resource:2>"
          },
          "SnapStart": {
            "ApplyOn": "None",
            "OptimizationStatus": "Off"
          },
          "State": "Active",
          "Timeout": 30,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "create_lambda_url_config": {
        "AuthType": "NONE",
        "CreationTime": "date",
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "FunctionUrl": "function-url",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "add_permission": {
        "Statement": {
          "Sid": "urlPermission",
          "Effect": "Allow",
          "Principal": "*",
          "Action": "lambda:InvokeFunctionUrl",
          "Resource": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "Condition": {
            "StringEquals": {
              "lambda:FunctionUrlAuthType": "NONE"
            }
          }
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaConcurrency::test_lambda_concurrency_crud": {
    "recorded-date": "02-05-2023, 16:53:10",
    "recorded-content": {
      "get_function_concurrency_default": {
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "put_function_concurrency": {
        "ReservedConcurrentExecutions": 0,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_function_concurrency_updated": {
        "ReservedConcurrentExecutions": 0,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_function_concurrency_deleted": {
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaPermissions::test_lambda_permission_url_invocation": {
    "recorded-date": "02-05-2023, 16:52:38",
    "recorded-content": {
      "lambda_url_invocation_missing_permission": {
        "Message": "Forbidden"
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaURL::test_lambda_url_invocation[dict]": {
    "recorded-date": "02-05-2023, 16:52:11",
    "recorded-content": {
      "create_lambda_url_config": {
        "AuthType": "NONE",
        "CreationTime": "date",
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<resource:1>",
        "FunctionUrl": "<function-url>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "add_permission": {
        "Statement": {
          "Sid": "urlPermission",
          "Effect": "Allow",
          "Principal": "*",
          "Action": "lambda:InvokeFunctionUrl",
          "Resource": "arn:aws:lambda:<region>:111111111111:function:<resource:1>",
          "Condition": {
            "StringEquals": {
              "lambda:FunctionUrlAuthType": "NONE"
            }
          }
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "lambda_url_invocation": {
        "content": {
          "hello": "world"
        },
        "headers": {
          "Content-Length": "17",
          "Content-Type": "application/json"
        },
        "statuscode": 200
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaURL::test_lambda_url_invocation[http-response]": {
    "recorded-date": "02-05-2023, 16:52:13",
    "recorded-content": {
      "create_lambda_url_config": {
        "AuthType": "NONE",
        "CreationTime": "date",
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<resource:1>",
        "FunctionUrl": "<function-url>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "add_permission": {
        "Statement": {
          "Sid": "urlPermission",
          "Effect": "Allow",
          "Principal": "*",
          "Action": "lambda:InvokeFunctionUrl",
          "Resource": "arn:aws:lambda:<region>:111111111111:function:<resource:1>",
          "Condition": {
            "StringEquals": {
              "lambda:FunctionUrlAuthType": "NONE"
            }
          }
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "lambda_url_invocation": {
        "content": "body123",
        "headers": {
          "Content-Length": "7",
          "Content-Type": "application/json"
        },
        "statuscode": 200
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaURL::test_lambda_url_invocation[http-response-json]": {
    "recorded-date": "02-05-2023, 16:52:16",
    "recorded-content": {
      "create_lambda_url_config": {
        "AuthType": "NONE",
        "CreationTime": "date",
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<resource:1>",
        "FunctionUrl": "<function-url>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "add_permission": {
        "Statement": {
          "Sid": "urlPermission",
          "Effect": "Allow",
          "Principal": "*",
          "Action": "lambda:InvokeFunctionUrl",
          "Resource": "arn:aws:lambda:<region>:111111111111:function:<resource:1>",
          "Condition": {
            "StringEquals": {
              "lambda:FunctionUrlAuthType": "NONE"
            }
          }
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "lambda_url_invocation": {
        "content": {
          "hello": "world"
        },
        "headers": {
          "Content-Length": "18",
          "Content-Type": "application/json"
        },
        "statuscode": 200
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaURL::test_lambda_url_invocation[list-mixed]": {
    "recorded-date": "02-05-2023, 16:52:19",
    "recorded-content": {
      "create_lambda_url_config": {
        "AuthType": "NONE",
        "CreationTime": "date",
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<resource:1>",
        "FunctionUrl": "<function-url>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "add_permission": {
        "Statement": {
          "Sid": "urlPermission",
          "Effect": "Allow",
          "Principal": "*",
          "Action": "lambda:InvokeFunctionUrl",
          "Resource": "arn:aws:lambda:<region>:111111111111:function:<resource:1>",
          "Condition": {
            "StringEquals": {
              "lambda:FunctionUrlAuthType": "NONE"
            }
          }
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "lambda_url_invocation": {
        "content": "[\"hello\",3,true]",
        "headers": {
          "Content-Length": "16",
          "Content-Type": "application/json"
        },
        "statuscode": 200
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaURL::test_lambda_url_invocation[string]": {
    "recorded-date": "02-05-2023, 16:52:22",
    "recorded-content": {
      "create_lambda_url_config": {
        "AuthType": "NONE",
        "CreationTime": "date",
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<resource:1>",
        "FunctionUrl": "<function-url>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "add_permission": {
        "Statement": {
          "Sid": "urlPermission",
          "Effect": "Allow",
          "Principal": "*",
          "Action": "lambda:InvokeFunctionUrl",
          "Resource": "arn:aws:lambda:<region>:111111111111:function:<resource:1>",
          "Condition": {
            "StringEquals": {
              "lambda:FunctionUrlAuthType": "NONE"
            }
          }
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "lambda_url_invocation": {
        "content": "hello",
        "headers": {
          "Content-Length": "5",
          "Content-Type": "application/json"
        },
        "statuscode": 200
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaURL::test_lambda_url_invocation[integer]": {
    "recorded-date": "02-05-2023, 16:52:24",
    "recorded-content": {
      "create_lambda_url_config": {
        "AuthType": "NONE",
        "CreationTime": "date",
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<resource:1>",
        "FunctionUrl": "<function-url>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "add_permission": {
        "Statement": {
          "Sid": "urlPermission",
          "Effect": "Allow",
          "Principal": "*",
          "Action": "lambda:InvokeFunctionUrl",
          "Resource": "arn:aws:lambda:<region>:111111111111:function:<resource:1>",
          "Condition": {
            "StringEquals": {
              "lambda:FunctionUrlAuthType": "NONE"
            }
          }
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "lambda_url_invocation": {
        "content": "3",
        "headers": {
          "Content-Length": "1",
          "Content-Type": "application/json"
        },
        "statuscode": 200
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaURL::test_lambda_url_invocation[float]": {
    "recorded-date": "02-05-2023, 16:52:27",
    "recorded-content": {
      "create_lambda_url_config": {
        "AuthType": "NONE",
        "CreationTime": "date",
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<resource:1>",
        "FunctionUrl": "<function-url>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "add_permission": {
        "Statement": {
          "Sid": "urlPermission",
          "Effect": "Allow",
          "Principal": "*",
          "Action": "lambda:InvokeFunctionUrl",
          "Resource": "arn:aws:lambda:<region>:111111111111:function:<resource:1>",
          "Condition": {
            "StringEquals": {
              "lambda:FunctionUrlAuthType": "NONE"
            }
          }
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "lambda_url_invocation": {
        "content": "3.1",
        "headers": {
          "Content-Length": "3",
          "Content-Type": "application/json"
        },
        "statuscode": 200
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaURL::test_lambda_url_invocation[boolean]": {
    "recorded-date": "02-05-2023, 16:52:30",
    "recorded-content": {
      "create_lambda_url_config": {
        "AuthType": "NONE",
        "CreationTime": "date",
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<resource:1>",
        "FunctionUrl": "<function-url>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "add_permission": {
        "Statement": {
          "Sid": "urlPermission",
          "Effect": "Allow",
          "Principal": "*",
          "Action": "lambda:InvokeFunctionUrl",
          "Resource": "arn:aws:lambda:<region>:111111111111:function:<resource:1>",
          "Condition": {
            "StringEquals": {
              "lambda:FunctionUrlAuthType": "NONE"
            }
          }
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "lambda_url_invocation": {
        "content": "true",
        "headers": {
          "Content-Length": "4",
          "Content-Type": "application/json"
        },
        "statuscode": 200
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaURL::test_lambda_url_echo_invoke": {
    "recorded-date": "02-05-2023, 16:52:33",
    "recorded-content": {
      "create_lambda_url_config": {
        "AuthType": "NONE",
        "CreationTime": "date",
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<resource:1>",
        "FunctionUrl": "<function-url>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "add_permission": {
        "Statement": {
          "Sid": "urlPermission",
          "Effect": "Allow",
          "Principal": "*",
          "Action": "lambda:InvokeFunctionUrl",
          "Resource": "arn:aws:lambda:<region>:111111111111:function:<resource:1>",
          "Condition": {
            "StringEquals": {
              "lambda:FunctionUrlAuthType": "NONE"
            }
          }
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaBehavior::test_runtime_introspection_arm": {
    "recorded-date": "04-10-2023, 18:13:34",
    "recorded-content": {
      "invoke_runtime_arm_introspection": {
        "ExecutedVersion": "$LATEST",
        "Payload": {
          "event": {},
          "user_login_name": "sbx_user1051",
          "user_whoami": "sbx_user1051",
          "platform_system": "Linux",
          "platform_machine": "aarch64",
          "pwd": "/var/task",
          "paths": {
            "_var_task_mode": "drwxr-xr-x",
            "_var_task_uid": 998,
            "_var_task_owner": "slicer",
            "_var_task_gid": 995,
            "_opt_mode": "drwxr-xr-x",
            "_opt_uid": 0,
            "_opt_owner": "root",
            "_opt_gid": 0,
            "_tmp_mode": "drwx------",
            "_tmp_uid": 993,
            "_tmp_owner": "sbx_user1051",
            "_tmp_gid": 990,
            "_lambda-entrypoint.sh_mode": "-rwxr-xr-x",
            "_lambda-entrypoint.sh_uid": 0,
            "_lambda-entrypoint.sh_owner": "root",
            "_lambda-entrypoint.sh_gid": 0
          }
        },
        "StatusCode": 200,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaBehavior::test_runtime_introspection_x86": {
    "recorded-date": "04-10-2023, 18:09:12",
    "recorded-content": {
      "invoke_runtime_x86_introspection": {
        "ExecutedVersion": "$LATEST",
        "Payload": {
          "event": {},
          "user_login_name": "sbx_user1051",
          "user_whoami": "sbx_user1051",
          "platform_system": "Linux",
          "platform_machine": "x86_64",
          "pwd": "/var/task",
          "paths": {
            "_var_task_mode": "drwxr-xr-x",
            "_var_task_uid": 998,
            "_var_task_owner": "slicer",
            "_var_task_gid": 995,
            "_opt_mode": "drwxr-xr-x",
            "_opt_uid": 0,
            "_opt_owner": "root",
            "_opt_gid": 0,
            "_tmp_mode": "drwx------",
            "_tmp_uid": 993,
            "_tmp_owner": "sbx_user1051",
            "_tmp_gid": 990,
            "_lambda-entrypoint.sh_mode": "-rwxr-xr-x",
            "_lambda-entrypoint.sh_uid": 0,
            "_lambda-entrypoint.sh_owner": "root",
            "_lambda-entrypoint.sh_gid": 0
          }
        },
        "StatusCode": 200,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaBehavior::test_runtime_ulimits": {
    "recorded-date": "02-05-2023, 16:51:44",
    "recorded-content": {
      "invoke_runtime_ulimits": {
        "ExecutedVersion": "$LATEST",
        "Payload": {
          "RLIMIT_AS": [
            -1,
            -1
          ],
          "RLIMIT_CORE": [
            -1,
            -1
          ],
          "RLIMIT_CPU": [
            -1,
            -1
          ],
          "RLIMIT_DATA": [
            -1,
            -1
          ],
          "RLIMIT_FSIZE": [
            -1,
            -1
          ],
          "RLIMIT_MEMLOCK": [
            65536,
            65536
          ],
          "RLIMIT_NOFILE": [
            1024,
            1024
          ],
          "RLIMIT_NPROC": [
            735,
            735
          ],
          "RLIMIT_RSS": [
            -1,
            -1
          ],
          "RLIMIT_STACK": [
            8388608,
            -1
          ]
        },
        "StatusCode": 200,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaConcurrency::test_reserved_concurrency": {
    "recorded-date": "11-08-2023, 12:01:28",
    "recorded-content": {
      "fn": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "code-sha256",
        "CodeSize": "<code-size>",
        "Description": "",
        "Environment": {
          "Variables": {}
        },
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:$LATEST",
        "FunctionName": "<function-name:1>",
        "Handler": "handler.handler",
        "LastModified": "date",
        "LastUpdateStatus": "Successful",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:1>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.10",
        "RuntimeVersionConfig": {
          "RuntimeVersionArn": "arn:aws:lambda:<region>::runtime:<resource:2>"
        },
        "SnapStart": {
          "ApplyOn": "None",
          "OptimizationStatus": "Off"
        },
        "State": "Active",
        "Timeout": 20,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "$LATEST",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "put_reserved": {
        "ReservedConcurrentExecutions": 0,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "exc_no_cap_requestresponse": {
        "Error": {
          "Code": "TooManyRequestsException",
          "Message": "Rate Exceeded."
        },
        "Reason": "ReservedFunctionConcurrentInvocationLimitExceeded",
        "Type": "User",
        "message": "Rate Exceeded.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 429
        }
      },
      "put_event_invoke_conf": {
        "DestinationConfig": {
          "OnFailure": {
            "Destination": "arn:aws:sqs:<region>:111111111111:<resource:3>"
          },
          "OnSuccess": {}
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:$LATEST",
        "LastModified": "datetime",
        "MaximumRetryAttempts": 0,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "invoke_result": {
        "Payload": "",
        "StatusCode": 202,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 202
        }
      },
      "msg": {
        "Attributes": {
          "AWSTraceHeader": "Root=1-64d606f7-07ba3df604ddb3c84216649d;Sampled=0",
          "ApproximateFirstReceiveTimestamp": "timestamp",
          "ApproximateReceiveCount": "1",
          "SenderId": "<sender-id>",
          "SentTimestamp": "timestamp"
        },
        "Body": {
          "version": "1.0",
          "timestamp": "date",
          "requestContext": {
            "requestId": "<uuid:2>",
            "functionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:$LATEST",
            "condition": "ZeroReservedConcurrency",
            "approximateInvokeCount": 0
          },
          "requestPayload": {}
        },
        "MD5OfBody": "<md5-of-body>",
        "MessageId": "<uuid:3>",
        "ReceiptHandle": "<receipt-handle:1>"
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaConcurrency::test_reserved_concurrency_async_queue": {
    "recorded-date": "10-08-2023, 23:24:24",
    "recorded-content": {
      "fn": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "code-sha256",
        "CodeSize": "<code-size>",
        "Description": "",
        "Environment": {
          "Variables": {}
        },
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:$LATEST",
        "FunctionName": "<function-name:1>",
        "Handler": "handler.handler",
        "LastModified": "date",
        "LastUpdateStatus": "Successful",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:1>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.10",
        "RuntimeVersionConfig": {
          "RuntimeVersionArn": "arn:aws:lambda:<region>::runtime:<resource:2>"
        },
        "SnapStart": {
          "ApplyOn": "None",
          "OptimizationStatus": "Off"
        },
        "State": "Active",
        "Timeout": 20,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "$LATEST",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "put_fn_concurrency": {
        "ReservedConcurrentExecutions": 1,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "too_many_requests_exc": {
        "Error": {
          "Code": "TooManyRequestsException",
          "Message": "Rate Exceeded."
        },
        "Reason": "ReservedFunctionConcurrentInvocationLimitExceeded",
        "Type": "User",
        "message": "Rate Exceeded.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 429
        }
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaConcurrency::test_provisioned_concurrency": {
    "recorded-date": "02-05-2023, 16:55:21",
    "recorded-content": {
      "put_provisioned_5": {
        "AllocatedProvisionedConcurrentExecutions": 0,
        "AvailableProvisionedConcurrentExecutions": 0,
        "LastModified": "date",
        "RequestedProvisionedConcurrentExecutions": 5,
        "Status": "IN_PROGRESS",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 202
        }
      },
      "get_provisioned_prewait": {
        "AllocatedProvisionedConcurrentExecutions": 0,
        "AvailableProvisionedConcurrentExecutions": 0,
        "LastModified": "date",
        "RequestedProvisionedConcurrentExecutions": 5,
        "Status": "IN_PROGRESS",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_provisioned_postwait": {
        "AllocatedProvisionedConcurrentExecutions": 5,
        "AvailableProvisionedConcurrentExecutions": 5,
        "LastModified": "date",
        "RequestedProvisionedConcurrentExecutions": 5,
        "Status": "READY",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaConcurrency::test_reserved_provisioned_overlap": {
    "recorded-date": "02-05-2023, 17:00:45",
    "recorded-content": {
      "put_provisioned_5": {
        "AllocatedProvisionedConcurrentExecutions": 0,
        "AvailableProvisionedConcurrentExecutions": 0,
        "LastModified": "date",
        "RequestedProvisionedConcurrentExecutions": 2,
        "Status": "IN_PROGRESS",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 202
        }
      },
      "get_provisioned_prewait": {
        "AllocatedProvisionedConcurrentExecutions": 0,
        "AvailableProvisionedConcurrentExecutions": 0,
        "LastModified": "date",
        "RequestedProvisionedConcurrentExecutions": 2,
        "Status": "IN_PROGRESS",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_provisioned_postwait": {
        "AllocatedProvisionedConcurrentExecutions": 2,
        "AvailableProvisionedConcurrentExecutions": 2,
        "LastModified": "date",
        "RequestedProvisionedConcurrentExecutions": 2,
        "Status": "READY",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "reserved_lower_than_provisioned_exc": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": " ReservedConcurrentExecutions  1 should not be lower than function's total provisioned concurrency [2]."
        },
        "message": " ReservedConcurrentExecutions  1 should not be lower than function's total provisioned concurrency [2].",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "get_concurrency": {
        "ReservedConcurrentExecutions": 2,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "reserved_equals_provisioned_latest_invoke_exc": {
        "Error": {
          "Code": "TooManyRequestsException",
          "Message": "Rate Exceeded."
        },
        "Reason": "ReservedFunctionConcurrentInvocationLimitExceeded",
        "Type": "User",
        "message": "Rate Exceeded.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 429
        }
      },
      "update_func_config": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "code-sha256",
        "CodeSize": "<code-size>",
        "Description": "",
        "Environment": {
          "Variables": {}
        },
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "FunctionName": "<function-name:1>",
        "Handler": "handler.handler",
        "LastModified": "date",
        "LastUpdateStatus": "InProgress",
        "LastUpdateStatusReason": "The function is being created.",
        "LastUpdateStatusReasonCode": "Creating",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:1>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.10",
        "RuntimeVersionConfig": {
          "RuntimeVersionArn": "arn:aws:lambda:<region>::runtime:<resource:2>"
        },
        "SnapStart": {
          "ApplyOn": "None",
          "OptimizationStatus": "Off"
        },
        "State": "Active",
        "Timeout": 15,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "$LATEST",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "reserved_equals_provisioned_another_provisioned_exc": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "Requested Provisioned Concurrency should not be greater than the reservedConcurrentExecution for function"
        },
        "Type": "User",
        "message": "Requested Provisioned Concurrency should not be greater than the reservedConcurrentExecution for function",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "reserved_equals_provisioned_increase_provisioned_exc": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "Requested Provisioned Concurrency should not be greater than the reservedConcurrentExecution for function"
        },
        "Type": "User",
        "message": "Requested Provisioned Concurrency should not be greater than the reservedConcurrentExecution for function",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestRequestIdHandling::test_request_id_format": {
    "recorded-date": "02-05-2023, 17:01:14",
    "recorded-content": {}
  },
  "tests/aws/services/lambda_/test_lambda.py::TestRequestIdHandling::test_request_id_invoke": {
    "recorded-date": "17-10-2023, 16:13:59",
    "recorded-content": {
      "invoke_result": {
        "ExecutedVersion": "$LATEST",
        "Payload": "\"<request-id>\"",
        "StatusCode": 200,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "log_entries": {
        "logs": [
          "START RequestId: <request-id> Version: $LATEST",
          "[INFO]\tdate\t<request-id>\tRequestId log message",
          "END RequestId: <request-id>",
          "REPORT RequestId: <request-id>\tDuration: <duration> ms\tBilled Duration: <duration> ms\tMemory Size: 128 MB\tMax Memory Used: <memory> MB\tInit Duration: <duration> ms"
        ]
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestRequestIdHandling::test_request_id_async_invoke_with_retry": {
    "recorded-date": "02-05-2023, 17:03:31",
    "recorded-content": {
      "invoke_result": {
        "Payload": "",
        "StatusCode": 202,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 202
        }
      },
      "end_messages": [
        "END RequestId: <request-id>",
        "END RequestId: <request-id>"
      ]
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestRequestIdHandling::test_request_id_invoke_url": {
    "recorded-date": "02-05-2023, 17:01:28",
    "recorded-content": {
      "create_lambda_url_config": {
        "AuthType": "NONE",
        "CreationTime": "date",
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<resource:1>",
        "FunctionUrl": "<function-url>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "add_permission": {
        "Statement": {
          "Sid": "urlPermission",
          "Effect": "Allow",
          "Principal": "*",
          "Action": "lambda:InvokeFunctionUrl",
          "Resource": "arn:aws:lambda:<region>:111111111111:function:<resource:1>",
          "Condition": {
            "StringEquals": {
              "lambda:FunctionUrlAuthType": "NONE"
            }
          }
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "lambda_url_invocation": {
        "content": "hi",
        "headers": {
          "x-amzn-RequestId": "<uuid:1>"
        },
        "statuscode": 200
      },
      "end_log_entries": [
        "END RequestId: <uuid:1>"
      ]
    }
  },
  "tests/aws/lambda_/test_lambda.py::TestLambdaFeatures::test_invoke_exceptions": {
    "recorded-date": "11-08-2023, 15:57:21",
    "recorded-content": {
      "invoke_function_doesnotexist": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:doesnotexist"
        },
        "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:doesnotexist",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaErrors::test_lambda_runtime_error": {
    "recorded-date": "30-08-2023, 16:48:55",
    "recorded-content": {
      "invocation_error": {
        "ExecutedVersion": "$LATEST",
        "FunctionError": "Unhandled",
        "Payload": {
          "errorMessage": "Runtime startup fails",
          "errorType": "Exception",
          "requestId": "",
          "stackTrace": [
            "  File \"/var/lang/lib/python3.10/importlib/__init__.py\", line 126, in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n",
            "  File \"<frozen importlib._bootstrap>\", line 1050, in _gcd_import\n",
            "  File \"<frozen importlib._bootstrap>\", line 1027, in _find_and_load\n",
            "  File \"<frozen importlib._bootstrap>\", line 1006, in _find_and_load_unlocked\n",
            "  File \"<frozen importlib._bootstrap>\", line 688, in _load_unlocked\n",
            "  File \"<frozen importlib._bootstrap_external>\", line 883, in exec_module\n",
            "  File \"<frozen importlib._bootstrap>\", line 241, in _call_with_frames_removed\n",
            "  File \"/var/task/lambda_runtime_error.py\", line 1, in <module>\n    raise Exception(\"Runtime startup fails\")\n"
          ]
        },
        "StatusCode": 200,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaFeatures::test_invoke_exceptions": {
    "recorded-date": "23-08-2023, 17:42:25",
    "recorded-content": {
      "invoke_function_doesnotexist": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:doesnotexist"
        },
        "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:doesnotexist",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaErrors::test_lambda_runtime_wrapper_not_found": {
    "recorded-date": "30-08-2023, 16:52:21",
    "recorded-content": {
      "invocation_error": {
        "ExecutedVersion": "$LATEST",
        "FunctionError": "Unhandled",
        "Payload": {
          "errorType": "Runtime.ExitError",
          "errorMessage": "RequestId: <uuid> Error: Runtime exited with error: exit status 127"
        },
        "StatusCode": 200,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaErrors::test_lambda_runtime_exit": {
    "recorded-date": "30-08-2023, 16:48:13",
    "recorded-content": {
      "invocation_error": {
        "ExecutedVersion": "$LATEST",
        "FunctionError": "Unhandled",
        "Payload": {
          "errorType": "Runtime.ExitError",
          "errorMessage": "RequestId: <uuid> Error: Runtime exited without providing a reason"
        },
        "StatusCode": 200,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaErrors::test_lambda_handler_exit": {
    "recorded-date": "30-08-2023, 16:51:03",
    "recorded-content": {
      "invocation_error": {
        "ExecutedVersion": "$LATEST",
        "FunctionError": "Unhandled",
        "Payload": {
          "errorType": "Runtime.ExitError",
          "errorMessage": "RequestId: <uuid> Error: Runtime exited without providing a reason"
        },
        "StatusCode": 200,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaErrors::test_lambda_handler_error": {
    "recorded-date": "04-09-2023, 23:08:48",
    "recorded-content": {
      "invocation_error": {
        "ExecutedVersion": "$LATEST",
        "FunctionError": "Unhandled",
        "Payload": {
          "errorMessage": "Handler fails",
          "errorType": "Exception",
          "requestId": "<uuid>",
          "stackTrace": [
            "  File \"/var/task/lambda_handler_error.py\", line 2, in handler\n    raise Exception(\"Handler fails\")\n"
          ]
        },
        "StatusCode": 200,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaErrors::test_lambda_runtime_exit_segfault": {
    "recorded-date": "06-09-2023, 12:13:47",
    "recorded-content": {
      "invocation_error": {
        "ExecutedVersion": "$LATEST",
        "FunctionError": "Unhandled",
        "Payload": {
          "errorType": "Runtime.ExitError",
          "errorMessage": "RequestId: <uuid> Error: Runtime exited with error: signal: segmentation fault"
        },
        "StatusCode": 200,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaErrors::test_lambda_invoke_payload_encoding_error[body-n\\x87r\\x9e\\xe9\\xb5\\xd7I\\xee\\x9bmt]": {
    "recorded-date": "15-09-2023, 22:16:36",
    "recorded-content": {
      "invoke_function_invalid_payload_body": {
        "Error": {
          "Code": "InvalidRequestContentException",
          "Message": "Could not parse request body into json: Could not parse payload into json: Invalid UTF-8 start byte 0x87\n at [Source: (byte[])\"n\ufffdr\ufffd\ufffd\ufffdI\ufffdmt\"; line: 1, column: 3]"
        },
        "Type": "User",
        "message": "Could not parse request body into json: Could not parse payload into json: Invalid UTF-8 start byte 0x87\n at [Source: (byte[])\"n\ufffdr\ufffd\ufffd\ufffdI\ufffdmt\"; line: 1, column: 3]",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaErrors::test_lambda_invoke_payload_encoding_error[message-\\x99\\xeb,j\\x07\\xa1zYh]": {
    "recorded-date": "15-09-2023, 22:16:40",
    "recorded-content": {
      "invoke_function_invalid_payload_message": {
        "Error": {
          "Code": "InvalidRequestContentException",
          "Message": "Could not parse request body into json: Could not parse payload into json: Unexpected character ((CTRL-CHAR, code 153)): expected a valid value (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"\ufffd\ufffd,j\u0007\ufffdzYh\"; line: 1, column: 2]"
        },
        "Type": "User",
        "message": "Could not parse request body into json: Could not parse payload into json: Unexpected character ((CTRL-CHAR, code 153)): expected a valid value (JSON String, Number, Array, Object or token 'null', 'true' or 'false')\n at [Source: (byte[])\"\ufffd\ufffd,j\u0007\ufffdzYh\"; line: 1, column: 2]",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      }
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaBaseFeatures::test_assume_role[1]": {
    "recorded-date": "10-10-2023, 14:55:53",
    "recorded-content": {
      "invoke-result-assumed-role-arn": "arn:aws:sts::111111111111:assumed-role/lambda-autogenerated-<lambda-autogenerated-role-prefix>/<resource:1>"
    }
  },
  "tests/aws/services/lambda_/test_lambda.py::TestLambdaBaseFeatures::test_assume_role[2]": {
    "recorded-date": "10-10-2023, 14:55:58",
    "recorded-content": {
      "invoke-result-assumed-role-arn": "arn:aws:sts::111111111111:assumed-role/lambda-autogenerated-<lambda-autogenerated-role-prefix>/<resource:1>"
    }
  }
}
