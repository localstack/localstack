{
  "Resources": {
    "CustomEventBusEC0C3CB8": {
      "Type": "AWS::Events::EventBus",
      "Properties": {
        "Name": "EventbridgeStackCustomEventBus7DA4065F"
      }
    },
    "InputLambdaServiceRole4E05AD7C": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "InputLambdaServiceRoleDefaultPolicy9708E6F3": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "events:PutEvents",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CustomEventBusEC0C3CB8",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InputLambdaServiceRoleDefaultPolicy9708E6F3",
        "Roles": [
          {
            "Ref": "InputLambdaServiceRole4E05AD7C"
          }
        ]
      }
    },
    "InputLambda695C9911": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "\ndef handler(event, context):\n    if event.get(\"mode\") == \"failure\":\n        raise Exception(\"intentional failure!\")\n    else:\n        return {\n            \"hello\": \"world\",\n            \"test\": \"abc\",\n            \"val\": 5,\n            \"success\": True\n        }\n"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "InputLambdaServiceRole4E05AD7C",
            "Arn"
          ]
        },
        "Runtime": "python3.12"
      },
      "DependsOn": [
        "InputLambdaServiceRoleDefaultPolicy9708E6F3",
        "InputLambdaServiceRole4E05AD7C"
      ]
    },
    "InputLambdaEventInvokeConfig580A3D5F": {
      "Type": "AWS::Lambda::EventInvokeConfig",
      "Properties": {
        "DestinationConfig": {
          "OnFailure": {
            "Destination": {
              "Fn::GetAtt": [
                "CustomEventBusEC0C3CB8",
                "Arn"
              ]
            }
          },
          "OnSuccess": {
            "Destination": {
              "Fn::GetAtt": [
                "CustomEventBusEC0C3CB8",
                "Arn"
              ]
            }
          }
        },
        "FunctionName": {
          "Ref": "InputLambda695C9911"
        },
        "MaximumRetryAttempts": 0,
        "Qualifier": "$LATEST"
      }
    },
    "TriggeredLambdaServiceRoleBB080110": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "TriggeredLambdaBE2D8BDA": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "\nimport json\n\ndef handler(event, context):\n    print(json.dumps(event))\n    return {\"invocation\": True}\n"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "TriggeredLambdaServiceRoleBB080110",
            "Arn"
          ]
        },
        "Runtime": "python3.12"
      },
      "DependsOn": [
        "TriggeredLambdaServiceRoleBB080110"
      ]
    },
    "EmptyFilterRule6627F20C": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "EventBusName": {
          "Ref": "CustomEventBusEC0C3CB8"
        },
        "EventPattern": {
          "version": [
            "0"
          ]
        },
        "Name": "CustomRule",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "TriggeredLambdaBE2D8BDA",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      }
    },
    "EmptyFilterRuleAllowEventRuleEventbridgeStackTriggeredLambda3DD76C6517715217": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "TriggeredLambdaBE2D8BDA",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "EmptyFilterRule6627F20C",
            "Arn"
          ]
        }
      }
    }
  },
  "Outputs": {
    "InputFunc": {
      "Value": {
        "Ref": "InputLambda695C9911"
      }
    },
    "TriggeredFunc": {
      "Value": {
        "Ref": "TriggeredLambdaBE2D8BDA"
      }
    },
    "EventBusName": {
      "Value": {
        "Ref": "CustomEventBusEC0C3CB8"
      }
    }
  }
}
