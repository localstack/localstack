AWSTemplateFormatVersion: 2010-09-09

Parameters:
  FunctionName:
    Type: String
  AliasName:
    Type: String

Resources:
  MyFnServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Ref FunctionName
      Code:
        ZipFile: |
          import os

          def handler(event, context):
              function_version = os.environ["AWS_LAMBDA_FUNCTION_VERSION"]
              print(f"{function_version=}")
              init_type = os.environ.get("_XRAY_SDK_LAMBDA_PLACEMENT_INIT_TYPE", None)
              print(f"{init_type=}")
              return {"function_version": function_version, "initialization_type": init_type}
      Role:
        Fn::GetAtt:
          - MyFnServiceRole
          - Arn
      Handler: index.handler
      Runtime: python3.12
    DependsOn:
      - MyFnServiceRole

  Version:
    Type: AWS::Lambda::Version
    Properties:
      FunctionName: !Ref LambdaFunction
      Description: v1

  FunctionAlias:
    Type: AWS::Lambda::Alias
    Properties:
      FunctionName: !Ref FunctionName
      FunctionVersion: !GetAtt Version.Version
      Name: !Ref AliasName
      ProvisionedConcurrencyConfig:
        ProvisionedConcurrentExecutions: 1

    DependsOn:
      - LambdaFunction
