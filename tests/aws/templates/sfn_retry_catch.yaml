Resources:
  fnServiceRole5D180AFD:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
  fn5FF616E3:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: |+

          def handler(event, ctx):
              raise Exception("test")

      Role:
        Fn::GetAtt:
          - fnServiceRole5D180AFD
          - Arn
      Handler: index.handler
      Runtime: python3.9
    DependsOn:
      - fnServiceRole5D180AFD
  queue276F7297:
    Type: AWS::SQS::Queue
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  statemRoleBB8FDC89:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                Fn::FindInMap:
                  - ServiceprincipalMap
                  - Ref: AWS::Region
                  - states
        Version: "2012-10-17"
  statemRoleDefaultPolicy3451B92B:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - fn5FF616E3
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - fn5FF616E3
                        - Arn
                    - :*
          - Action: sqs:SendMessage
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - queue276F7297
                - Arn
        Version: "2012-10-17"
      PolicyName: statemRoleDefaultPolicy3451B92B
      Roles:
        - Ref: statemRoleBB8FDC89
  statem555CAA27:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn:
        Fn::GetAtt:
          - statemRoleBB8FDC89
          - Arn
      DefinitionString:
        Fn::Join:
          - ""
          - - '{"StartAt":"InvokeFunction","States":{"InvokeFunction":{"Next":"SendSuccess","Retry":[{"ErrorEquals":["Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2},{"ErrorEquals":["Exception"],"IntervalSeconds":1,"MaxAttempts":3,"BackoffRate":2}],"Catch":[{"ErrorEquals":["States.ALL"],"Next":"SendToDLQ"}],"Type":"Task","Resource":"arn:'
            - Ref: AWS::Partition
            - :states:::lambda:invoke","Parameters":{"FunctionName":"
            - Fn::GetAtt:
                - fn5FF616E3
                - Arn
            - '","Payload.$":"$"}},"SendSuccess":{"End":true,"Type":"Task","Resource":"arn:'
            - Ref: AWS::Partition
            - :states:::sqs:sendMessage","Parameters":{"QueueUrl":"
            - Ref: queue276F7297
            - '","MessageBody":"Success"}},"SendToDLQ":{"End":true,"Type":"Task","Resource":"arn:'
            - Ref: AWS::Partition
            - :states:::sqs:sendMessage","Parameters":{"QueueUrl":"
            - Ref: queue276F7297
            - '","MessageBody":"Fail"}}}}'
    DependsOn:
      - statemRoleDefaultPolicy3451B92B
      - statemRoleBB8FDC89
Outputs:
  smArnOutput:
    Value:
      Ref: statem555CAA27
  smNameOutput:
    Value:
      Fn::GetAtt:
        - statem555CAA27
        - Name
  fnNameOutput:
    Value:
      Ref: fn5FF616E3
  queueUrlOutput:
    Value:
      Ref: queue276F7297
Mappings:
  ServiceprincipalMap:
    af-south-1:
      states: states.af-south-1.amazonaws.com
    ap-east-1:
      states: states.ap-east-1.amazonaws.com
    ap-northeast-1:
      states: states.ap-northeast-1.amazonaws.com
    ap-northeast-2:
      states: states.ap-northeast-2.amazonaws.com
    ap-northeast-3:
      states: states.ap-northeast-3.amazonaws.com
    ap-south-1:
      states: states.ap-south-1.amazonaws.com
    ap-southeast-1:
      states: states.ap-southeast-1.amazonaws.com
    ap-southeast-2:
      states: states.ap-southeast-2.amazonaws.com
    ap-southeast-3:
      states: states.ap-southeast-3.amazonaws.com
    ca-central-1:
      states: states.ca-central-1.amazonaws.com
    cn-north-1:
      states: states.cn-north-1.amazonaws.com
    cn-northwest-1:
      states: states.cn-northwest-1.amazonaws.com
    eu-central-1:
      states: states.eu-central-1.amazonaws.com
    eu-north-1:
      states: states.eu-north-1.amazonaws.com
    eu-south-1:
      states: states.eu-south-1.amazonaws.com
    eu-south-2:
      states: states.eu-south-2.amazonaws.com
    eu-west-1:
      states: states.eu-west-1.amazonaws.com
    eu-west-2:
      states: states.eu-west-2.amazonaws.com
    eu-west-3:
      states: states.eu-west-3.amazonaws.com
    me-south-1:
      states: states.me-south-1.amazonaws.com
    sa-east-1:
      states: states.sa-east-1.amazonaws.com
    us-east-1:
      states: states.us-east-1.amazonaws.com
    us-east-2:
      states: states.us-east-2.amazonaws.com
    us-gov-east-1:
      states: states.us-gov-east-1.amazonaws.com
    us-gov-west-1:
      states: states.us-gov-west-1.amazonaws.com
    us-iso-east-1:
      states: states.amazonaws.com
    us-iso-west-1:
      states: states.amazonaws.com
    us-isob-east-1:
      states: states.amazonaws.com
    us-west-1:
      states: states.us-west-1.amazonaws.com
    us-west-2:
      states: states.us-west-2.amazonaws.com
