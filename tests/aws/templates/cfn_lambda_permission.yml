Parameters:
  PrincipalForPermission:
    Type: String
    Default: '*'

Resources:
  topic69831491:
    Type: AWS::SNS::Topic
  fnServiceRole5D180AFD:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
  fn5FF616E3:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: |

          def handler(event, context):
              print(event)
              return "hello"
      Role:
        Fn::GetAtt:
          - fnServiceRole5D180AFD
          - Arn
      Handler: index.handler
      Runtime: python3.9
    DependsOn:
      - fnServiceRole5D180AFD
  fnAllowInvokeLambdaPermissionsStacktopicF723B1A748672DB5:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - fn5FF616E3
          - Arn
      Principal: !Ref PrincipalForPermission

Outputs:
  FunctionName:
    Value: !Ref fn5FF616E3