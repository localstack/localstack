AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  ResourceNamespace:
    Type: String
    Default: ''
  Stage:
    Type: String
    AllowedValues: [Dev, Test, Staging, Prod]
    Default: Dev


Conditions:
  HasNamespace: !Not [!Equals [!Ref ResourceNamespace, '']]

Mappings:
  StageMap:
    Dev:
      ReadCapacity: 1
      WriteCapacity: 1
    Test:
      ReadCapacity: 1
      WriteCapacity: 1
    Prod:
      ReadCapacity: 5
      WriteCapacity: 5

Resources:
  FullAccessCentralControlPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Join
        - '-'
        - - !If [ HasNamespace, !Ref ResourceNamespace, !Ref 'AWS::StackName']
          - 'CC-full-dynamodb-policy'
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Sid: "SpecificTable"
            Effect: "Allow"
            Action:
              - dynamodb:BatchGet*
              - dynamodb:Get*
              - dynamodb:Query
              - dynamodb:BatchWrite*
              - dynamodb:Delete*
              - dynamodb:Update*
              - dynamodb:PutItem
              - dynamodb:DescribeStream
              - dynamodb:DescribeTable
            Resource: !Join
              - ''
              - - "arn:aws:dynamodb:*:*:table/"
                - !If [ HasNamespace, !Ref ResourceNamespace, !Ref 'AWS::StackName']
                - "-CC*"
  ReadAccessCentralControlPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Join
        - '-'
        - - !If [ HasNamespace, !Ref ResourceNamespace, !Ref 'AWS::StackName']
          - 'CC-read-dynamodb-policy'
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Sid: "SpecificTable"
            Effect: "Allow"
            Action:
              - dynamodb:BatchGet*
              - dynamodb:Get*
              - dynamodb:Query
              - dynamodb:DescribeStream
              - dynamodb:DescribeTable
            Resource: !Join
              - ''
              - - "arn:aws:dynamodb:*:*:table/"
                - !If [ HasNamespace, !Ref ResourceNamespace, !Ref 'AWS::StackName']
                - "-CC*"

  GroupTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      TableName: !Join
        - '-'
        - - !If [ HasNamespace, !Ref ResourceNamespace, !Ref 'AWS::StackName']
          - "CC-Groups"
      AttributeDefinitions:
        -
          AttributeName: "site"
          AttributeType: "S"
        -
          AttributeName: "id"
          AttributeType: "S"
      KeySchema:
        -
          AttributeName: "site"
          KeyType: "HASH"
        -
          AttributeName: "id"
          KeyType: "RANGE"
      ProvisionedThroughput:
        ReadCapacityUnits: !FindInMap [StageMap, !Ref Stage, ReadCapacity]
        WriteCapacityUnits: !FindInMap [StageMap, !Ref Stage, WriteCapacity]
      StreamSpecification:
        StreamViewType: KEYS_ONLY
  SceneTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      TableName: !Join
        - '-'
        - - !If [ HasNamespace, !Ref ResourceNamespace, !Ref 'AWS::StackName']
          - "CC-Scenes"
      AttributeDefinitions:
        -
          AttributeName: "site"
          AttributeType: "S"
        -
          AttributeName: "id"
          AttributeType: "S"
      KeySchema:
        -
          AttributeName: "site"
          KeyType: "HASH"
        -
          AttributeName: "id"
          KeyType: "RANGE"
      ProvisionedThroughput:
        ReadCapacityUnits: !FindInMap [StageMap, !Ref Stage, ReadCapacity]
        WriteCapacityUnits: !FindInMap [StageMap, !Ref Stage, WriteCapacity]
      StreamSpecification:
        StreamViewType: KEYS_ONLY
  CustomSceneTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      TableName: !Join
        - '-'
        - - !If [ HasNamespace, !Ref ResourceNamespace, !Ref 'AWS::StackName']
          - "CC-CustomScenes"
      AttributeDefinitions:
        -
          AttributeName: "site"
          AttributeType: "S"
        -
          AttributeName: "id"
          AttributeType: "S"
      KeySchema:
        -
          AttributeName: "site"
          KeyType: "HASH"
        -
          AttributeName: "id"
          KeyType: "RANGE"
      ProvisionedThroughput:
        ReadCapacityUnits: !FindInMap [StageMap, !Ref Stage, ReadCapacity]
        WriteCapacityUnits: !FindInMap [StageMap, !Ref Stage, WriteCapacity]
      StreamSpecification:
        StreamViewType: KEYS_ONLY
  ScheduleTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      TableName: !Join
        - '-'
        - - !If [ HasNamespace, !Ref ResourceNamespace, !Ref 'AWS::StackName']
          - "CC-Schedules"
      AttributeDefinitions:
        -
          AttributeName: "site"
          AttributeType: "S"
        -
          AttributeName: "id"
          AttributeType: "S"
      KeySchema:
        -
          AttributeName: "site"
          KeyType: "HASH"
        -
          AttributeName: "id"
          KeyType: "RANGE"
      ProvisionedThroughput:
        ReadCapacityUnits: !FindInMap [StageMap, !Ref Stage, ReadCapacity]
        WriteCapacityUnits: !FindInMap [StageMap, !Ref Stage, WriteCapacity]
      StreamSpecification:
        StreamViewType: KEYS_ONLY
Outputs:
  FullAccessCentralControlPolicy:
    Value: !Ref FullAccessCentralControlPolicy
    Export:
      Name: !Join
        - '-'
        - - !If [ HasNamespace, !Ref ResourceNamespace, !Ref 'AWS::StackName']
          - 'FullAccessCentralControlPolicy'
  ReadAccessCentralControlPolicy:
    Value: !Ref ReadAccessCentralControlPolicy
    Export:
      Name: !Join
        - '-'
        - - !If [ HasNamespace, !Ref ResourceNamespace, !Ref 'AWS::StackName']
          - 'ReadAccessCentralControlPolicy'
  GroupTableStreamArn:
    Value: !GetAtt GroupTable.StreamArn
    Export:
      Name: !Join
        - '-'
        - - !If [ HasNamespace, !Ref ResourceNamespace, !Ref 'AWS::StackName']
          - 'cc-groups-stream'
  SceneTableStreamArn:
    Value: !GetAtt SceneTable.StreamArn
    Export:
      Name: !Join
        - '-'
        - - !If [ HasNamespace, !Ref ResourceNamespace, !Ref 'AWS::StackName']
          - 'cc-scenes-stream'
  CustomSceneTableStreamArn:
    Value: !GetAtt SceneTable.StreamArn
    Export:
      Name: !Join
        - '-'
        - - !If [ HasNamespace, !Ref ResourceNamespace, !Ref 'AWS::StackName']
          - 'cc-customscenes-stream'
  ScheduleTableStreamArn:
    Value: !GetAtt ScheduleTable.StreamArn
    Export:
      Name: !Join
        - '-'
        - - !If [ HasNamespace, !Ref ResourceNamespace, !Ref 'AWS::StackName']
          - 'cc-schedules-stream'