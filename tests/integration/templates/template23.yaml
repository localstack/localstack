AWSTemplateFormatVersion: '2010-09-09'
Description: Template which showcases dependency resolution failure with shorthand Sub
Parameters:
  Environment:
    Type: String
    Description: Environment name
    Default: 'Test'
  ApiKey:
    Type: String
    Description: API key

Resources:
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      # This does not work
      LogGroupName: !Sub "aws/lambda/${Environment}-function"
      # This also does not work
#      LogGroupName:
#        Fn::Sub: "aws/lambda/${Environment}-function"
      # This does work
#      LogGroupName:
#        Fn::Sub:
#          - "aws/lambda/${Environment}-function"
#          - {}
      # This works too
#      LogGroupName:
#        Fn::Join:
#        - ''
#        - - aws/lambda/
#          - !Ref Environment
#          - -function

  Role:
    Type: AWS::IAM::Role
    DependsOn:
    - LogGroup
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName: root
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:PutLogEvents
            Resource: '*'
      Path: "/"

  # IAM role for running the step function
  StateMachineExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: "Allow"
          Principal:
            Service: !Sub states.${AWS::Region}.amazonaws.com
          Action: "sts:AssumeRole"
      Policies:
      - PolicyName: StatesExecutionPolicy
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Effect: Allow
            Action: "lambda:InvokeFunction"
            Resource: "*"

  # Step function that executes the workflow
  StateMachine:
    Type: "AWS::StepFunctions::StateMachine"
    Properties:
      RoleArn: !GetAtt StateMachineExecutionRole.Arn
      DefinitionString:
        !Sub
      - |-
        {
          "Comment": "",
          "StartAt": "time-series-update",
          "States": {
            "time-series-update": {
              "Type": "Task",
              "Resource": "arn:aws:states:::lambda:invoke.waitForTaskToken",
              "HeartbeatSeconds": 3600,
              "Parameters": {
                "FunctionName": "some-lambda",
                "Payload": {
                  "key": "${apiKey}"
                }
              },
              "ResultPath": "$.timeSeriesUpdateResult",
              "End": true
            }
          }
        }
      - {
        apiKey: !Ref ApiKey
      }