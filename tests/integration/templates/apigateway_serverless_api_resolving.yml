AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: AWS SAM template with a simple API definition
Parameters:
  AllowedOrigin:
    Type: 'String'
  TestSSMParameter:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/test-stack/testssm/random-value'
  TestSSMParameterLambdaArn:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/test-stack/testssm/lambda-arn'

Resources:
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: local
      OpenApiVersion: '2.0'
      Cors:
        AllowMethods: "'OPTIONS,POST,GET,PUT'"
        AllowHeaders: !Sub "'Content-Type,Authorization,${TestSSMParameter}'"
        AllowCredentials: true
        AllowOrigin: !Sub "'${AllowedOrigin}'"
      Auth:
        Authorizers:
          LambdaTokenAuthorizer:
            FunctionArn: !Ref TestSSMParameterLambdaArn

  ApiFunction: # Adds a GET api endpoint at "/" to the ApiGatewayApi via an Api event
    Type: AWS::Serverless::Function
    Properties:
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /
            Method: get
            RestApiId:
              Ref: ApiGatewayApi
      Runtime: python3.9
      Handler: index.handler
      InlineCode: |
        def handler(event, context):
            return {'body': 'Hello World!', 'statusCode': 200}
Outputs:
  ApiGatewayApiId:
    Value: !Ref ApiGatewayApi
