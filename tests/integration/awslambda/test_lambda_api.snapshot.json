{
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaFunction::test_function_lifecycle": {
    "recorded-date": "30-09-2022, 15:30:31",
    "recorded-content": {
      "create_response": {
        "CreateEventSourceMappingResponse": null,
        "CreateFunctionResponse": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": "<code-size>",
          "Description": "",
          "Environment": {
            "Variables": {}
          },
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "Handler": "handler.handler",
          "LastModified": "date",
          "MemorySize": 256,
          "PackageType": "Zip",
          "RevisionId": "<uuid:1>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.9",
          "State": "Pending",
          "StateReason": "The function is being created.",
          "StateReasonCode": "Creating",
          "Timeout": 5,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST",
          "ResponseMetadata": {
            "HTTPHeaders": {},
            "HTTPStatusCode": 201
          }
        }
      },
      "get_function_response": {
        "Code": {
          "Location": "<location>",
          "RepositoryType": "S3"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": "<code-size>",
          "Description": "",
          "Environment": {
            "Variables": {}
          },
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "Handler": "handler.handler",
          "LastModified": "date",
          "LastUpdateStatus": "Successful",
          "MemorySize": 256,
          "PackageType": "Zip",
          "RevisionId": "<uuid:2>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.9",
          "State": "Active",
          "Timeout": 5,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "update_func_conf_response": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:1>",
        "CodeSize": "<code-size>",
        "Description": "Changed-Description",
        "Environment": {
          "Variables": {
            "ENV_A": "a"
          }
        },
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "FunctionName": "<function-name:1>",
        "Handler": "handler.handler",
        "LastModified": "date",
        "LastUpdateStatus": "InProgress",
        "LastUpdateStatusReason": "The function is being created.",
        "LastUpdateStatusReasonCode": "Creating",
        "MemorySize": 512,
        "PackageType": "Zip",
        "RevisionId": "<uuid:3>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.8",
        "State": "Active",
        "Timeout": 10,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "$LATEST",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_function_response_postupdate": {
        "Code": {
          "Location": "<location>",
          "RepositoryType": "S3"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": "<code-size>",
          "Description": "Changed-Description",
          "Environment": {
            "Variables": {
              "ENV_A": "a"
            }
          },
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "Handler": "handler.handler",
          "LastModified": "date",
          "LastUpdateStatus": "Successful",
          "MemorySize": 512,
          "PackageType": "Zip",
          "RevisionId": "<uuid:4>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.8",
          "State": "Active",
          "Timeout": 10,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "update_code_response": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:2>",
        "CodeSize": "<code-size>",
        "Description": "Changed-Description",
        "Environment": {
          "Variables": {
            "ENV_A": "a"
          }
        },
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "FunctionName": "<function-name:1>",
        "Handler": "handler.handler",
        "LastModified": "date",
        "LastUpdateStatus": "InProgress",
        "LastUpdateStatusReason": "The function is being created.",
        "LastUpdateStatusReasonCode": "Creating",
        "MemorySize": 512,
        "PackageType": "Zip",
        "RevisionId": "<uuid:5>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.8",
        "State": "Active",
        "Timeout": 10,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "$LATEST",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_function_response_postcodeupdate": {
        "Code": {
          "Location": "<location>",
          "RepositoryType": "S3"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:2>",
          "CodeSize": "<code-size>",
          "Description": "Changed-Description",
          "Environment": {
            "Variables": {
              "ENV_A": "a"
            }
          },
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "Handler": "handler.handler",
          "LastModified": "date",
          "LastUpdateStatus": "Successful",
          "MemorySize": 512,
          "PackageType": "Zip",
          "RevisionId": "<uuid:6>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.8",
          "State": "Active",
          "Timeout": 10,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "delete_response": {
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 204
        }
      },
      "delete_postdelete": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:<function-name:1>"
        },
        "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaFunction::test_redundant_updates": {
    "recorded-date": "30-09-2022, 15:30:37",
    "recorded-content": {
      "create_response": {
        "CreateEventSourceMappingResponse": null,
        "CreateFunctionResponse": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": "<code-size>",
          "Description": "Initial description",
          "Environment": {
            "Variables": {}
          },
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "Handler": "handler.handler",
          "LastModified": "date",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:1>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.9",
          "State": "Pending",
          "StateReason": "The function is being created.",
          "StateReasonCode": "Creating",
          "Timeout": 30,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST",
          "ResponseMetadata": {
            "HTTPHeaders": {},
            "HTTPStatusCode": 201
          }
        }
      },
      "first_update_result": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:1>",
        "CodeSize": "<code-size>",
        "Description": "1st update description",
        "Environment": {
          "Variables": {}
        },
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "FunctionName": "<function-name:1>",
        "Handler": "handler.handler",
        "LastModified": "date",
        "LastUpdateStatus": "InProgress",
        "LastUpdateStatusReason": "The function is being created.",
        "LastUpdateStatusReasonCode": "Creating",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:2>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.9",
        "State": "Active",
        "Timeout": 30,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "$LATEST",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_fn_config_result": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:1>",
        "CodeSize": "<code-size>",
        "Description": "1st update description",
        "Environment": {
          "Variables": {}
        },
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "FunctionName": "<function-name:1>",
        "Handler": "handler.handler",
        "LastModified": "date",
        "LastUpdateStatus": "Successful",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:3>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.9",
        "State": "Active",
        "Timeout": 30,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "$LATEST",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_fn_result": {
        "Code": {
          "Location": "<location>",
          "RepositoryType": "S3"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": "<code-size>",
          "Description": "1st update description",
          "Environment": {
            "Variables": {}
          },
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "Handler": "handler.handler",
          "LastModified": "date",
          "LastUpdateStatus": "Successful",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:3>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.9",
          "State": "Active",
          "Timeout": 30,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "redundant_update_result": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:1>",
        "CodeSize": "<code-size>",
        "Description": "1st update description",
        "Environment": {
          "Variables": {}
        },
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "FunctionName": "<function-name:1>",
        "Handler": "handler.handler",
        "LastModified": "date",
        "LastUpdateStatus": "InProgress",
        "LastUpdateStatusReason": "The function is being created.",
        "LastUpdateStatusReasonCode": "Creating",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:4>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.9",
        "State": "Active",
        "Timeout": 30,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "$LATEST",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_fn_result_after_redundant_update": {
        "Code": {
          "Location": "<location>",
          "RepositoryType": "S3"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": "<code-size>",
          "Description": "1st update description",
          "Environment": {
            "Variables": {}
          },
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "Handler": "handler.handler",
          "LastModified": "date",
          "LastUpdateStatus": "Successful",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:5>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.9",
          "State": "Active",
          "Timeout": 30,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaFunction::test_ops_with_arn_qualifier_mismatch[delete_function]": {
    "recorded-date": "30-09-2022, 15:30:37",
    "recorded-content": {
      "not_match_exception": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "The derived qualifier from the function name does not match the specified qualifier."
        },
        "Type": "User",
        "message": "The derived qualifier from the function name does not match the specified qualifier.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "match_exception": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "$LATEST version cannot be deleted without deleting the function."
        },
        "Type": "User",
        "message": "$LATEST version cannot be deleted without deleting the function.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaFunction::test_ops_with_arn_qualifier_mismatch[get_function]": {
    "recorded-date": "30-09-2022, 15:30:38",
    "recorded-content": {
      "not_match_exception": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "The derived qualifier from the function name does not match the specified qualifier."
        },
        "Type": "User",
        "message": "The derived qualifier from the function name does not match the specified qualifier.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "match_exception": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:some-function:$LATEST"
        },
        "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:some-function:$LATEST",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaFunction::test_ops_with_arn_qualifier_mismatch[get_function_configuration]": {
    "recorded-date": "30-09-2022, 15:30:38",
    "recorded-content": {
      "not_match_exception": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "The derived qualifier from the function name does not match the specified qualifier."
        },
        "Type": "User",
        "message": "The derived qualifier from the function name does not match the specified qualifier.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "match_exception": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:some-function:$LATEST"
        },
        "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:some-function:$LATEST",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaFunction::test_ops_on_nonexisting_version[get_function]": {
    "recorded-date": "30-09-2022, 15:30:41",
    "recorded-content": {
      "version_not_found_exception": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:<fn-name>:1221"
        },
        "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:<fn-name>:1221",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaFunction::test_ops_on_nonexisting_version[get_function_configuration]": {
    "recorded-date": "30-09-2022, 15:30:43",
    "recorded-content": {
      "version_not_found_exception": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:<fn-name>:1221"
        },
        "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:<fn-name>:1221",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaFunction::test_ops_on_nonexisting_version[get_function_event_invoke_config]": {
    "recorded-date": "30-09-2022, 15:30:46",
    "recorded-content": {
      "version_not_found_exception": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "The function arn:aws:lambda:<region>:111111111111:function:<fn-name>:1221 doesn't have an EventInvokeConfig"
        },
        "Message": "The function arn:aws:lambda:<region>:111111111111:function:<fn-name>:1221 doesn't have an EventInvokeConfig",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaFunction::test_delete_on_nonexisting_version": {
    "recorded-date": "30-09-2022, 15:30:50",
    "recorded-content": {
      "delete_function_response_non_existent": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:<fn-name>"
        },
        "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:<fn-name>",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "delete_function_response_non_existent_with_qualifier": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:<fn-name>"
        },
        "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:<fn-name>",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaFunction::test_ops_on_nonexisting_fn[delete_function]": {
    "recorded-date": "30-09-2022, 15:30:50",
    "recorded-content": {
      "not_found_exception": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:<nonexisting-fn-name>"
        },
        "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:<nonexisting-fn-name>",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaFunction::test_ops_on_nonexisting_fn[get_function]": {
    "recorded-date": "30-09-2022, 15:30:50",
    "recorded-content": {
      "not_found_exception": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:<nonexisting-fn-name>"
        },
        "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:<nonexisting-fn-name>",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaFunction::test_ops_on_nonexisting_fn[get_function_configuration]": {
    "recorded-date": "30-09-2022, 15:30:50",
    "recorded-content": {
      "not_found_exception": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:<nonexisting-fn-name>"
        },
        "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:<nonexisting-fn-name>",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaFunction::test_ops_on_nonexisting_fn[get_function_url_config]": {
    "recorded-date": "30-09-2022, 15:30:51",
    "recorded-content": {
      "not_found_exception": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "The resource you requested does not exist."
        },
        "Message": "The resource you requested does not exist.",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaFunction::test_ops_on_nonexisting_fn[get_function_code_signing_config]": {
    "recorded-date": "30-09-2022, 15:30:51",
    "recorded-content": {
      "not_found_exception": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:<nonexisting-fn-name>"
        },
        "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:<nonexisting-fn-name>",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaFunction::test_ops_on_nonexisting_fn[get_function_event_invoke_config]": {
    "recorded-date": "30-09-2022, 15:30:51",
    "recorded-content": {
      "not_found_exception": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "The function arn:aws:lambda:<region>:111111111111:function:<nonexisting-fn-name>:$LATEST doesn't have an EventInvokeConfig"
        },
        "Message": "The function arn:aws:lambda:<region>:111111111111:function:<nonexisting-fn-name>:$LATEST doesn't have an EventInvokeConfig",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaFunction::test_ops_on_nonexisting_fn[get_function_concurrency]": {
    "recorded-date": "30-09-2022, 15:30:51",
    "recorded-content": {
      "not_found_exception": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:<nonexisting-fn-name>"
        },
        "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:<nonexisting-fn-name>",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaFunction::test_get_function_wrong_region[get_function]": {
    "recorded-date": "30-09-2022, 15:30:54",
    "recorded-content": {
      "wrong_region_exception": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Functions from '<wrong-region>' are not reachable in this region ('<region>')"
        },
        "Message": "Functions from '<wrong-region>' are not reachable in this region ('<region>')",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaFunction::test_get_function_wrong_region[get_function_configuration]": {
    "recorded-date": "30-09-2022, 15:30:57",
    "recorded-content": {
      "wrong_region_exception": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Functions from '<wrong-region>' are not reachable in this region ('<region>')"
        },
        "Message": "Functions from '<wrong-region>' are not reachable in this region ('<region>')",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaFunction::test_get_function_wrong_region[get_function_url_config]": {
    "recorded-date": "30-09-2022, 15:30:59",
    "recorded-content": {
      "wrong_region_exception": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Functions from '<wrong-region>' are not reachable in this region ('<region>')"
        },
        "Message": "Functions from '<wrong-region>' are not reachable in this region ('<region>')",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaFunction::test_get_function_wrong_region[get_function_code_signing_config]": {
    "recorded-date": "30-09-2022, 15:31:02",
    "recorded-content": {
      "wrong_region_exception": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Functions from '<wrong-region>' are not reachable in this region ('<region>')"
        },
        "Message": "Functions from '<wrong-region>' are not reachable in this region ('<region>')",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaFunction::test_get_function_wrong_region[get_function_event_invoke_config]": {
    "recorded-date": "30-09-2022, 15:31:05",
    "recorded-content": {
      "wrong_region_exception": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Functions from '<wrong-region>' are not reachable in this region ('<region>')"
        },
        "Message": "Functions from '<wrong-region>' are not reachable in this region ('<region>')",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaFunction::test_get_function_wrong_region[get_function_concurrency]": {
    "recorded-date": "30-09-2022, 15:31:08",
    "recorded-content": {
      "wrong_region_exception": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Functions from '<wrong-region>' are not reachable in this region ('<region>')"
        },
        "Message": "Functions from '<wrong-region>' are not reachable in this region ('<region>')",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaFunction::test_get_function_wrong_region[delete_function]": {
    "recorded-date": "30-09-2022, 15:31:10",
    "recorded-content": {
      "wrong_region_exception": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Functions from '<wrong-region>' are not reachable in this region ('<region>')"
        },
        "Message": "Functions from '<wrong-region>' are not reachable in this region ('<region>')",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaFunction::test_get_function_wrong_region[invoke]": {
    "recorded-date": "30-09-2022, 15:31:13",
    "recorded-content": {
      "wrong_region_exception": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Functions from '<wrong-region>' are not reachable in this region ('<region>')"
        },
        "Message": "Functions from '<wrong-region>' are not reachable in this region ('<region>')",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaFunction::test_lambda_code_location_zipfile": {
    "recorded-date": "30-09-2022, 15:31:17",
    "recorded-content": {
      "create-response-zip-file": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:1>",
        "CodeSize": "<code-size>",
        "Description": "",
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "FunctionName": "<function-name:1>",
        "Handler": "index.handler",
        "LastModified": "date",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:1>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.9",
        "State": "Pending",
        "StateReason": "The function is being created.",
        "StateReasonCode": "Creating",
        "Timeout": 3,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "$LATEST",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "get-function-response": {
        "Code": {
          "Location": "<location>",
          "RepositoryType": "S3"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": "<code-size>",
          "Description": "",
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "Handler": "index.handler",
          "LastModified": "date",
          "LastUpdateStatus": "Successful",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:2>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.9",
          "State": "Active",
          "Timeout": 3,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "update-function-response": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:2>",
        "CodeSize": "<code-size>",
        "Description": "",
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "FunctionName": "<function-name:1>",
        "Handler": "index.handler",
        "LastModified": "date",
        "LastUpdateStatus": "InProgress",
        "LastUpdateStatusReason": "The function is being created.",
        "LastUpdateStatusReasonCode": "Creating",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:3>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.9",
        "State": "Active",
        "Timeout": 3,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "$LATEST",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get-function-response-updated": {
        "Code": {
          "Location": "<location>",
          "RepositoryType": "S3"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:2>",
          "CodeSize": "<code-size>",
          "Description": "",
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "Handler": "index.handler",
          "LastModified": "date",
          "LastUpdateStatus": "InProgress",
          "LastUpdateStatusReason": "The function is being created.",
          "LastUpdateStatusReasonCode": "Creating",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:3>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.9",
          "State": "Active",
          "Timeout": 3,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaFunction::test_lambda_code_location_s3": {
    "recorded-date": "30-09-2022, 15:31:23",
    "recorded-content": {
      "create_response_s3": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:1>",
        "CodeSize": "<code-size>",
        "Description": "",
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "FunctionName": "<function-name:1>",
        "Handler": "index.handler",
        "LastModified": "date",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:1>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.9",
        "State": "Pending",
        "StateReason": "The function is being created.",
        "StateReasonCode": "Creating",
        "Timeout": 3,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "$LATEST",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "get-function-response": {
        "Code": {
          "Location": "<location>",
          "RepositoryType": "S3"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": "<code-size>",
          "Description": "",
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "Handler": "index.handler",
          "LastModified": "date",
          "LastUpdateStatus": "Successful",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:2>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.9",
          "State": "Active",
          "Timeout": 3,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "update-function-response": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:2>",
        "CodeSize": "<code-size>",
        "Description": "",
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "FunctionName": "<function-name:1>",
        "Handler": "index.handler",
        "LastModified": "date",
        "LastUpdateStatus": "InProgress",
        "LastUpdateStatusReason": "The function is being created.",
        "LastUpdateStatusReasonCode": "Creating",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:3>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.9",
        "State": "Active",
        "Timeout": 3,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "$LATEST",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get-function-response-updated": {
        "Code": {
          "Location": "<location>",
          "RepositoryType": "S3"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:2>",
          "CodeSize": "<code-size>",
          "Description": "",
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "Handler": "index.handler",
          "LastModified": "date",
          "LastUpdateStatus": "InProgress",
          "LastUpdateStatusReason": "The function is being created.",
          "LastUpdateStatusReasonCode": "Creating",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:3>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.9",
          "State": "Active",
          "Timeout": 3,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaVersions::test_publish_version_on_create": {
    "recorded-date": "30-09-2022, 15:31:33",
    "recorded-content": {
      "create_response": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:1>",
        "CodeSize": "<code-size>",
        "Description": "",
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "FunctionName": "<function-name:1>",
        "Handler": "index.handler",
        "LastModified": "date",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:1>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.9",
        "State": "Pending",
        "StateReason": "The function is being created.",
        "StateReasonCode": "Creating",
        "Timeout": 3,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "1",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "get_function_result": {
        "Code": {
          "Location": "<location>",
          "RepositoryType": "S3"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": "<code-size>",
          "Description": "",
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "Handler": "index.handler",
          "LastModified": "date",
          "LastUpdateStatus": "Successful",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:2>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.9",
          "State": "Active",
          "Timeout": 3,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_function_version_result": {
        "Code": {
          "Location": "<location>",
          "RepositoryType": "S3"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": "<code-size>",
          "Description": "",
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:1",
          "FunctionName": "<function-name:1>",
          "Handler": "index.handler",
          "LastModified": "date",
          "LastUpdateStatus": "Successful",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:3>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.9",
          "State": "Active",
          "Timeout": 3,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "1"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_function_latest_result": {
        "Code": {
          "Location": "<location>",
          "RepositoryType": "S3"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": "<code-size>",
          "Description": "",
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:$LATEST",
          "FunctionName": "<function-name:1>",
          "Handler": "index.handler",
          "LastModified": "date",
          "LastUpdateStatus": "Successful",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:2>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.9",
          "State": "Active",
          "Timeout": 3,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "list_versions_result": {
        "Versions": [
          {
            "Architectures": [
              "x86_64"
            ],
            "CodeSha256": "<code-sha256:1>",
            "CodeSize": "<code-size>",
            "Description": "",
            "EphemeralStorage": {
              "Size": 512
            },
            "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:$LATEST",
            "FunctionName": "<function-name:1>",
            "Handler": "index.handler",
            "LastModified": "date",
            "MemorySize": 128,
            "PackageType": "Zip",
            "RevisionId": "<uuid:2>",
            "Role": "arn:aws:iam::111111111111:role/<resource:1>",
            "Runtime": "python3.9",
            "Timeout": 3,
            "TracingConfig": {
              "Mode": "PassThrough"
            },
            "Version": "$LATEST"
          },
          {
            "Architectures": [
              "x86_64"
            ],
            "CodeSha256": "<code-sha256:1>",
            "CodeSize": "<code-size>",
            "Description": "",
            "EphemeralStorage": {
              "Size": 512
            },
            "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:1",
            "FunctionName": "<function-name:1>",
            "Handler": "index.handler",
            "LastModified": "date",
            "MemorySize": 128,
            "PackageType": "Zip",
            "RevisionId": "<uuid:3>",
            "Role": "arn:aws:iam::111111111111:role/<resource:1>",
            "Runtime": "python3.9",
            "Timeout": 3,
            "TracingConfig": {
              "Mode": "PassThrough"
            },
            "Version": "1"
          }
        ],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "repeated_publish_response": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:1>",
        "CodeSize": "<code-size>",
        "Description": "",
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:1",
        "FunctionName": "<function-name:1>",
        "Handler": "index.handler",
        "LastModified": "date",
        "LastUpdateStatus": "Successful",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:3>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.9",
        "State": "Active",
        "Timeout": 3,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "1",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "list_versions_result_after_publish": {
        "Versions": [
          {
            "Architectures": [
              "x86_64"
            ],
            "CodeSha256": "<code-sha256:1>",
            "CodeSize": "<code-size>",
            "Description": "",
            "EphemeralStorage": {
              "Size": 512
            },
            "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:$LATEST",
            "FunctionName": "<function-name:1>",
            "Handler": "index.handler",
            "LastModified": "date",
            "MemorySize": 128,
            "PackageType": "Zip",
            "RevisionId": "<uuid:2>",
            "Role": "arn:aws:iam::111111111111:role/<resource:1>",
            "Runtime": "python3.9",
            "Timeout": 3,
            "TracingConfig": {
              "Mode": "PassThrough"
            },
            "Version": "$LATEST"
          },
          {
            "Architectures": [
              "x86_64"
            ],
            "CodeSha256": "<code-sha256:1>",
            "CodeSize": "<code-size>",
            "Description": "",
            "EphemeralStorage": {
              "Size": 512
            },
            "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:1",
            "FunctionName": "<function-name:1>",
            "Handler": "index.handler",
            "LastModified": "date",
            "MemorySize": 128,
            "PackageType": "Zip",
            "RevisionId": "<uuid:3>",
            "Role": "arn:aws:iam::111111111111:role/<resource:1>",
            "Runtime": "python3.9",
            "Timeout": 3,
            "TracingConfig": {
              "Mode": "PassThrough"
            },
            "Version": "1"
          }
        ],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaVersions::test_version_lifecycle": {
    "recorded-date": "30-09-2022, 15:31:40",
    "recorded-content": {
      "create_response": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:1>",
        "CodeSize": "<code-size>",
        "Description": "No version :(",
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "FunctionName": "<function-name:1>",
        "Handler": "index.handler",
        "LastModified": "date",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:1>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.9",
        "State": "Pending",
        "StateReason": "The function is being created.",
        "StateReasonCode": "Creating",
        "Timeout": 3,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "$LATEST",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "get_function_result": {
        "Code": {
          "Location": "<location>",
          "RepositoryType": "S3"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": "<code-size>",
          "Description": "No version :(",
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "Handler": "index.handler",
          "LastModified": "date",
          "LastUpdateStatus": "Successful",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:2>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.9",
          "State": "Active",
          "Timeout": 3,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "list_versions_result": {
        "Versions": [
          {
            "Architectures": [
              "x86_64"
            ],
            "CodeSha256": "<code-sha256:1>",
            "CodeSize": "<code-size>",
            "Description": "No version :(",
            "EphemeralStorage": {
              "Size": 512
            },
            "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:$LATEST",
            "FunctionName": "<function-name:1>",
            "Handler": "index.handler",
            "LastModified": "date",
            "MemorySize": 128,
            "PackageType": "Zip",
            "RevisionId": "<uuid:2>",
            "Role": "arn:aws:iam::111111111111:role/<resource:1>",
            "Runtime": "python3.9",
            "Timeout": 3,
            "TracingConfig": {
              "Mode": "PassThrough"
            },
            "Version": "$LATEST"
          }
        ],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "first_update_response": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:1>",
        "CodeSize": "<code-size>",
        "Description": "First version :)",
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "FunctionName": "<function-name:1>",
        "Handler": "index.handler",
        "LastModified": "date",
        "LastUpdateStatus": "InProgress",
        "LastUpdateStatusReason": "The function is being created.",
        "LastUpdateStatusReasonCode": "Creating",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:3>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.9",
        "State": "Active",
        "Timeout": 3,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "$LATEST",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "first_update_get_function": {
        "Code": {
          "Location": "<location>",
          "RepositoryType": "S3"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": "<code-size>",
          "Description": "First version :)",
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "Handler": "index.handler",
          "LastModified": "date",
          "LastUpdateStatus": "Successful",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:4>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.9",
          "State": "Active",
          "Timeout": 3,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "first_publish_response": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:1>",
        "CodeSize": "<code-size>",
        "Description": "First version description :)",
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:1",
        "FunctionName": "<function-name:1>",
        "Handler": "index.handler",
        "LastModified": "date",
        "LastUpdateStatus": "Successful",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:5>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.9",
        "State": "Active",
        "Timeout": 3,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "1",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "first_publish_get_function": {
        "Code": {
          "Location": "<location>",
          "RepositoryType": "S3"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": "<code-size>",
          "Description": "First version description :)",
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:1",
          "FunctionName": "<function-name:1>",
          "Handler": "index.handler",
          "LastModified": "date",
          "LastUpdateStatus": "Successful",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:5>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.9",
          "State": "Active",
          "Timeout": 3,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "1"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "first_publish_get_function_config": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:1>",
        "CodeSize": "<code-size>",
        "Description": "First version description :)",
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:1",
        "FunctionName": "<function-name:1>",
        "Handler": "index.handler",
        "LastModified": "date",
        "LastUpdateStatus": "Successful",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:5>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.9",
        "State": "Active",
        "Timeout": 3,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "1",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "second_update_response": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:1>",
        "CodeSize": "<code-size>",
        "Description": "Second version :))",
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "FunctionName": "<function-name:1>",
        "Handler": "index.handler",
        "LastModified": "date",
        "LastUpdateStatus": "InProgress",
        "LastUpdateStatusReason": "The function is being created.",
        "LastUpdateStatusReasonCode": "Creating",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:6>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.9",
        "State": "Active",
        "Timeout": 3,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "$LATEST",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "first_publish_get_function_after_update": {
        "Code": {
          "Location": "<location>",
          "RepositoryType": "S3"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": "<code-size>",
          "Description": "First version description :)",
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:1",
          "FunctionName": "<function-name:1>",
          "Handler": "index.handler",
          "LastModified": "date",
          "LastUpdateStatus": "Successful",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:5>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.9",
          "State": "Active",
          "Timeout": 3,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "1"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "second_publish_response": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:1>",
        "CodeSize": "<code-size>",
        "Description": "Second version :))",
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:2",
        "FunctionName": "<function-name:1>",
        "Handler": "index.handler",
        "LastModified": "date",
        "LastUpdateStatus": "Successful",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:7>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.9",
        "State": "Active",
        "Timeout": 3,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "2",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "third_publish_response": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:1>",
        "CodeSize": "<code-size>",
        "Description": "Second version :))",
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:2",
        "FunctionName": "<function-name:1>",
        "Handler": "index.handler",
        "LastModified": "date",
        "LastUpdateStatus": "Successful",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:7>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.9",
        "State": "Active",
        "Timeout": 3,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "2",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "list_versions_result_end": {
        "Versions": [
          {
            "Architectures": [
              "x86_64"
            ],
            "CodeSha256": "<code-sha256:1>",
            "CodeSize": "<code-size>",
            "Description": "Second version :))",
            "EphemeralStorage": {
              "Size": 512
            },
            "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:$LATEST",
            "FunctionName": "<function-name:1>",
            "Handler": "index.handler",
            "LastModified": "date",
            "MemorySize": 128,
            "PackageType": "Zip",
            "RevisionId": "<uuid:8>",
            "Role": "arn:aws:iam::111111111111:role/<resource:1>",
            "Runtime": "python3.9",
            "Timeout": 3,
            "TracingConfig": {
              "Mode": "PassThrough"
            },
            "Version": "$LATEST"
          },
          {
            "Architectures": [
              "x86_64"
            ],
            "CodeSha256": "<code-sha256:1>",
            "CodeSize": "<code-size>",
            "Description": "First version description :)",
            "EphemeralStorage": {
              "Size": 512
            },
            "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:1",
            "FunctionName": "<function-name:1>",
            "Handler": "index.handler",
            "LastModified": "date",
            "MemorySize": 128,
            "PackageType": "Zip",
            "RevisionId": "<uuid:5>",
            "Role": "arn:aws:iam::111111111111:role/<resource:1>",
            "Runtime": "python3.9",
            "Timeout": 3,
            "TracingConfig": {
              "Mode": "PassThrough"
            },
            "Version": "1"
          },
          {
            "Architectures": [
              "x86_64"
            ],
            "CodeSha256": "<code-sha256:1>",
            "CodeSize": "<code-size>",
            "Description": "Second version :))",
            "EphemeralStorage": {
              "Size": 512
            },
            "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:2",
            "FunctionName": "<function-name:1>",
            "Handler": "index.handler",
            "LastModified": "date",
            "MemorySize": 128,
            "PackageType": "Zip",
            "RevisionId": "<uuid:7>",
            "Role": "arn:aws:iam::111111111111:role/<resource:1>",
            "Runtime": "python3.9",
            "Timeout": 3,
            "TracingConfig": {
              "Mode": "PassThrough"
            },
            "Version": "2"
          }
        ],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaVersions::test_publish_with_wrong_revisionid": {
    "recorded-date": "30-09-2022, 15:31:42",
    "recorded-content": {
      "create_response": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:1>",
        "CodeSize": "<code-size>",
        "Description": "",
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "FunctionName": "<function-name:1>",
        "Handler": "index.handler",
        "LastModified": "date",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:1>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.9",
        "State": "Pending",
        "StateReason": "The function is being created.",
        "StateReasonCode": "Creating",
        "Timeout": 3,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "$LATEST",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "get_fn_response": {
        "Code": {
          "Location": "<location>",
          "RepositoryType": "S3"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": "<code-size>",
          "Description": "",
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "Handler": "index.handler",
          "LastModified": "date",
          "LastUpdateStatus": "Successful",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:2>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.9",
          "State": "Active",
          "Timeout": 3,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "publish_wrong_revisionid_exc": {
        "Error": {
          "Code": "PreconditionFailedException",
          "Message": "The Revision Id provided does not match the latest Revision Id. Call the GetFunction/GetAlias API to retrieve the latest Revision Id"
        },
        "Type": "User",
        "message": "The Revision Id provided does not match the latest Revision Id. Call the GetFunction/GetAlias API to retrieve the latest Revision Id",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 412
        }
      },
      "publish_result": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:1>",
        "CodeSize": "<code-size>",
        "Description": "",
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:1",
        "FunctionName": "<function-name:1>",
        "Handler": "index.handler",
        "LastModified": "date",
        "LastUpdateStatus": "Successful",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:3>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.9",
        "State": "Active",
        "Timeout": 3,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "1",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaVersions::test_publish_with_wrong_sha256": {
    "recorded-date": "30-09-2022, 15:31:45",
    "recorded-content": {
      "create_response": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:1>",
        "CodeSize": "<code-size>",
        "Description": "",
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "FunctionName": "<function-name:1>",
        "Handler": "index.handler",
        "LastModified": "date",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:1>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.9",
        "State": "Pending",
        "StateReason": "The function is being created.",
        "StateReasonCode": "Creating",
        "Timeout": 3,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "$LATEST",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "get_fn_response": {
        "Code": {
          "Location": "<location>",
          "RepositoryType": "S3"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": "<code-size>",
          "Description": "",
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "Handler": "index.handler",
          "LastModified": "date",
          "LastUpdateStatus": "Successful",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:2>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.9",
          "State": "Active",
          "Timeout": 3,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "publish_wrong_sha256_exc": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "CodeSHA256 (somenonexistentsha256) is different from current CodeSHA256 in $LATEST (<code-sha256:1>). Please try again with the CodeSHA256 in $LATEST."
        },
        "Type": "User",
        "message": "CodeSHA256 (somenonexistentsha256) is different from current CodeSHA256 in $LATEST (<code-sha256:1>). Please try again with the CodeSHA256 in $LATEST.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "publish_result": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:1>",
        "CodeSize": "<code-size>",
        "Description": "",
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:1",
        "FunctionName": "<function-name:1>",
        "Handler": "index.handler",
        "LastModified": "date",
        "LastUpdateStatus": "Successful",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:3>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.9",
        "State": "Active",
        "Timeout": 3,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "1",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaVersions::test_publish_with_update": {
    "recorded-date": "30-09-2022, 15:31:48",
    "recorded-content": {
      "create_response": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:1>",
        "CodeSize": "<code-size>",
        "Description": "",
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "FunctionName": "<function-name:1>",
        "Handler": "index.handler",
        "LastModified": "date",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:1>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.9",
        "State": "Pending",
        "StateReason": "The function is being created.",
        "StateReasonCode": "Creating",
        "Timeout": 3,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "$LATEST",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "get_function_result": {
        "Code": {
          "Location": "<location>",
          "RepositoryType": "S3"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": "<code-size>",
          "Description": "",
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "Handler": "index.handler",
          "LastModified": "date",
          "LastUpdateStatus": "Successful",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:2>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.9",
          "State": "Active",
          "Timeout": 3,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "update_function_code_result": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:2>",
        "CodeSize": "<code-size>",
        "Description": "",
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:1",
        "FunctionName": "<function-name:1>",
        "Handler": "index.handler",
        "LastModified": "date",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:3>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.9",
        "State": "Pending",
        "StateReason": "The function is being created.",
        "StateReasonCode": "Creating",
        "Timeout": 3,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "1",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_function_version_result": {
        "Code": {
          "Location": "<location>",
          "RepositoryType": "S3"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:2>",
          "CodeSize": "<code-size>",
          "Description": "",
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:1",
          "FunctionName": "<function-name:1>",
          "Handler": "index.handler",
          "LastModified": "date",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:3>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.9",
          "State": "Pending",
          "StateReason": "The function is being created.",
          "StateReasonCode": "Creating",
          "Timeout": 3,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "1"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_function_latest_result": {
        "Code": {
          "Location": "<location>",
          "RepositoryType": "S3"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:2>",
          "CodeSize": "<code-size>",
          "Description": "",
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:$LATEST",
          "FunctionName": "<function-name:1>",
          "Handler": "index.handler",
          "LastModified": "date",
          "LastUpdateStatus": "InProgress",
          "LastUpdateStatusReason": "The function is being created.",
          "LastUpdateStatusReasonCode": "Creating",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:4>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.9",
          "State": "Active",
          "Timeout": 3,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaAlias::test_alias_lifecycle": {
    "recorded-date": "06-10-2022, 16:06:44",
    "recorded-content": {
      "create_response": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:1>",
        "CodeSize": "<code-size>",
        "Description": "",
        "Environment": {
          "Variables": {
            "testenv": "staging"
          }
        },
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "FunctionName": "<function-name:1>",
        "Handler": "index.handler",
        "LastModified": "date",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:1>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.9",
        "State": "Pending",
        "StateReason": "The function is being created.",
        "StateReasonCode": "Creating",
        "Timeout": 3,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "$LATEST",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "publish_v1": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:1>",
        "CodeSize": "<code-size>",
        "Description": "",
        "Environment": {
          "Variables": {
            "testenv": "staging"
          }
        },
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:1",
        "FunctionName": "<function-name:1>",
        "Handler": "index.handler",
        "LastModified": "date",
        "LastUpdateStatus": "Successful",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:2>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.9",
        "State": "Active",
        "Timeout": 3,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "1",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "publish_v2": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:1>",
        "CodeSize": "<code-size>",
        "Description": "",
        "Environment": {
          "Variables": {
            "testenv": "prod"
          }
        },
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:2",
        "FunctionName": "<function-name:1>",
        "Handler": "index.handler",
        "LastModified": "date",
        "LastUpdateStatus": "Successful",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:3>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.9",
        "State": "Active",
        "Timeout": 3,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "2",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "create_alias_1_1": {
        "AliasArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:aliasname1_1",
        "Description": "custom-alias",
        "FunctionVersion": "1",
        "Name": "aliasname1_1",
        "RevisionId": "<uuid:4>",
        "RoutingConfig": {
          "AdditionalVersionWeights": {
            "2": 0.2
          }
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "get_alias_1_1": {
        "AliasArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:aliasname1_1",
        "Description": "custom-alias",
        "FunctionVersion": "1",
        "Name": "aliasname1_1",
        "RevisionId": "<uuid:4>",
        "RoutingConfig": {
          "AdditionalVersionWeights": {
            "2": 0.2
          }
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "create_alias_1_2": {
        "AliasArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:aliasname1_2",
        "Description": "custom-alias",
        "FunctionVersion": "1",
        "Name": "aliasname1_2",
        "RevisionId": "<uuid:5>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "get_alias_1_2": {
        "AliasArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:aliasname1_2",
        "Description": "custom-alias",
        "FunctionVersion": "1",
        "Name": "aliasname1_2",
        "RevisionId": "<uuid:5>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "create_alias_1_3": {
        "AliasArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:aliasname1_3",
        "Description": "",
        "FunctionVersion": "1",
        "Name": "aliasname1_3",
        "RevisionId": "<uuid:6>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "get_alias_1_3": {
        "AliasArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:aliasname1_3",
        "Description": "",
        "FunctionVersion": "1",
        "Name": "aliasname1_3",
        "RevisionId": "<uuid:6>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "create_alias_2": {
        "AliasArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:aliasname2",
        "Description": "custom-alias",
        "FunctionVersion": "2",
        "Name": "aliasname2",
        "RevisionId": "<uuid:7>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "get_alias_2": {
        "AliasArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:aliasname2",
        "Description": "custom-alias",
        "FunctionVersion": "2",
        "Name": "aliasname2",
        "RevisionId": "<uuid:7>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "list_aliases_for_fnname": {
        "Aliases": [
          {
            "AliasArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:aliasname1_1",
            "Description": "custom-alias",
            "FunctionVersion": "1",
            "Name": "aliasname1_1",
            "RevisionId": "<uuid:4>",
            "RoutingConfig": {
              "AdditionalVersionWeights": {
                "2": 0.2
              }
            }
          },
          {
            "AliasArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:aliasname1_2",
            "Description": "custom-alias",
            "FunctionVersion": "1",
            "Name": "aliasname1_2",
            "RevisionId": "<uuid:5>"
          },
          {
            "AliasArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:aliasname1_3",
            "Description": "",
            "FunctionVersion": "1",
            "Name": "aliasname1_3",
            "RevisionId": "<uuid:6>"
          },
          {
            "AliasArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:aliasname2",
            "Description": "custom-alias",
            "FunctionVersion": "2",
            "Name": "aliasname2",
            "RevisionId": "<uuid:7>"
          }
        ]
      },
      "update_alias_1_1": {
        "AliasArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:aliasname1_1",
        "Description": "custom-alias",
        "FunctionVersion": "1",
        "Name": "aliasname1_1",
        "RevisionId": "<uuid:8>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_alias_1_1_after_update": {
        "AliasArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:aliasname1_1",
        "Description": "custom-alias",
        "FunctionVersion": "1",
        "Name": "aliasname1_1",
        "RevisionId": "<uuid:8>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "list_aliases_for_fnname_after_update": {
        "Aliases": [
          {
            "AliasArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:aliasname1_1",
            "Description": "custom-alias",
            "FunctionVersion": "1",
            "Name": "aliasname1_1",
            "RevisionId": "<uuid:8>"
          },
          {
            "AliasArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:aliasname1_2",
            "Description": "custom-alias",
            "FunctionVersion": "1",
            "Name": "aliasname1_2",
            "RevisionId": "<uuid:5>"
          },
          {
            "AliasArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:aliasname1_3",
            "Description": "",
            "FunctionVersion": "1",
            "Name": "aliasname1_3",
            "RevisionId": "<uuid:6>"
          },
          {
            "AliasArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:aliasname2",
            "Description": "custom-alias",
            "FunctionVersion": "2",
            "Name": "aliasname2",
            "RevisionId": "<uuid:7>"
          }
        ],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "update_alias_1_2": {
        "AliasArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:aliasname1_2",
        "Description": "custom-alias",
        "FunctionVersion": "1",
        "Name": "aliasname1_2",
        "RevisionId": "<uuid:9>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_alias_1_2_after_update": {
        "AliasArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:aliasname1_2",
        "Description": "custom-alias",
        "FunctionVersion": "1",
        "Name": "aliasname1_2",
        "RevisionId": "<uuid:9>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "list_aliases_for_fnname_after_update_2": {
        "Aliases": [
          {
            "AliasArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:aliasname1_1",
            "Description": "custom-alias",
            "FunctionVersion": "1",
            "Name": "aliasname1_1",
            "RevisionId": "<uuid:8>"
          },
          {
            "AliasArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:aliasname1_2",
            "Description": "custom-alias",
            "FunctionVersion": "1",
            "Name": "aliasname1_2",
            "RevisionId": "<uuid:9>"
          },
          {
            "AliasArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:aliasname1_3",
            "Description": "",
            "FunctionVersion": "1",
            "Name": "aliasname1_3",
            "RevisionId": "<uuid:6>"
          },
          {
            "AliasArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:aliasname2",
            "Description": "custom-alias",
            "FunctionVersion": "2",
            "Name": "aliasname2",
            "RevisionId": "<uuid:7>"
          }
        ],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "list_aliases_for_version": {
        "Aliases": [
          {
            "AliasArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:aliasname1_1",
            "Description": "custom-alias",
            "FunctionVersion": "1",
            "Name": "aliasname1_1",
            "RevisionId": "<uuid:8>"
          },
          {
            "AliasArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:aliasname1_2",
            "Description": "custom-alias",
            "FunctionVersion": "1",
            "Name": "aliasname1_2",
            "RevisionId": "<uuid:9>"
          },
          {
            "AliasArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:aliasname1_3",
            "Description": "",
            "FunctionVersion": "1",
            "Name": "aliasname1_3",
            "RevisionId": "<uuid:6>"
          }
        ],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "delete_alias_response": {
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 204
        }
      },
      "list_aliases_for_fnname_afterdelete": {
        "Aliases": [
          {
            "AliasArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:aliasname1_2",
            "Description": "custom-alias",
            "FunctionVersion": "1",
            "Name": "aliasname1_2",
            "RevisionId": "<uuid:9>"
          },
          {
            "AliasArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:aliasname1_3",
            "Description": "",
            "FunctionVersion": "1",
            "Name": "aliasname1_3",
            "RevisionId": "<uuid:6>"
          },
          {
            "AliasArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:aliasname2",
            "Description": "custom-alias",
            "FunctionVersion": "2",
            "Name": "aliasname2",
            "RevisionId": "<uuid:7>"
          }
        ],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaAlias::test_notfound_and_invalid_routingconfigs": {
    "recorded-date": "05-10-2022, 17:03:46",
    "recorded-content": {
      "create_response": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:1>",
        "CodeSize": "<code-size>",
        "Description": "",
        "Environment": {
          "Variables": {
            "testenv": "staging"
          }
        },
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "FunctionName": "<function-name:1>",
        "Handler": "index.handler",
        "LastModified": "date",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:1>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.9",
        "State": "Pending",
        "StateReason": "The function is being created.",
        "StateReasonCode": "Creating",
        "Timeout": 3,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "1",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "publish_v1": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:1>",
        "CodeSize": "<code-size>",
        "Description": "",
        "Environment": {
          "Variables": {
            "testenv": "staging"
          }
        },
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:1",
        "FunctionName": "<function-name:1>",
        "Handler": "index.handler",
        "LastModified": "date",
        "LastUpdateStatus": "Successful",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:2>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.9",
        "State": "Active",
        "Timeout": 3,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "1",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "publish_v2": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:1>",
        "CodeSize": "<code-size>",
        "Description": "",
        "Environment": {
          "Variables": {
            "testenv": "prod"
          }
        },
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:2",
        "FunctionName": "<function-name:1>",
        "Handler": "index.handler",
        "LastModified": "date",
        "LastUpdateStatus": "Successful",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:3>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.9",
        "State": "Active",
        "Timeout": 3,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "2",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "routing_config_exc_toomany": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "Number of items in AdditionalVersionWeights cannot be greater than 1"
        },
        "Type": "User",
        "message": "Number of items in AdditionalVersionWeights cannot be greater than 1",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "routing_config_exc_toohigh": {
        "Error": {
          "Code": "ValidationException",
          "Message": "1 validation error detected: Value '{2=2.0}' at 'routingConfig.additionalVersionWeights' failed to satisfy constraint: Map value must satisfy constraint: [Member must have value less than or equal to 1.0, Member must have value greater than or equal to 0.0]"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "routing_config_exc_subzero": {
        "Error": {
          "Code": "ValidationException",
          "Message": "1 validation error detected: Value '{2=-1.0}' at 'routingConfig.additionalVersionWeights' failed to satisfy constraint: Map value must satisfy constraint: [Member must have value less than or equal to 1.0, Member must have value greater than or equal to 0.0]"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "routing_config_exc_sameversion": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "Invalid function version 1. Function version 1 is already included in routing configuration."
        },
        "Type": "User",
        "message": "Invalid function version 1. Function version 1 is already included in routing configuration.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "target_version_doesnotexist": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:<function-name:1>:10"
        },
        "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:<function-name:1>:10",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "routing_config_exc_version_doesnotexist": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:<function-name:1>:10"
        },
        "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:<function-name:1>:10",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "target_version_exc_version_latest": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "$LATEST is not supported for an alias pointing to more than 1 version"
        },
        "message": "$LATEST is not supported for an alias pointing to more than 1 version",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "routing_config_exc_version_latest": {
        "Error": {
          "Code": "ValidationException",
          "Message": "1 validation error detected: Value '{$LATEST=0.5}' at 'routingConfig.additionalVersionWeights' failed to satisfy constraint: Map keys must satisfy constraint: [Member must have length less than or equal to 1024, Member must have length greater than or equal to 1, Member must satisfy regular expression pattern: [0-9]+]"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "create-alias-latest": {
        "AliasArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:custom-latest",
        "Description": "",
        "FunctionVersion": "$LATEST",
        "Name": "custom-latest",
        "RevisionId": "<uuid:4>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "routing_config_exc_fn_doesnotexist": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:<function-name:1>-unknown:1"
        },
        "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:<function-name:1>-unknown:1",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "create_alias_empty_routingconfig": {
        "AliasArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:custom-empty-routingconfig",
        "Description": "",
        "FunctionVersion": "1",
        "Name": "custom-empty-routingconfig",
        "RevisionId": "<uuid:5>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "create_alias_response": {
        "AliasArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:custom",
        "Description": "",
        "FunctionVersion": "1",
        "Name": "custom",
        "RevisionId": "<uuid:6>",
        "RoutingConfig": {
          "AdditionalVersionWeights": {
            "2": 0.5
          }
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "routing_config_exc_already_exist": {
        "Error": {
          "Code": "ResourceConflictException",
          "Message": "Alias already exists: arn:aws:lambda:<region>:111111111111:function:<function-name:1>:custom"
        },
        "Type": "User",
        "message": "Alias already exists: arn:aws:lambda:<region>:111111111111:function:<function-name:1>:custom",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 409
        }
      },
      "alias_does_not_exist_esc": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Cannot find alias arn: arn:aws:lambda:<region>:111111111111:function:<function-name:1>:non-existent"
        },
        "Message": "Cannot find alias arn: arn:aws:lambda:<region>:111111111111:function:<function-name:1>:non-existent",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaTag::test_create_tag_on_fn_create": {
    "recorded-date": "30-09-2022, 15:32:12",
    "recorded-content": {
      "get_function_result": {
        "Code": {
          "Location": "<location>",
          "RepositoryType": "S3"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": "<code-size>",
          "Description": "",
          "Environment": {
            "Variables": {}
          },
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "Handler": "handler.handler",
          "LastModified": "date",
          "LastUpdateStatus": "Successful",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:1>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.9",
          "State": "Active",
          "Timeout": 30,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST"
        },
        "Tags": {
          "testtag": "<custom-tag>"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "list_tags_result": {
        "Tags": {
          "testtag": "<custom-tag>"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaTag::test_tag_lifecycle": {
    "recorded-date": "30-09-2022, 15:32:17",
    "recorded-content": {
      "tag_single_response": {
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 204
        }
      },
      "tag_single_response_listtags": {
        "Tags": {
          "A": "tag-a"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "tag_multiple_response": {
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 204
        }
      },
      "tag_multiple_response_listtags": {
        "Tags": {
          "A": "tag-a",
          "B": "tag-b",
          "C": "tag-c"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "tag_overlap_response": {
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 204
        }
      },
      "tag_overlap_response_listtags": {
        "Tags": {
          "A": "tag-a",
          "B": "tag-b",
          "C": "tag-c-newsuffix",
          "D": "tag-d"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "untag_single_response": {
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 204
        }
      },
      "untag_single_response_listtags": {
        "Tags": {
          "B": "tag-b",
          "C": "tag-c-newsuffix",
          "D": "tag-d"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "untag_multiple_response": {
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 204
        }
      },
      "untag_multiple_response_listtags": {
        "Tags": {
          "D": "tag-d"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "untag_nonexisting_response": {
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 204
        }
      },
      "untag_nonexisting_response_listtags": {
        "Tags": {
          "D": "tag-d"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "untag_existing_and_nonexisting_response": {
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 204
        }
      },
      "untag_existing_and_nonexisting_response_listtags": {
        "Tags": {},
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaTag::test_tag_nonexisting_resource": {
    "recorded-date": "30-09-2022, 15:32:21",
    "recorded-content": {
      "pre_delete_get_function": {
        "Code": {
          "Location": "<location>",
          "RepositoryType": "S3"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": "<code-size>",
          "Description": "",
          "Environment": {
            "Variables": {}
          },
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "Handler": "handler.handler",
          "LastModified": "date",
          "LastUpdateStatus": "Successful",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:1>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.9",
          "State": "Active",
          "Timeout": 30,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "not_found_exception_tag": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:<function-name:1>"
        },
        "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "not_found_exception_untag": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:<function-name:1>"
        },
        "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "not_found_exception_list": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:<function-name:1>"
        },
        "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaEventInvokeConfig::test_lambda_eventinvokeconfig_exceptions": {
    "recorded-date": "16-12-2022, 16:20:08",
    "recorded-content": {
      "fn_version_result": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:1>",
        "CodeSize": "<code-size>",
        "Description": "",
        "Environment": {
          "Variables": {}
        },
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:1",
        "FunctionName": "<function-name:1>",
        "Handler": "handler.handler",
        "LastModified": "date",
        "LastUpdateStatus": "Successful",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:1>",
        "Role": "arn:aws:iam::111111111111:role/<resource:2>",
        "Runtime": "python3.9",
        "State": "Active",
        "Timeout": 30,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "1",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "fn_alias_result": {
        "AliasArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:eventinvokealias",
        "Description": "",
        "FunctionVersion": "1",
        "Name": "eventinvokealias",
        "RevisionId": "<uuid:2>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "put_functionname_name_notfound": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "The function doesn't exist."
        },
        "Message": "The function doesn't exist.",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "put_functionname_arn_notfound": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "The function doesn't exist."
        },
        "Message": "The function doesn't exist.",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "put_functionname_nootherargs": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "You must specify at least one of error handling or destination setting."
        },
        "Type": "User",
        "message": "You must specify at least one of error handling or destination setting.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "put_destination_lambda_doesntexist": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "The destination ARN arn:aws:lambda:<region>:111111111111:function:doesnotexist is invalid."
        },
        "Type": "User",
        "message": "The destination ARN arn:aws:lambda:<region>:111111111111:function:doesnotexist is invalid.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "put_destination_recursive": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "You can't specify the function as a destination for itself."
        },
        "Type": "User",
        "message": "You can't specify the function as a destination for itself.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "put_destination_other_lambda": {
        "DestinationConfig": {
          "OnFailure": {},
          "OnSuccess": {
            "Destination": "arn:aws:lambda:<region>:111111111111:function:<resource:4>"
          }
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:$LATEST",
        "LastModified": "datetime",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "put_destination_invalid_service_arn": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "The provided destination config DestinationConfig(onSuccess=OnSuccess(destination=arn:aws:iam:<region>:111111111111:function:<function-name:1>), onFailure=null) is invalid."
        },
        "Type": "User",
        "message": "The provided destination config DestinationConfig(onSuccess=OnSuccess(destination=arn:aws:iam:<region>:111111111111:function:<function-name:1>), onFailure=null) is invalid.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "put_destination_success_no_destination_arn": {
        "DestinationConfig": {
          "OnFailure": {},
          "OnSuccess": {}
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:$LATEST",
        "LastModified": "datetime",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "put_destination_failure_no_destination_arn": {
        "DestinationConfig": {
          "OnFailure": {},
          "OnSuccess": {}
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:$LATEST",
        "LastModified": "datetime",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "put_destination_invalid_arn_pattern": {
        "Error": {
          "Code": "ValidationException",
          "Message": "1 validation error detected: Value 'arn:aws:_-/!lambda:<region>:111111111111:function:<function-name:1>' at 'destinationConfig.onFailure.destination' failed to satisfy constraint: Member must satisfy regular expression pattern: ^$|arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\\-])+:([a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\\d{1})?:(\\d{12})?:(.*)"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "put_destination_latest": {
        "DestinationConfig": {
          "OnFailure": {},
          "OnSuccess": {}
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:$LATEST",
        "LastModified": "datetime",
        "MaximumRetryAttempts": 1,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "put_destination_latest_explicit_qualifier": {
        "DestinationConfig": {
          "OnFailure": {},
          "OnSuccess": {}
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:$LATEST",
        "LastModified": "datetime",
        "MaximumRetryAttempts": 1,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "put_destination_version": {
        "DestinationConfig": {
          "OnFailure": {},
          "OnSuccess": {}
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:1",
        "LastModified": "datetime",
        "MaximumRetryAttempts": 1,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "put_alias_functionname_qualifier": {
        "DestinationConfig": {
          "OnFailure": {},
          "OnSuccess": {}
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:eventinvokealias",
        "LastModified": "datetime",
        "MaximumRetryAttempts": 1,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "put_alias_doesnotexist": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "The function doesn't exist."
        },
        "Message": "The function doesn't exist.",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "put_alias_qualifiedarn": {
        "DestinationConfig": {
          "OnFailure": {},
          "OnSuccess": {}
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:eventinvokealias",
        "LastModified": "datetime",
        "MaximumRetryAttempts": 1,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "put_alias_qualifiedarn_qualifier": {
        "DestinationConfig": {
          "OnFailure": {},
          "OnSuccess": {}
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:eventinvokealias",
        "LastModified": "datetime",
        "MaximumRetryAttempts": 1,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "put_alias_qualifiedarn_qualifierconflict": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "The derived qualifier from the function name does not match the specified qualifier."
        },
        "Type": "User",
        "message": "The derived qualifier from the function name does not match the specified qualifier.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "put_alias_shorthand": {
        "DestinationConfig": {
          "OnFailure": {},
          "OnSuccess": {}
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:eventinvokealias",
        "LastModified": "datetime",
        "MaximumRetryAttempts": 1,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "put_alias_shorthand_qualifier": {
        "DestinationConfig": {
          "OnFailure": {},
          "OnSuccess": {}
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:eventinvokealias",
        "LastModified": "datetime",
        "MaximumRetryAttempts": 1,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "put_alias_shorthand_qualifierconflict": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "The derived qualifier from the function name does not match the specified qualifier."
        },
        "Type": "User",
        "message": "The derived qualifier from the function name does not match the specified qualifier.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "put_version_shorthand": {
        "DestinationConfig": {
          "OnFailure": {},
          "OnSuccess": {}
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:1",
        "LastModified": "datetime",
        "MaximumRetryAttempts": 1,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "put_shorthand_qualifier_match": {
        "DestinationConfig": {
          "OnFailure": {},
          "OnSuccess": {}
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:$LATEST",
        "LastModified": "datetime",
        "MaximumRetryAttempts": 1,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "put_shorthand_qualifier_mismatch_1": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "The derived qualifier from the function name does not match the specified qualifier."
        },
        "Type": "User",
        "message": "The derived qualifier from the function name does not match the specified qualifier.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "put_shorthand_qualifier_mismatch_2": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "The derived qualifier from the function name does not match the specified qualifier."
        },
        "Type": "User",
        "message": "The derived qualifier from the function name does not match the specified qualifier.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "put_shorthand_qualifier_mismatch_3": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "The derived qualifier from the function name does not match the specified qualifier."
        },
        "Type": "User",
        "message": "The derived qualifier from the function name does not match the specified qualifier.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "put_maxevent_maxvalue_result": {
        "DestinationConfig": {
          "OnFailure": {},
          "OnSuccess": {}
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:$LATEST",
        "LastModified": "datetime",
        "MaximumEventAgeInSeconds": 21600,
        "MaximumRetryAttempts": 2,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "put_pre_overwrite": {
        "DestinationConfig": {
          "OnFailure": {},
          "OnSuccess": {}
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:$LATEST",
        "LastModified": "datetime",
        "MaximumEventAgeInSeconds": 60,
        "MaximumRetryAttempts": 2,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "put_post_overwrite": {
        "DestinationConfig": {
          "OnFailure": {},
          "OnSuccess": {}
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:$LATEST",
        "LastModified": "datetime",
        "MaximumRetryAttempts": 0,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "second_overwrite_existing_response": {
        "DestinationConfig": {
          "OnFailure": {},
          "OnSuccess": {}
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:$LATEST",
        "LastModified": "datetime",
        "MaximumRetryAttempts": 0,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_post_overwrite": {
        "DestinationConfig": {
          "OnFailure": {},
          "OnSuccess": {}
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:$LATEST",
        "LastModified": "datetime",
        "MaximumRetryAttempts": 0,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "pre_update_response": {
        "DestinationConfig": {
          "OnFailure": {},
          "OnSuccess": {}
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:$LATEST",
        "LastModified": "datetime",
        "MaximumEventAgeInSeconds": 60,
        "MaximumRetryAttempts": 2,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "update_response": {
        "DestinationConfig": {
          "OnFailure": {},
          "OnSuccess": {}
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:$LATEST",
        "LastModified": "datetime",
        "MaximumEventAgeInSeconds": 60,
        "MaximumRetryAttempts": 0,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "update_response_existing": {
        "DestinationConfig": {
          "OnFailure": {},
          "OnSuccess": {}
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:$LATEST",
        "LastModified": "datetime",
        "MaximumEventAgeInSeconds": 60,
        "MaximumRetryAttempts": 0,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "list_configs": {
        "FunctionEventInvokeConfigs": [
          {
            "DestinationConfig": {
              "OnFailure": {},
              "OnSuccess": {}
            },
            "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:$LATEST",
            "LastModified": "datetime",
            "MaximumEventAgeInSeconds": 60,
            "MaximumRetryAttempts": 0
          },
          {
            "DestinationConfig": {
              "OnFailure": {},
              "OnSuccess": {}
            },
            "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:1",
            "LastModified": "datetime",
            "MaximumRetryAttempts": 1
          },
          {
            "DestinationConfig": {
              "OnFailure": {},
              "OnSuccess": {}
            },
            "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:eventinvokealias",
            "LastModified": "datetime",
            "MaximumRetryAttempts": 1
          }
        ],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "delete_latest": {
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 204
        }
      },
      "delete_version": {
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 204
        }
      },
      "delete_alias": {
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 204
        }
      },
      "list_configs_postdelete": {
        "FunctionEventInvokeConfigs": [],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "delete_function_not_found": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "The function arn:aws:lambda:<region>:111111111111:function:<function-name:1>:$LATEST doesn't have an EventInvokeConfig"
        },
        "Message": "The function arn:aws:lambda:<region>:111111111111:function:<function-name:1>:$LATEST doesn't have an EventInvokeConfig",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "delete_function_doesnotexist": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "The function arn:aws:lambda:<region>:111111111111:function:doesnotexist:$LATEST doesn't have an EventInvokeConfig"
        },
        "Message": "The function arn:aws:lambda:<region>:111111111111:function:doesnotexist:$LATEST doesn't have an EventInvokeConfig",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "list_function_doesnotexist": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "The function doesn't exist."
        },
        "Message": "The function doesn't exist.",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "get_function_doesnotexist": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "The function arn:aws:lambda:<region>:111111111111:function:doesnotexist:$LATEST doesn't have an EventInvokeConfig"
        },
        "Message": "The function arn:aws:lambda:<region>:111111111111:function:doesnotexist:$LATEST doesn't have an EventInvokeConfig",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "get_qualifier_doesnotexist": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "The function arn:aws:lambda:<region>:111111111111:function:<function-name:1>:doesnotexist doesn't have an EventInvokeConfig"
        },
        "Message": "The function arn:aws:lambda:<region>:111111111111:function:<function-name:1>:doesnotexist doesn't have an EventInvokeConfig",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "update_eventinvokeconfig_function_doesnotexist": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "The function doesn't exist."
        },
        "Message": "The function doesn't exist.",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "get_eventinvokeconfig_doesnotexist": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "The function arn:aws:lambda:<region>:111111111111:function:<function-name:1>:eventinvokealias doesn't have an EventInvokeConfig"
        },
        "Message": "The function arn:aws:lambda:<region>:111111111111:function:<function-name:1>:eventinvokealias doesn't have an EventInvokeConfig",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "update_eventinvokeconfig_config_doesnotexist_with_qualifier": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "The function arn:aws:lambda:<region>:111111111111:function:<function-name:1>:eventinvokealias doesn't have an EventInvokeConfig"
        },
        "Message": "The function arn:aws:lambda:<region>:111111111111:function:<function-name:1>:eventinvokealias doesn't have an EventInvokeConfig",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "update_eventinvokeconfig_config_doesnotexist_without_qualifier": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "The function arn:aws:lambda:<region>:111111111111:function:<function-name:1>:$LATEST doesn't have an EventInvokeConfig"
        },
        "Message": "The function arn:aws:lambda:<region>:111111111111:function:<function-name:1>:$LATEST doesn't have an EventInvokeConfig",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaReservedConcurrency::test_function_concurrency_exceptions": {
    "recorded-date": "30-09-2022, 15:32:42",
    "recorded-content": {
      "put_concurrency_unknown_fn": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:unknown:$LATEST"
        },
        "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:unknown:$LATEST",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "put_concurrency_unknown_fn_invalid_concurrency": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:unknown:$LATEST"
        },
        "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:unknown:$LATEST",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "put_concurrency_known_fn_concurrency_limit_exceeded": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "Specified ReservedConcurrentExecutions for function decreases account's UnreservedConcurrentExecution below its minimum value of [100]."
        },
        "message": "Specified ReservedConcurrentExecutions for function decreases account's UnreservedConcurrentExecution below its minimum value of [100].",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "put_0_response": {
        "ReservedConcurrentExecutions": 0,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "put_1_response": {
        "ReservedConcurrentExecutions": 1,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "delete_response": {
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 204
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaReservedConcurrency::test_function_concurrency": {
    "recorded-date": "30-09-2022, 15:32:45",
    "recorded-content": {
      "put_function_concurrency": {
        "ReservedConcurrentExecutions": 1,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_function_concurrency": {
        "ReservedConcurrentExecutions": 1,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "delete_function_concurrency": {
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 204
        }
      },
      "get_function_concurrency_postdelete": {
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaPermissions::test_add_lambda_permission_aws": {
    "recorded-date": "21-12-2022, 20:33:13",
    "recorded-content": {
      "create_lambda": {
        "CreateEventSourceMappingResponse": null,
        "CreateFunctionResponse": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": "<code-size>",
          "Description": "",
          "Environment": {
            "Variables": {}
          },
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "Handler": "handler.handler",
          "LastModified": "date",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:1>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.9",
          "State": "Pending",
          "StateReason": "The function is being created.",
          "StateReasonCode": "Creating",
          "Timeout": 30,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST",
          "ResponseMetadata": {
            "HTTPHeaders": {},
            "HTTPStatusCode": 201
          }
        }
      },
      "add_permission": {
        "Statement": {
          "Sid": "s3",
          "Effect": "Allow",
          "Principal": {
            "Service": "s3.amazonaws.com"
          },
          "Action": "lambda:InvokeFunction",
          "Resource": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "Condition": {
            "ArnLike": {
              "AWS:SourceArn": "arn:aws:s3:::<resource:2>"
            }
          }
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "get_policy": {
        "Policy": {
          "Version": "2012-10-17",
          "Id": "default",
          "Statement": [
            {
              "Sid": "s3",
              "Effect": "Allow",
              "Principal": {
                "Service": "s3.amazonaws.com"
              },
              "Action": "lambda:InvokeFunction",
              "Resource": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
              "Condition": {
                "ArnLike": {
                  "AWS:SourceArn": "arn:aws:s3:::<resource:2>"
                }
              }
            }
          ]
        },
        "RevisionId": "<uuid:2>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaPermissions::test_remove_multi_permissions": {
    "recorded-date": "21-12-2022, 20:36:23",
    "recorded-content": {
      "add_permission_1": {
        "Statement": {
          "Sid": "s3",
          "Effect": "Allow",
          "Principal": {
            "Service": "s3.amazonaws.com"
          },
          "Action": "lambda:InvokeFunction",
          "Resource": "arn:aws:lambda:<region>:111111111111:function:<resource:1>"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "add_permission_2": {
        "Statement": {
          "Sid": "sqs",
          "Effect": "Allow",
          "Principal": {
            "Service": "sqs.amazonaws.com"
          },
          "Action": "lambda:InvokeFunction",
          "Resource": "arn:aws:lambda:<region>:111111111111:function:<resource:1>",
          "Condition": {
            "ArnLike": {
              "AWS:SourceArn": "arn:aws:s3:::<resource:2>"
            }
          }
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "policy_after_2_add": {
        "Policy": {
          "Version": "2012-10-17",
          "Id": "default",
          "Statement": [
            {
              "Sid": "s3",
              "Effect": "Allow",
              "Principal": {
                "Service": "s3.amazonaws.com"
              },
              "Action": "lambda:InvokeFunction",
              "Resource": "arn:aws:lambda:<region>:111111111111:function:<resource:1>"
            },
            {
              "Sid": "sqs",
              "Effect": "Allow",
              "Principal": {
                "Service": "sqs.amazonaws.com"
              },
              "Action": "lambda:InvokeFunction",
              "Resource": "arn:aws:lambda:<region>:111111111111:function:<resource:1>",
              "Condition": {
                "ArnLike": {
                  "AWS:SourceArn": "arn:aws:s3:::<resource:2>"
                }
              }
            }
          ]
        },
        "RevisionId": "<uuid:1>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "remove_permission_exception_nonexisting_sid": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Statement non-existent is not found in resource policy."
        },
        "Message": "Statement non-existent is not found in resource policy.",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "policy_after_removal": {
        "Policy": {
          "Version": "2012-10-17",
          "Id": "default",
          "Statement": [
            {
              "Sid": "s3",
              "Effect": "Allow",
              "Principal": {
                "Service": "s3.amazonaws.com"
              },
              "Action": "lambda:InvokeFunction",
              "Resource": "arn:aws:lambda:<region>:111111111111:function:<resource:1>"
            }
          ]
        },
        "RevisionId": "<uuid:2>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "remove_permission_exception_revision_id": {
        "Error": {
          "Code": "PreconditionFailedException",
          "Message": "The Revision Id provided does not match the latest Revision Id. Call the GetFunction/GetAlias API to retrieve the latest Revision Id"
        },
        "Type": "User",
        "message": "The Revision Id provided does not match the latest Revision Id. Call the GetFunction/GetAlias API to retrieve the latest Revision Id",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 412
        }
      },
      "policy_after_removal_attempt": {
        "Policy": {
          "Version": "2012-10-17",
          "Id": "default",
          "Statement": [
            {
              "Sid": "s3",
              "Effect": "Allow",
              "Principal": {
                "Service": "s3.amazonaws.com"
              },
              "Action": "lambda:InvokeFunction",
              "Resource": "arn:aws:lambda:<region>:111111111111:function:<resource:1>"
            }
          ]
        },
        "RevisionId": "<uuid:2>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_policy_exception_removed_all": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "The resource you requested does not exist."
        },
        "Message": "The resource you requested does not exist.",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaPermissions::test_create_multiple_lambda_permissions": {
    "recorded-date": "30-09-2022, 15:32:56",
    "recorded-content": {
      "add_permission_response_1": {
        "Statement": {
          "Sid": "logs",
          "Effect": "Allow",
          "Principal": {
            "Service": "logs.amazonaws.com"
          },
          "Action": "lambda:InvokeFunction",
          "Resource": "arn:aws:lambda:<region>:111111111111:function:<resource:1>"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "add_permission_response_2": {
        "Statement": {
          "Sid": "kinesis",
          "Effect": "Allow",
          "Principal": {
            "Service": "kinesis.amazonaws.com"
          },
          "Action": "lambda:InvokeFunction",
          "Resource": "arn:aws:lambda:<region>:111111111111:function:<resource:1>"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "policy_after_2_add": {
        "Policy": {
          "Version": "2012-10-17",
          "Id": "default",
          "Statement": [
            {
              "Sid": "logs",
              "Effect": "Allow",
              "Principal": {
                "Service": "logs.amazonaws.com"
              },
              "Action": "lambda:InvokeFunction",
              "Resource": "arn:aws:lambda:<region>:111111111111:function:<resource:1>"
            },
            {
              "Sid": "kinesis",
              "Effect": "Allow",
              "Principal": {
                "Service": "kinesis.amazonaws.com"
              },
              "Action": "lambda:InvokeFunction",
              "Resource": "arn:aws:lambda:<region>:111111111111:function:<resource:1>"
            }
          ]
        },
        "RevisionId": "<uuid:1>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaUrl::test_url_config_lifecycle": {
    "recorded-date": "21-12-2022, 15:39:04",
    "recorded-content": {
      "url_creation": {
        "AuthType": "NONE",
        "CreationTime": "date",
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<resource:1>",
        "FunctionUrl": "lambda-url",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "failed_duplication": {
        "Error": {
          "Code": "ResourceConflictException",
          "Message": "Failed to create function url config for [functionArn = arn:aws:lambda:<region>:111111111111:function:<resource:1>]. Error message:  FunctionUrlConfig exists for this Lambda function"
        },
        "Type": "User",
        "message": "Failed to create function url config for [functionArn = arn:aws:lambda:<region>:111111111111:function:<resource:1>]. Error message:  FunctionUrlConfig exists for this Lambda function",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 409
        }
      },
      "get_url_config": {
        "AuthType": "NONE",
        "CreationTime": "date",
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<resource:1>",
        "FunctionUrl": "lambda-url",
        "LastModifiedTime": "date",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "updated_url_config": {
        "AuthType": "AWS_IAM",
        "CreationTime": "date",
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<resource:1>",
        "FunctionUrl": "lambda-url",
        "LastModifiedTime": "date",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "failed_getter": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "The resource you requested does not exist."
        },
        "Message": "The resource you requested does not exist.",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaSizeLimits::test_oversized_lambda": {
    "recorded-date": "30-09-2022, 15:33:49",
    "recorded-content": {
      "invalid_param_exc": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "Unzipped size must be smaller than 262144000 bytes"
        },
        "Type": "User",
        "message": "Unzipped size must be smaller than 262144000 bytes",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaSizeLimits::test_large_lambda": {
    "recorded-date": "30-09-2022, 15:34:46",
    "recorded-content": {
      "create_function_large_zip": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:1>",
        "CodeSize": "<code-size>",
        "Description": "",
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "FunctionName": "<function-name:1>",
        "Handler": "handler.handler",
        "LastModified": "date",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:1>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.9",
        "State": "Pending",
        "StateReason": "The function is being created.",
        "StateReasonCode": "Creating",
        "Timeout": 10,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "$LATEST",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaSizeLimits::test_large_environment_variables_fails": {
    "recorded-date": "30-09-2022, 15:35:03",
    "recorded-content": {
      "failed_create_fn_result": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "Lambda was unable to configure your environment variables because the environment variables you have provided exceeded the 4KB limit. String measured: {\"LARGE_VAR\":\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"}"
        },
        "Type": "User",
        "message": "Lambda was unable to configure your environment variables because the environment variables you have provided exceeded the 4KB limit. String measured: {\"LARGE_VAR\":\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"}",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaSizeLimits::test_large_environment_fails_multiple_keys": {
    "recorded-date": "30-09-2022, 15:35:20",
    "recorded-content": {
      "failured_create_fn_result_multi_key": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "Lambda was unable to configure your environment variables because the environment variables you have provided exceeded the 4KB limit. String measured: {\"SMALL_VAR\":\"ok\",\"LARGE_VAR\":\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"}"
        },
        "Type": "User",
        "message": "Lambda was unable to configure your environment variables because the environment variables you have provided exceeded the 4KB limit. String measured: {\"SMALL_VAR\":\"ok\",\"LARGE_VAR\":\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"}",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaSizeLimits::test_lambda_envvars_near_limit_succeeds": {
    "recorded-date": "30-09-2022, 15:35:23",
    "recorded-content": {
      "successful_create_fn_result": {
        "CreateEventSourceMappingResponse": null,
        "CreateFunctionResponse": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": "<code-size>",
          "Description": "",
          "Environment": {
            "Variables": {
              "LARGE_VAR": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
            }
          },
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "Handler": "handler.handler",
          "LastModified": "date",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:1>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.9",
          "State": "Pending",
          "StateReason": "The function is being created.",
          "StateReasonCode": "Creating",
          "Timeout": 30,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST",
          "ResponseMetadata": {
            "HTTPHeaders": {},
            "HTTPStatusCode": 201
          }
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestCodeSigningConfig::test_function_code_signing_config": {
    "recorded-date": "30-09-2022, 15:35:28",
    "recorded-content": {
      "create_code_signing_config": {
        "CodeSigningConfig": {
          "AllowedPublishers": {
            "SigningProfileVersionArns": [
              "arn:aws:signer:<region>:111111111111:/signing-profiles/test"
            ]
          },
          "CodeSigningConfigArn": "arn:aws:lambda:<region>:111111111111:code-signing-config:<resource:1>",
          "CodeSigningConfigId": "<resource:1>",
          "CodeSigningPolicies": {
            "UntrustedArtifactOnDeployment": "Enforce"
          },
          "Description": "Testing CodeSigning Config",
          "LastModified": "date"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "update_code_signing_config": {
        "CodeSigningConfig": {
          "AllowedPublishers": {
            "SigningProfileVersionArns": [
              "arn:aws:signer:<region>:111111111111:/signing-profiles/test"
            ]
          },
          "CodeSigningConfigArn": "arn:aws:lambda:<region>:111111111111:code-signing-config:<resource:1>",
          "CodeSigningConfigId": "<resource:1>",
          "CodeSigningPolicies": {
            "UntrustedArtifactOnDeployment": "Warn"
          },
          "Description": "Testing CodeSigning Config",
          "LastModified": "date"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_code_signing_config": {
        "CodeSigningConfig": {
          "AllowedPublishers": {
            "SigningProfileVersionArns": [
              "arn:aws:signer:<region>:111111111111:/signing-profiles/test"
            ]
          },
          "CodeSigningConfigArn": "arn:aws:lambda:<region>:111111111111:code-signing-config:<resource:1>",
          "CodeSigningConfigId": "<resource:1>",
          "CodeSigningPolicies": {
            "UntrustedArtifactOnDeployment": "Warn"
          },
          "Description": "Testing CodeSigning Config",
          "LastModified": "date"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "put_function_code_signing_config": {
        "CodeSigningConfigArn": "arn:aws:lambda:<region>:111111111111:code-signing-config:<resource:1>",
        "FunctionName": "<function-name:1>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_function_code_signing_config": {
        "CodeSigningConfigArn": "arn:aws:lambda:<region>:111111111111:code-signing-config:<resource:1>",
        "FunctionName": "<function-name:1>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "list_code_signing_configs": {
        "CodeSigningConfigs": [
          {
            "AllowedPublishers": {
              "SigningProfileVersionArns": [
                "arn:aws:signer:<region>:111111111111:/signing-profiles/test"
              ]
            },
            "CodeSigningConfigArn": "arn:aws:lambda:<region>:111111111111:code-signing-config:<resource:1>",
            "CodeSigningConfigId": "<resource:1>",
            "CodeSigningPolicies": {
              "UntrustedArtifactOnDeployment": "Warn"
            },
            "Description": "Testing CodeSigning Config",
            "LastModified": "date"
          }
        ],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "list_functions_by_code_signing_config": {
        "FunctionArns": [
          "arn:aws:lambda:<region>:111111111111:function:<function-name:1>"
        ],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "delete_function_code_signing_config": {
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 204
        }
      },
      "delete_code_signing_config": {
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 204
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestCodeSigningConfig::test_code_signing_not_found_excs": {
    "recorded-date": "30-09-2022, 15:35:33",
    "recorded-content": {
      "create_code_signing_config": {
        "CodeSigningConfig": {
          "AllowedPublishers": {
            "SigningProfileVersionArns": [
              "arn:aws:signer:<region>:111111111111:/signing-profiles/test"
            ]
          },
          "CodeSigningConfigArn": "arn:aws:lambda:<region>:111111111111:code-signing-config:<resource:1>",
          "CodeSigningConfigId": "<resource:1>",
          "CodeSigningPolicies": {
            "UntrustedArtifactOnDeployment": "Enforce"
          },
          "Description": "Testing CodeSigning Config",
          "LastModified": "date"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "delete_csc_notfound": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "The Lambda code signing configuration <csc_arn_invalid> can not be found."
        },
        "Message": "The Lambda code signing configuration <csc_arn_invalid> can not be found.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "nothing_to_delete_response": {
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 204
        }
      },
      "delete_function_csc_fnnotfound": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:csc-test-doesnotexist"
        },
        "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:csc-test-doesnotexist",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "put_function_csc_invalid_fnname": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:csc-test-doesnotexist"
        },
        "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:csc-test-doesnotexist",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "put_function_csc_invalid_csc_arn": {
        "Error": {
          "Code": "CodeSigningConfigNotFoundException",
          "Message": "The code signing configuration cannot be found. Check that the provided configuration is not deleted: <csc_arn_invalid>."
        },
        "Message": "The code signing configuration cannot be found. Check that the provided configuration is not deleted: <csc_arn_invalid>.",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "put_function_csc_invalid_both": {
        "Error": {
          "Code": "CodeSigningConfigNotFoundException",
          "Message": "The code signing configuration cannot be found. Check that the provided configuration is not deleted: <csc_arn_invalid>."
        },
        "Message": "The code signing configuration cannot be found. Check that the provided configuration is not deleted: <csc_arn_invalid>.",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "update_csc_invalid_csc_arn": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "The Lambda code signing configuration <csc_arn_invalid> can not be found."
        },
        "Message": "The Lambda code signing configuration <csc_arn_invalid> can not be found.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "update_csc_noupdates": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "The Lambda code signing configuration <csc_arn_invalid> can not be found."
        },
        "Message": "The Lambda code signing configuration <csc_arn_invalid> can not be found.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "update_csc_noupdate_response": {
        "CodeSigningConfig": {
          "AllowedPublishers": {
            "SigningProfileVersionArns": [
              "arn:aws:signer:<region>:111111111111:/signing-profiles/test"
            ]
          },
          "CodeSigningConfigArn": "arn:aws:lambda:<region>:111111111111:code-signing-config:<resource:1>",
          "CodeSigningConfigId": "<resource:1>",
          "CodeSigningPolicies": {
            "UntrustedArtifactOnDeployment": "Enforce"
          },
          "Description": "Testing CodeSigning Config",
          "LastModified": "date"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_csc_invalid": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "The Lambda code signing configuration <csc_arn_invalid> can not be found."
        },
        "Message": "The Lambda code signing configuration <csc_arn_invalid> can not be found.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "get_function_csc_fnwithoutcsc": {
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_function_csc_nonexistingfn": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:csc-test-doesnotexist"
        },
        "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:csc-test-doesnotexist",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "list_functions_by_csc_fnwithoutcsc": {
        "FunctionArns": [],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "list_functions_by_csc_invalid_cscarn": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "The Lambda code signing configuration <csc_arn_invalid> can not be found."
        },
        "Message": "The Lambda code signing configuration <csc_arn_invalid> can not be found.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaAccountSettings::test_account_settings": {
    "recorded-date": "30-09-2022, 15:35:34",
    "recorded-content": {
      "acc_settings_modded": {
        "AccountLimit": [
          "CodeSizeUnzipped",
          "CodeSizeZipped",
          "ConcurrentExecutions",
          "TotalCodeSize",
          "UnreservedConcurrentExecutions"
        ],
        "AccountUsage": [
          "FunctionCount",
          "TotalCodeSize"
        ],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaEventSourceMappings::test_event_source_mapping_exceptions": {
    "recorded-date": "23-11-2022, 10:09:28",
    "recorded-content": {
      "get_unknown_uuid": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "The resource you requested does not exist."
        },
        "Message": "The resource you requested does not exist.",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "delete_unknown_uuid": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "The resource you requested does not exist."
        },
        "Message": "The resource you requested does not exist.",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "update_unknown_uuid": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "The resource you requested does not exist."
        },
        "Message": "The resource you requested does not exist.",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "create_no_event_source_arn": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "Unrecognized event source."
        },
        "Type": "User",
        "message": "Unrecognized event source.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "create_unknown_params": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "Function does not exist"
        },
        "Type": "User",
        "message": "Function does not exist",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaEventSourceMappings::test_event_source_mapping_lifecycle": {
    "recorded-date": "23-11-2022, 10:09:53",
    "recorded-content": {
      "update_table_response": {
        "TableDescription": {
          "AttributeDefinitions": [
            {
              "AttributeName": "id",
              "AttributeType": "S"
            }
          ],
          "BillingModeSummary": {
            "BillingMode": "PAY_PER_REQUEST",
            "LastUpdateToPayPerRequestDateTime": "datetime"
          },
          "CreationDateTime": "datetime",
          "ItemCount": 0,
          "KeySchema": [
            {
              "AttributeName": "id",
              "KeyType": "HASH"
            }
          ],
          "LatestStreamArn": "arn:aws:dynamodb:<region>:111111111111:table/<resource:2>/stream/<resource:1>",
          "LatestStreamLabel": "<resource:1>",
          "ProvisionedThroughput": {
            "NumberOfDecreasesToday": 0,
            "ReadCapacityUnits": 0,
            "WriteCapacityUnits": 0
          },
          "StreamSpecification": {
            "StreamEnabled": true,
            "StreamViewType": "NEW_IMAGE"
          },
          "TableArn": "arn:aws:dynamodb:<region>:111111111111:table/<resource:2>",
          "TableId": "<uuid:1>",
          "TableName": "<resource:2>",
          "TableSizeBytes": 0,
          "TableStatus": "UPDATING"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "create_response": {
        "BatchSize": 1,
        "BisectBatchOnFunctionError": false,
        "DestinationConfig": {
          "OnFailure": {
            "Destination": "arn:aws:sqs:<region>:111111111111:<resource:3>"
          }
        },
        "EventSourceArn": "arn:aws:dynamodb:<region>:111111111111:table/<resource:2>/stream/<resource:1>",
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<resource:4>",
        "FunctionResponseTypes": [],
        "LastModified": "datetime",
        "LastProcessingResult": "No records processed",
        "MaximumBatchingWindowInSeconds": 1,
        "MaximumRecordAgeInSeconds": -1,
        "MaximumRetryAttempts": 1,
        "ParallelizationFactor": 1,
        "StartingPosition": "TRIM_HORIZON",
        "State": "Creating",
        "StateTransitionReason": "User action",
        "TumblingWindowInSeconds": 0,
        "UUID": "<uuid:2>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 202
        }
      },
      "get_response": {
        "BatchSize": 1,
        "BisectBatchOnFunctionError": false,
        "DestinationConfig": {
          "OnFailure": {
            "Destination": "arn:aws:sqs:<region>:111111111111:<resource:3>"
          }
        },
        "EventSourceArn": "arn:aws:dynamodb:<region>:111111111111:table/<resource:2>/stream/<resource:1>",
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<resource:4>",
        "FunctionResponseTypes": [],
        "LastModified": "datetime",
        "LastProcessingResult": "No records processed",
        "MaximumBatchingWindowInSeconds": 1,
        "MaximumRecordAgeInSeconds": -1,
        "MaximumRetryAttempts": 1,
        "ParallelizationFactor": 1,
        "StartingPosition": "TRIM_HORIZON",
        "State": "Enabled",
        "StateTransitionReason": "User action",
        "TumblingWindowInSeconds": 0,
        "UUID": "<uuid:2>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "delete_response": {
        "BatchSize": 1,
        "BisectBatchOnFunctionError": false,
        "DestinationConfig": {
          "OnFailure": {
            "Destination": "arn:aws:sqs:<region>:111111111111:<resource:3>"
          }
        },
        "EventSourceArn": "arn:aws:dynamodb:<region>:111111111111:table/<resource:2>/stream/<resource:1>",
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<resource:4>",
        "FunctionResponseTypes": [],
        "LastModified": "datetime",
        "LastProcessingResult": "No records processed",
        "MaximumBatchingWindowInSeconds": 1,
        "MaximumRecordAgeInSeconds": -1,
        "MaximumRetryAttempts": 1,
        "ParallelizationFactor": 1,
        "StartingPosition": "TRIM_HORIZON",
        "State": "Deleting",
        "StateTransitionReason": "User action",
        "TumblingWindowInSeconds": 0,
        "UUID": "<uuid:2>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 202
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaTags::test_tag_exceptions": {
    "recorded-date": "30-09-2022, 15:36:19",
    "recorded-content": {
      "tag_lambda_invalidarn": {
        "Error": {
          "Code": "ValidationException",
          "Message": "1 validation error detected: Value 'arn:aws:something' at 'resource' failed to satisfy constraint: Member must satisfy regular expression pattern: arn:(aws[a-zA-Z-]*)?:lambda:[a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\\d{1}:\\d{12}:function:[a-zA-Z0-9-_]+(:(\\$LATEST|[a-zA-Z0-9-_]+))?"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "tag_lambda_doesnotexist": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:doesnotexist"
        },
        "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:doesnotexist",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "tag_lambda_qualifier_doesnotexist": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "Tagging operations are permitted on Lambda functions only. Tags on aliases and versions are not supported. Please specify either a function name or a function ARN."
        },
        "Type": "User",
        "message": "Tagging operations are permitted on Lambda functions only. Tags on aliases and versions are not supported. Please specify either a function name or a function ARN.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "list_tag_lambda_empty": {
        "Tags": {},
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "untag_nomatch": {
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 204
        }
      },
      "untag_empty_keys": {
        "Error": {
          "Code": "ValidationException",
          "Message": "1 validation error detected: Value null at 'tagKeys' failed to satisfy constraint: Member must not be null"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "tag_empty_tags": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "An error occurred and the request cannot be processed."
        },
        "Type": "User",
        "message": "An error occurred and the request cannot be processed.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaTags::test_tag_limits": {
    "recorded-date": "30-09-2022, 15:36:23",
    "recorded-content": {
      "tag_lambda_too_many_tags": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "Number of tags exceeds function tag limit."
        },
        "Type": "User",
        "message": "Number of tags exceeds function tag limit.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "tag_response": {
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 204
        }
      },
      "list_tags_response": {
        "Tags": {
          "0_key": "0_value",
          "10_key": "10_value",
          "11_key": "11_value",
          "12_key": "12_value",
          "13_key": "13_value",
          "14_key": "14_value",
          "15_key": "15_value",
          "16_key": "16_value",
          "17_key": "17_value",
          "18_key": "18_value",
          "19_key": "19_value",
          "1_key": "1_value",
          "20_key": "20_value",
          "21_key": "21_value",
          "22_key": "22_value",
          "23_key": "23_value",
          "24_key": "24_value",
          "25_key": "25_value",
          "26_key": "26_value",
          "27_key": "27_value",
          "28_key": "28_value",
          "29_key": "29_value",
          "2_key": "2_value",
          "30_key": "30_value",
          "31_key": "31_value",
          "32_key": "32_value",
          "33_key": "33_value",
          "34_key": "34_value",
          "35_key": "35_value",
          "36_key": "36_value",
          "37_key": "37_value",
          "38_key": "38_value",
          "39_key": "39_value",
          "3_key": "3_value",
          "40_key": "40_value",
          "41_key": "41_value",
          "42_key": "42_value",
          "43_key": "43_value",
          "44_key": "44_value",
          "45_key": "45_value",
          "46_key": "46_value",
          "47_key": "47_value",
          "48_key": "48_value",
          "49_key": "49_value",
          "4_key": "4_value",
          "5_key": "5_value",
          "6_key": "6_value",
          "7_key": "7_value",
          "8_key": "8_value",
          "9_key": "9_value"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_fn_response": {
        "Code": {
          "Location": "<location>",
          "RepositoryType": "S3"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": "<code-size>",
          "Description": "",
          "Environment": {
            "Variables": {}
          },
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "Handler": "handler.handler",
          "LastModified": "date",
          "LastUpdateStatus": "Successful",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:1>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.9",
          "State": "Active",
          "Timeout": 30,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST"
        },
        "Tags": {
          "0_key": "0_value",
          "10_key": "10_value",
          "11_key": "11_value",
          "12_key": "12_value",
          "13_key": "13_value",
          "14_key": "14_value",
          "15_key": "15_value",
          "16_key": "16_value",
          "17_key": "17_value",
          "18_key": "18_value",
          "19_key": "19_value",
          "1_key": "1_value",
          "20_key": "20_value",
          "21_key": "21_value",
          "22_key": "22_value",
          "23_key": "23_value",
          "24_key": "24_value",
          "25_key": "25_value",
          "26_key": "26_value",
          "27_key": "27_value",
          "28_key": "28_value",
          "29_key": "29_value",
          "2_key": "2_value",
          "30_key": "30_value",
          "31_key": "31_value",
          "32_key": "32_value",
          "33_key": "33_value",
          "34_key": "34_value",
          "35_key": "35_value",
          "36_key": "36_value",
          "37_key": "37_value",
          "38_key": "38_value",
          "39_key": "39_value",
          "3_key": "3_value",
          "40_key": "40_value",
          "41_key": "41_value",
          "42_key": "42_value",
          "43_key": "43_value",
          "44_key": "44_value",
          "45_key": "45_value",
          "46_key": "46_value",
          "47_key": "47_value",
          "48_key": "48_value",
          "49_key": "49_value",
          "4_key": "4_value",
          "5_key": "5_value",
          "6_key": "6_value",
          "7_key": "7_value",
          "8_key": "8_value",
          "9_key": "9_value"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "tag_lambda_too_many_tags_additional": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "Number of tags exceeds function tag limit."
        },
        "Type": "User",
        "message": "Number of tags exceeds function tag limit.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaTags::test_tag_lifecycle": {
    "recorded-date": "04-10-2022, 15:18:34",
    "recorded-content": {
      "list_tags_response_postfncreate": {
        "Tags": {
          "key_a": "value_a"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_fn_response_postfncreate": {
        "Code": {
          "Location": "<location>",
          "RepositoryType": "S3"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": "<code-size>",
          "Description": "",
          "Environment": {
            "Variables": {}
          },
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "Handler": "handler.handler",
          "LastModified": "date",
          "LastUpdateStatus": "Successful",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:1>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.9",
          "State": "Active",
          "Timeout": 30,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST"
        },
        "Tags": {
          "key_a": "value_a"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "tag_resource_response": {
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 204
        }
      },
      "list_tags_response_postaddtags": {
        "Tags": {
          "key_a": "value_a",
          "key_b": "value_b",
          "key_c": "value_c",
          "key_d": "value_d",
          "key_e": "value_e"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_fn_response_postaddtags": {
        "Code": {
          "Location": "<location>",
          "RepositoryType": "S3"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": "<code-size>",
          "Description": "",
          "Environment": {
            "Variables": {}
          },
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "Handler": "handler.handler",
          "LastModified": "date",
          "LastUpdateStatus": "Successful",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:2>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.9",
          "State": "Active",
          "Timeout": 30,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST"
        },
        "Tags": {
          "key_a": "value_a",
          "key_b": "value_b",
          "key_c": "value_c",
          "key_d": "value_d",
          "key_e": "value_e"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "tag_resource_overwrite": {
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 204
        }
      },
      "list_tags_response_overwrite": {
        "Tags": {
          "key_a": "value_a",
          "key_b": "value_b",
          "key_c": "value_x",
          "key_d": "value_d",
          "key_e": "value_e"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_fn_response_overwrite": {
        "Code": {
          "Location": "<location>",
          "RepositoryType": "S3"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": "<code-size>",
          "Description": "",
          "Environment": {
            "Variables": {}
          },
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "Handler": "handler.handler",
          "LastModified": "date",
          "LastUpdateStatus": "Successful",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:3>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.9",
          "State": "Active",
          "Timeout": 30,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST"
        },
        "Tags": {
          "key_a": "value_a",
          "key_b": "value_b",
          "key_c": "value_x",
          "key_d": "value_d",
          "key_e": "value_e"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "list_tags_response_postuntag": {
        "Tags": {
          "key_a": "value_a",
          "key_b": "value_b",
          "key_e": "value_e"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_fn_response_postuntag": {
        "Code": {
          "Location": "<location>",
          "RepositoryType": "S3"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": "<code-size>",
          "Description": "",
          "Environment": {
            "Variables": {}
          },
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "Handler": "handler.handler",
          "LastModified": "date",
          "LastUpdateStatus": "Successful",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:4>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.9",
          "State": "Active",
          "Timeout": 30,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST"
        },
        "Tags": {
          "key_a": "value_a",
          "key_b": "value_b",
          "key_e": "value_e"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "list_tags_response_postuntagall": {
        "Tags": {},
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_fn_response_postuntagall": {
        "Code": {
          "Location": "<location>",
          "RepositoryType": "S3"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": "<code-size>",
          "Description": "",
          "Environment": {
            "Variables": {}
          },
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "Handler": "handler.handler",
          "LastModified": "date",
          "LastUpdateStatus": "Successful",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:5>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.9",
          "State": "Active",
          "Timeout": 30,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "list_tags_postdelete": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:<function-name:1>"
        },
        "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaProvisionedConcurrency::test_provisioned_concurrency_exceptions": {
    "recorded-date": "03-10-2022, 08:13:50",
    "recorded-content": {
      "publish_version_result": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:1>",
        "CodeSize": "<code-size>",
        "Description": "",
        "Environment": {
          "Variables": {}
        },
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:1",
        "FunctionName": "<function-name:1>",
        "Handler": "handler.handler",
        "LastModified": "date",
        "LastUpdateStatus": "Successful",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:1>",
        "Role": "arn:aws:iam::111111111111:role/<resource:2>",
        "Runtime": "python3.9",
        "State": "Active",
        "Timeout": 30,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "1",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "get_provisioned_config_doesnotexist": {
        "Error": {
          "Code": "ProvisionedConcurrencyConfigNotFoundException",
          "Message": "No Provisioned Concurrency Config found for this function"
        },
        "Type": "User",
        "message": "No Provisioned Concurrency Config found for this function",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "get_provisioned_functionname_doesnotexist": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Cannot find alias arn: arn:aws:lambda:<region>:111111111111:function:doesnotexist:noalias"
        },
        "Message": "Cannot find alias arn: arn:aws:lambda:<region>:111111111111:function:doesnotexist:noalias",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "get_provisioned_qualifier_doesnotexist": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Cannot find alias arn: arn:aws:lambda:<region>:111111111111:function:<function-name:1>:noalias"
        },
        "Message": "Cannot find alias arn: arn:aws:lambda:<region>:111111111111:function:<function-name:1>:noalias",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "get_provisioned_version_doesnotexist": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:<function-name:1>:10"
        },
        "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:<function-name:1>:10",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "get_provisioned_latest": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "The function resource provided must be an alias or a published version."
        },
        "Type": "User",
        "message": "The function resource provided must be an alias or a published version.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "list_provisioned_noconfigs": {
        "ProvisionedConcurrencyConfigs": [],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "list_provisioned_functionname_doesnotexist": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:doesnotexist"
        },
        "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:doesnotexist",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "delete_provisioned_functionname_doesnotexist": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:doesnotexist:1"
        },
        "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:doesnotexist:1",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "delete_provisioned_qualifier_doesnotexist": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Cannot find alias arn: arn:aws:lambda:<region>:111111111111:function:<function-name:1>:noalias"
        },
        "Message": "Cannot find alias arn: arn:aws:lambda:<region>:111111111111:function:<function-name:1>:noalias",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "delete_provisioned_version_doesnotexist": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:<function-name:1>:10"
        },
        "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:<function-name:1>:10",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "delete_provisioned_latest": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "The function resource provided must be an alias or a published version."
        },
        "Type": "User",
        "message": "The function resource provided must be an alias or a published version.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "delete_provisioned_config_doesnotexist": {
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 204
        }
      },
      "put_provisioned_functionname_doesnotexist_alias": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Cannot find alias arn: arn:aws:lambda:<region>:111111111111:function:doesnotexist:noalias"
        },
        "Message": "Cannot find alias arn: arn:aws:lambda:<region>:111111111111:function:doesnotexist:noalias",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "put_provisioned_functionname_doesnotexist_version": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:doesnotexist:1"
        },
        "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:doesnotexist:1",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "put_provisioned_qualifier_doesnotexist": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Cannot find alias arn: arn:aws:lambda:<region>:111111111111:function:<function-name:1>:doesnotexist"
        },
        "Message": "Cannot find alias arn: arn:aws:lambda:<region>:111111111111:function:<function-name:1>:doesnotexist",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "put_provisioned_version_doesnotexist": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:<function-name:1>:10"
        },
        "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:<function-name:1>:10",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "put_provisioned_latest": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "Provisioned Concurrency Configs cannot be applied to unpublished function versions."
        },
        "Type": "User",
        "message": "Provisioned Concurrency Configs cannot be applied to unpublished function versions.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaProvisionedConcurrency::test_lambda_provisioned_lifecycle": {
    "recorded-date": "03-10-2022, 23:22:39",
    "recorded-content": {
      "publish_version_result": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:1>",
        "CodeSize": "<code-size>",
        "Description": "",
        "Environment": {
          "Variables": {}
        },
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:1",
        "FunctionName": "<function-name:1>",
        "Handler": "handler.handler",
        "LastModified": "date",
        "LastUpdateStatus": "Successful",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:1>",
        "Role": "arn:aws:iam::111111111111:role/<resource:2>",
        "Runtime": "python3.9",
        "State": "Active",
        "Timeout": 30,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "1",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "create_alias_result": {
        "AliasArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:<alias-name>",
        "Description": "",
        "FunctionVersion": "1",
        "Name": "<alias-name>",
        "RevisionId": "<uuid:2>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "put_provisioned_on_version": {
        "AllocatedProvisionedConcurrentExecutions": 0,
        "AvailableProvisionedConcurrentExecutions": 0,
        "LastModified": "date",
        "RequestedProvisionedConcurrentExecutions": 1,
        "Status": "IN_PROGRESS",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 202
        }
      },
      "put_provisioned_on_alias_versionconflict": {
        "Error": {
          "Code": "ResourceConflictException",
          "Message": "Alias can't be used for Provisioned Concurrency configuration on an already Provisioned version"
        },
        "Type": "User",
        "message": "Alias can't be used for Provisioned Concurrency configuration on an already Provisioned version",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 409
        }
      },
      "delete_provisioned_version": {
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 204
        }
      },
      "get_provisioned_version_postdelete": {
        "Error": {
          "Code": "ProvisionedConcurrencyConfigNotFoundException",
          "Message": "No Provisioned Concurrency Config found for this function"
        },
        "Type": "User",
        "message": "No Provisioned Concurrency Config found for this function",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "put_provisioned_on_alias": {
        "AllocatedProvisionedConcurrentExecutions": 0,
        "AvailableProvisionedConcurrentExecutions": 0,
        "LastModified": "date",
        "RequestedProvisionedConcurrentExecutions": 1,
        "Status": "IN_PROGRESS",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 202
        }
      },
      "put_provisioned_on_version_conflict": {
        "Error": {
          "Code": "ResourceConflictException",
          "Message": "Version is pointed by a Provisioned Concurrency alias"
        },
        "Type": "User",
        "message": "Version is pointed by a Provisioned Concurrency alias",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 409
        }
      },
      "delete_alias_result": {
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 204
        }
      },
      "get_provisioned_alias_postaliasdelete": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Cannot find alias arn: arn:aws:lambda:<region>:111111111111:function:<function-name:1>:<alias-name>"
        },
        "Message": "Cannot find alias arn: arn:aws:lambda:<region>:111111111111:function:<function-name:1>:<alias-name>",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "list_response_postdeletes": {
        "ProvisionedConcurrencyConfigs": [],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaSizeLimits::test_oversized_request_create_lambda": {
    "recorded-date": "03-10-2022, 18:52:49",
    "recorded-content": {
      "invalid_param_exc": {
        "Error": {
          "Code": "RequestEntityTooLargeException",
          "Message": "Request must be smaller than 69905067 bytes for the CreateFunction operation"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 413
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaTags::test_tag_versions": {
    "recorded-date": "03-10-2022, 20:42:55",
    "recorded-content": {
      "tag_resource_exception": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "Tagging operations are permitted on Lambda functions only. Tags on aliases and versions are not supported. Please specify either a function name or a function ARN."
        },
        "Type": "User",
        "message": "Tagging operations are permitted on Lambda functions only. Tags on aliases and versions are not supported. Please specify either a function name or a function ARN.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "tag_resource_latest_exception": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "Tagging operations are permitted on Lambda functions only. Tags on aliases and versions are not supported. Please specify either a function name or a function ARN."
        },
        "Type": "User",
        "message": "Tagging operations are permitted on Lambda functions only. Tags on aliases and versions are not supported. Please specify either a function name or a function ARN.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaUrl::test_url_config_list_paging": {
    "recorded-date": "21-12-2022, 15:46:10",
    "recorded-content": {
      "fn_version_result": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:1>",
        "CodeSize": "<code-size>",
        "Description": "",
        "Environment": {
          "Variables": {}
        },
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:1",
        "FunctionName": "<function-name:1>",
        "Handler": "lambda_handler.handler",
        "LastModified": "date",
        "LastUpdateStatus": "Successful",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:1>",
        "Role": "arn:aws:iam::111111111111:role/<resource:2>",
        "Runtime": "nodejs14.x",
        "State": "Active",
        "Timeout": 30,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "1",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "create_alias_result": {
        "AliasArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:urlalias",
        "Description": "",
        "FunctionVersion": "1",
        "Name": "urlalias",
        "RevisionId": "<uuid:2>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "list_function_notfound": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Function does not exist"
        },
        "Message": "Function does not exist",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "list_all_empty": {
        "FunctionUrlConfigs": [],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "url_config_fn": {
        "AuthType": "NONE",
        "CreationTime": "date",
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "FunctionUrl": "lambda-url",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "url_config_alias": {
        "AuthType": "NONE",
        "CreationTime": "date",
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:urlalias",
        "FunctionUrl": "lambda-url",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "list_all": {
        "FunctionUrlConfigs": [
          {
            "AuthType": "NONE",
            "CreationTime": "date",
            "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
            "FunctionUrl": "lambda-url",
            "LastModifiedTime": "date"
          },
          {
            "AuthType": "NONE",
            "CreationTime": "date",
            "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:urlalias",
            "FunctionUrl": "lambda-url",
            "LastModifiedTime": "date"
          }
        ],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaUrl::test_url_config_exceptions": {
    "recorded-date": "23-12-2022, 16:10:57",
    "recorded-content": {
      "fn_version_result": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:1>",
        "CodeSize": "<code-size>",
        "Description": "",
        "Environment": {
          "Variables": {}
        },
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:1",
        "FunctionName": "<function-name:1>",
        "Handler": "lambda_handler.handler",
        "LastModified": "date",
        "LastUpdateStatus": "Successful",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:1>",
        "Role": "arn:aws:iam::111111111111:role/<resource:2>",
        "Runtime": "nodejs14.x",
        "State": "Active",
        "Timeout": 30,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "1",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "create_alias_result": {
        "AliasArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:urlalias",
        "Description": "",
        "FunctionVersion": "1",
        "Name": "urlalias",
        "RevisionId": "<uuid:2>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "create_function_url_config_name_doesnotexist": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Function does not exist"
        },
        "Message": "Function does not exist",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "create_function_url_config_arn_doesnotexist": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Function does not exist"
        },
        "Message": "Function does not exist",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "create_function_url_config_name_doesnotexist_qualifier": {
        "Error": {
          "Code": "ValidationException",
          "Message": "1 validation error detected: Value '1' at 'qualifier' failed to satisfy constraint: Member must satisfy regular expression pattern: (^\\$LATEST$)|((?!^[0-9]+$)([a-zA-Z0-9-_]+))"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "create_function_url_config_qualifier_version": {
        "Error": {
          "Code": "ValidationException",
          "Message": "1 validation error detected: Value '1' at 'qualifier' failed to satisfy constraint: Member must satisfy regular expression pattern: (^\\$LATEST$)|((?!^[0-9]+$)([a-zA-Z0-9-_]+))"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "create_function_url_config_qualifier_version_doesnotexist": {
        "Error": {
          "Code": "ValidationException",
          "Message": "1 validation error detected: Value '2' at 'qualifier' failed to satisfy constraint: Member must satisfy regular expression pattern: (^\\$LATEST$)|((?!^[0-9]+$)([a-zA-Z0-9-_]+))"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "create_function_url_config_qualifier_alias_doesnotexist": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Function does not exist"
        },
        "Message": "Function does not exist",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "create_function_url_config_qualifier_alias_doesnotmatch_arn": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "The derived qualifier from the function name does not match the specified qualifier."
        },
        "Type": "User",
        "message": "The derived qualifier from the function name does not match the specified qualifier.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "create_function_url_config_qualifier_latest": {
        "Error": {
          "Code": "ValidationException",
          "Message": "1 validation error detected: Value '$LATEST' at 'qualifier' failed to satisfy constraint: Member must satisfy regular expression pattern: ((?!^\\d+$)^[0-9a-zA-Z-_]+$)"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "get_function_url_config_name_doesnotexist": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "The resource you requested does not exist."
        },
        "Message": "The resource you requested does not exist.",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "get_function_url_config_arn_doesnotexist": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "The resource you requested does not exist."
        },
        "Message": "The resource you requested does not exist.",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "get_function_url_config_name_doesnotexist_qualifier": {
        "Error": {
          "Code": "ValidationException",
          "Message": "1 validation error detected: Value '1' at 'qualifier' failed to satisfy constraint: Member must satisfy regular expression pattern: (^\\$LATEST$)|((?!^[0-9]+$)([a-zA-Z0-9-_]+))"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "get_function_url_config_qualifier_version": {
        "Error": {
          "Code": "ValidationException",
          "Message": "1 validation error detected: Value '1' at 'qualifier' failed to satisfy constraint: Member must satisfy regular expression pattern: (^\\$LATEST$)|((?!^[0-9]+$)([a-zA-Z0-9-_]+))"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "get_function_url_config_qualifier_version_doesnotexist": {
        "Error": {
          "Code": "ValidationException",
          "Message": "1 validation error detected: Value '2' at 'qualifier' failed to satisfy constraint: Member must satisfy regular expression pattern: (^\\$LATEST$)|((?!^[0-9]+$)([a-zA-Z0-9-_]+))"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "get_function_url_config_qualifier_alias_doesnotexist": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "The resource you requested does not exist."
        },
        "Message": "The resource you requested does not exist.",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "get_function_url_config_qualifier_alias_doesnotmatch_arn": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "The derived qualifier from the function name does not match the specified qualifier."
        },
        "Type": "User",
        "message": "The derived qualifier from the function name does not match the specified qualifier.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "get_function_url_config_qualifier_latest": {
        "Error": {
          "Code": "ValidationException",
          "Message": "1 validation error detected: Value '$LATEST' at 'qualifier' failed to satisfy constraint: Member must satisfy regular expression pattern: ((?!^\\d+$)^[0-9a-zA-Z-_]+$)"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "get_function_url_config_config_doesnotexist": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "The resource you requested does not exist."
        },
        "Message": "The resource you requested does not exist.",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "delete_function_url_config_name_doesnotexist": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "The resource you requested does not exist."
        },
        "Message": "The resource you requested does not exist.",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "delete_function_url_config_arn_doesnotexist": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "The resource you requested does not exist."
        },
        "Message": "The resource you requested does not exist.",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "delete_function_url_config_name_doesnotexist_qualifier": {
        "Error": {
          "Code": "ValidationException",
          "Message": "1 validation error detected: Value '1' at 'qualifier' failed to satisfy constraint: Member must satisfy regular expression pattern: (^\\$LATEST$)|((?!^[0-9]+$)([a-zA-Z0-9-_]+))"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "delete_function_url_config_qualifier_version": {
        "Error": {
          "Code": "ValidationException",
          "Message": "1 validation error detected: Value '1' at 'qualifier' failed to satisfy constraint: Member must satisfy regular expression pattern: (^\\$LATEST$)|((?!^[0-9]+$)([a-zA-Z0-9-_]+))"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "delete_function_url_config_qualifier_version_doesnotexist": {
        "Error": {
          "Code": "ValidationException",
          "Message": "1 validation error detected: Value '2' at 'qualifier' failed to satisfy constraint: Member must satisfy regular expression pattern: (^\\$LATEST$)|((?!^[0-9]+$)([a-zA-Z0-9-_]+))"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "delete_function_url_config_qualifier_alias_doesnotexist": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "The resource you requested does not exist."
        },
        "Message": "The resource you requested does not exist.",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "delete_function_url_config_qualifier_alias_doesnotmatch_arn": "<aws_internal_failure>",
      "delete_function_url_config_qualifier_latest": {
        "Error": {
          "Code": "ValidationException",
          "Message": "1 validation error detected: Value '$LATEST' at 'qualifier' failed to satisfy constraint: Member must satisfy regular expression pattern: ((?!^\\d+$)^[0-9a-zA-Z-_]+$)"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "delete_function_url_config_config_doesnotexist": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "The resource you requested does not exist."
        },
        "Message": "The resource you requested does not exist.",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "update_function_url_config_name_doesnotexist": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Function does not exist"
        },
        "Message": "Function does not exist",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "update_function_url_config_arn_doesnotexist": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Function does not exist"
        },
        "Message": "Function does not exist",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "update_function_url_config_name_doesnotexist_qualifier": {
        "Error": {
          "Code": "ValidationException",
          "Message": "1 validation error detected: Value '1' at 'qualifier' failed to satisfy constraint: Member must satisfy regular expression pattern: (^\\$LATEST$)|((?!^[0-9]+$)([a-zA-Z0-9-_]+))"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "update_function_url_config_qualifier_version": {
        "Error": {
          "Code": "ValidationException",
          "Message": "1 validation error detected: Value '1' at 'qualifier' failed to satisfy constraint: Member must satisfy regular expression pattern: (^\\$LATEST$)|((?!^[0-9]+$)([a-zA-Z0-9-_]+))"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "update_function_url_config_qualifier_version_doesnotexist": {
        "Error": {
          "Code": "ValidationException",
          "Message": "1 validation error detected: Value '2' at 'qualifier' failed to satisfy constraint: Member must satisfy regular expression pattern: (^\\$LATEST$)|((?!^[0-9]+$)([a-zA-Z0-9-_]+))"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "update_function_url_config_qualifier_alias_doesnotexist": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Function does not exist"
        },
        "Message": "Function does not exist",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "update_function_url_config_qualifier_alias_doesnotmatch_arn": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "The derived qualifier from the function name does not match the specified qualifier."
        },
        "Type": "User",
        "message": "The derived qualifier from the function name does not match the specified qualifier.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "update_function_url_config_qualifier_latest": {
        "Error": {
          "Code": "ValidationException",
          "Message": "1 validation error detected: Value '$LATEST' at 'qualifier' failed to satisfy constraint: Member must satisfy regular expression pattern: ((?!^\\d+$)^[0-9a-zA-Z-_]+$)"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "update_function_url_config_config_doesnotexist": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "The resource you requested does not exist."
        },
        "Message": "The resource you requested does not exist.",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaPermissions::test_permission_exceptions": {
    "recorded-date": "22-12-2022, 10:15:01",
    "recorded-content": {
      "add_permission_fn_qualifier_mismatch": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "The derived qualifier from the function name does not match the specified qualifier."
        },
        "Type": "User",
        "message": "The derived qualifier from the function name does not match the specified qualifier.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "add_permission_fn_qualifier_latest": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "We currently do not support adding policies for $LATEST."
        },
        "Type": "User",
        "message": "We currently do not support adding policies for $LATEST.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "add_permission_principal_invalid": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "The provided principal was invalid. Please check the principal and try again."
        },
        "Type": "User",
        "message": "The provided principal was invalid. Please check the principal and try again.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "get_policy_fn_doesnotexist": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:doesnotexist"
        },
        "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:doesnotexist",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "get_policy_fn_version_doesnotexist": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "The resource you requested does not exist."
        },
        "Message": "The resource you requested does not exist.",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "add_permission_fn_doesnotexist": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:doesnotexist"
        },
        "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:doesnotexist",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "remove_permission_policy_doesnotexist": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "No policy is associated with the given resource."
        },
        "Message": "No policy is associated with the given resource.",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "add_permission_fn_alias_doesnotexist": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Cannot find alias arn: arn:aws:lambda:<region>:111111111111:function:<function-name>:alias-doesnotexist"
        },
        "Message": "Cannot find alias arn: arn:aws:lambda:<region>:111111111111:function:<function-name>:alias-doesnotexist",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "add_permission_fn_version_doesnotexist": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:<function-name>:42"
        },
        "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:<function-name>:42",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "add_permission_fn_qualifier_invalid": {
        "Error": {
          "Code": "ValidationException",
          "Message": "1 validation error detected: Value 'invalid-qualifier-with-?-char' at 'qualifier' failed to satisfy constraint: Member must satisfy regular expression pattern: (|[a-zA-Z0-9$_-]+)"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "add_permission_fn_qualifier_valid_doesnotexist": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:<function-name>:valid-with-$-but-doesnotexist"
        },
        "Message": "Function not found: arn:aws:lambda:<region>:111111111111:function:<function-name>:valid-with-$-but-doesnotexist",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "add_permission_conflicting_statement_id": {
        "Error": {
          "Code": "ResourceConflictException",
          "Message": "The statement id (s3) provided already exists. Please provide a new statement id, or remove the existing statement."
        },
        "Type": "User",
        "message": "The statement id (s3) provided already exists. Please provide a new statement id, or remove the existing statement.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 409
        }
      },
      "remove_permission_fn_doesnotexist": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "No policy found for: arn:aws:lambda:<region>:111111111111:function:doesnotexist"
        },
        "Message": "No policy found for: arn:aws:lambda:<region>:111111111111:function:doesnotexist",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "remove_permission_fn_alias_doesnotexist": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Cannot find alias arn: arn:aws:lambda:<region>:111111111111:function:<function-name>:alias-doesnotexist"
        },
        "Message": "Cannot find alias arn: arn:aws:lambda:<region>:111111111111:function:<function-name>:alias-doesnotexist",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaSizeLimits::test_oversized_unzipped_lambda": {
    "recorded-date": "04-10-2022, 12:24:21",
    "recorded-content": {
      "invalid_param_exc": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "Unzipped size must be smaller than 262144000 bytes"
        },
        "Type": "User",
        "message": "Unzipped size must be smaller than 262144000 bytes",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaFunction::test_create_lambda_exceptions": {
    "recorded-date": "10-02-2023, 21:54:53",
    "recorded-content": {
      "invalid_role_arn_exc": {
        "Error": {
          "Code": "ValidationException",
          "Message": "1 validation error detected: Value 'r1' at 'role' failed to satisfy constraint: Member must satisfy regular expression pattern: arn:(aws[a-zA-Z-]*)?:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "invalid_runtime_exc": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "Value non-existent-runtime at 'runtime' failed to satisfy constraint: Member must satisfy enum value set: [nodejs12.x, provided, nodejs16.x, nodejs14.x, ruby2.7, java11, dotnet6, go1.x, nodejs18.x, provided.al2, java8, java8.al2, dotnetcore3.1, python3.7, python3.8, python3.9] or be a valid ARN"
        },
        "Type": "User",
        "message": "Value non-existent-runtime at 'runtime' failed to satisfy constraint: Member must satisfy enum value set: [nodejs12.x, provided, nodejs16.x, nodejs14.x, ruby2.7, java11, dotnet6, go1.x, nodejs18.x, provided.al2, java8, java8.al2, dotnetcore3.1, python3.7, python3.8, python3.9] or be a valid ARN",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "uppercase_runtime_exc": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "Value PYTHON3.9 at 'runtime' failed to satisfy constraint: Member must satisfy enum value set: [nodejs12.x, provided, nodejs16.x, nodejs14.x, ruby2.7, java11, dotnet6, go1.x, nodejs18.x, provided.al2, java8, java8.al2, dotnetcore3.1, python3.7, python3.8, python3.9] or be a valid ARN"
        },
        "Type": "User",
        "message": "Value PYTHON3.9 at 'runtime' failed to satisfy constraint: Member must satisfy enum value set: [nodejs12.x, provided, nodejs16.x, nodejs14.x, ruby2.7, java11, dotnet6, go1.x, nodejs18.x, provided.al2, java8, java8.al2, dotnetcore3.1, python3.7, python3.8, python3.9] or be a valid ARN",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "empty_architectures": "Parameter validation failed:\nInvalid length for parameter Architectures, value: 0, valid min length: 1",
      "multiple_architectures": {
        "Error": {
          "Code": "ValidationException",
          "Message": "1 validation error detected: Value '[x86_64, arm64]' at 'architectures' failed to satisfy constraint: Member must have length less than or equal to 1"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "uppercase_architecture": {
        "Error": {
          "Code": "ValidationException",
          "Message": "1 validation error detected: Value '[X86_64]' at 'architectures' failed to satisfy constraint: Member must satisfy constraint: [Member must satisfy enum value set: [x86_64, arm64], Member must not be null]"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "invalid_zip_exc": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "Could not unzip uploaded file. Please check your file, then try to upload again."
        },
        "Type": "User",
        "message": "Could not unzip uploaded file. Please check your file, then try to upload again.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaFunction::test_update_lambda_exceptions": {
    "recorded-date": "04-10-2022, 18:31:15",
    "recorded-content": {
      "invalid_role_arn_exc": {
        "Error": {
          "Code": "ValidationException",
          "Message": "1 validation error detected: Value 'r1' at 'role' failed to satisfy constraint: Member must satisfy regular expression pattern: arn:(aws[a-zA-Z-]*)?:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "invalid_runtime_exc": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "Value non-existent-runtime at 'runtime' failed to satisfy constraint: Member must satisfy enum value set: [nodejs12.x, provided, nodejs16.x, nodejs14.x, ruby2.7, java11, dotnet6, go1.x, provided.al2, java8, java8.al2, dotnetcore3.1, python3.7, python3.8, python3.9] or be a valid ARN"
        },
        "Type": "User",
        "message": "Value non-existent-runtime at 'runtime' failed to satisfy constraint: Member must satisfy enum value set: [nodejs12.x, provided, nodejs16.x, nodejs14.x, ruby2.7, java11, dotnet6, go1.x, provided.al2, java8, java8.al2, dotnetcore3.1, python3.7, python3.8, python3.9] or be a valid ARN",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "uppercase_runtime_exc": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "Value PYTHON3.9 at 'runtime' failed to satisfy constraint: Member must satisfy enum value set: [nodejs12.x, provided, nodejs16.x, nodejs14.x, ruby2.7, java11, dotnet6, go1.x, provided.al2, java8, java8.al2, dotnetcore3.1, python3.7, python3.8, python3.9] or be a valid ARN"
        },
        "Type": "User",
        "message": "Value PYTHON3.9 at 'runtime' failed to satisfy constraint: Member must satisfy enum value set: [nodejs12.x, provided, nodejs16.x, nodejs14.x, ruby2.7, java11, dotnet6, go1.x, provided.al2, java8, java8.al2, dotnetcore3.1, python3.7, python3.8, python3.9] or be a valid ARN",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaFunction::test_list_functions": {
    "recorded-date": "06-10-2022, 07:25:34",
    "recorded-content": {
      "create_response_1": {
        "CreateEventSourceMappingResponse": null,
        "CreateFunctionResponse": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": "<code-size>",
          "Description": "",
          "Environment": {
            "Variables": {}
          },
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "Handler": "handler.handler",
          "LastModified": "date",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:1>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.9",
          "State": "Pending",
          "StateReason": "The function is being created.",
          "StateReasonCode": "Creating",
          "Timeout": 30,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "1",
          "ResponseMetadata": {
            "HTTPHeaders": {},
            "HTTPStatusCode": 201
          }
        }
      },
      "create_response_2": {
        "CreateEventSourceMappingResponse": null,
        "CreateFunctionResponse": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:2>",
          "CodeSize": "<code-size>",
          "Description": "",
          "Environment": {
            "Variables": {}
          },
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:2>",
          "FunctionName": "<function-name:2>",
          "Handler": "handler.handler",
          "LastModified": "date",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:2>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.9",
          "State": "Pending",
          "StateReason": "The function is being created.",
          "StateReasonCode": "Creating",
          "Timeout": 30,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST",
          "ResponseMetadata": {
            "HTTPHeaders": {},
            "HTTPStatusCode": 201
          }
        }
      },
      "list_functions_invalid_functionversion": {
        "Error": {
          "Code": "ValidationException",
          "Message": "1 validation error detected: Value 'invalid' at 'functionVersion' failed to satisfy constraint: Member must satisfy enum value set: [ALL]"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "list_all": {
        "Functions": [
          {
            "Architectures": [
              "x86_64"
            ],
            "CodeSha256": "<code-sha256:1>",
            "CodeSize": "<code-size>",
            "Description": "",
            "Environment": {
              "Variables": {}
            },
            "EphemeralStorage": {
              "Size": 512
            },
            "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:$LATEST",
            "FunctionName": "<function-name:1>",
            "Handler": "handler.handler",
            "LastModified": "date",
            "MemorySize": 128,
            "PackageType": "Zip",
            "RevisionId": "<uuid:3>",
            "Role": "arn:aws:iam::111111111111:role/<resource:1>",
            "Runtime": "python3.9",
            "Timeout": 30,
            "TracingConfig": {
              "Mode": "PassThrough"
            },
            "Version": "$LATEST"
          },
          {
            "Architectures": [
              "x86_64"
            ],
            "CodeSha256": "<code-sha256:1>",
            "CodeSize": "<code-size>",
            "Description": "",
            "Environment": {
              "Variables": {}
            },
            "EphemeralStorage": {
              "Size": 512
            },
            "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:1",
            "FunctionName": "<function-name:1>",
            "Handler": "handler.handler",
            "LastModified": "date",
            "MemorySize": 128,
            "PackageType": "Zip",
            "RevisionId": "<uuid:4>",
            "Role": "arn:aws:iam::111111111111:role/<resource:1>",
            "Runtime": "python3.9",
            "Timeout": 30,
            "TracingConfig": {
              "Mode": "PassThrough"
            },
            "Version": "1"
          },
          {
            "Architectures": [
              "x86_64"
            ],
            "CodeSha256": "<code-sha256:2>",
            "CodeSize": "<code-size>",
            "Description": "",
            "Environment": {
              "Variables": {}
            },
            "EphemeralStorage": {
              "Size": 512
            },
            "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:2>:$LATEST",
            "FunctionName": "<function-name:2>",
            "Handler": "handler.handler",
            "LastModified": "date",
            "MemorySize": 128,
            "PackageType": "Zip",
            "RevisionId": "<uuid:5>",
            "Role": "arn:aws:iam::111111111111:role/<resource:1>",
            "Runtime": "python3.9",
            "Timeout": 30,
            "TracingConfig": {
              "Mode": "PassThrough"
            },
            "Version": "$LATEST"
          }
        ]
      },
      "list_default": {
        "Functions": [
          {
            "Architectures": [
              "x86_64"
            ],
            "CodeSha256": "<code-sha256:1>",
            "CodeSize": "<code-size>",
            "Description": "",
            "Environment": {
              "Variables": {}
            },
            "EphemeralStorage": {
              "Size": 512
            },
            "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
            "FunctionName": "<function-name:1>",
            "Handler": "handler.handler",
            "LastModified": "date",
            "MemorySize": 128,
            "PackageType": "Zip",
            "RevisionId": "<uuid:3>",
            "Role": "arn:aws:iam::111111111111:role/<resource:1>",
            "Runtime": "python3.9",
            "Timeout": 30,
            "TracingConfig": {
              "Mode": "PassThrough"
            },
            "Version": "$LATEST"
          },
          {
            "Architectures": [
              "x86_64"
            ],
            "CodeSha256": "<code-sha256:2>",
            "CodeSize": "<code-size>",
            "Description": "",
            "Environment": {
              "Variables": {}
            },
            "EphemeralStorage": {
              "Size": 512
            },
            "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:2>",
            "FunctionName": "<function-name:2>",
            "Handler": "handler.handler",
            "LastModified": "date",
            "MemorySize": 128,
            "PackageType": "Zip",
            "RevisionId": "<uuid:5>",
            "Role": "arn:aws:iam::111111111111:role/<resource:1>",
            "Runtime": "python3.9",
            "Timeout": 30,
            "TracingConfig": {
              "Mode": "PassThrough"
            },
            "Version": "$LATEST"
          }
        ]
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaLayer::test_layer_exceptions": {
    "recorded-date": "22-11-2022, 19:12:27",
    "recorded-content": {
      "publish_result": {
        "CompatibleArchitectures": [
          "x86_64"
        ],
        "CompatibleRuntimes": [
          "python3.9"
        ],
        "Content": {
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": "<code-size>",
          "Location": "<layer-location>"
        },
        "CreatedDate": "date",
        "Description": "",
        "LayerArn": "arn:aws:lambda:<region>:111111111111:layer:<resource:1>",
        "LayerVersionArn": "arn:aws:lambda:<region>:111111111111:layer:<resource:1>:1",
        "Version": 1,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "list_layers_exc_compatibleruntime_invalid": {
        "Error": {
          "Code": "ValidationException",
          "Message": "1 validation error detected: Value 'runtimedoesnotexist' at 'compatibleRuntime' failed to satisfy constraint: Member must satisfy enum value set: [ruby2.6, dotnetcore1.0, python3.7, nodejs8.10, nasa, ruby2.7, python2.7-greengrass, dotnetcore2.0, python3.8, dotnet6, dotnetcore2.1, python3.9, java11, nodejs6.10, provided, dotnetcore3.1, java17, nodejs, nodejs4.3, java8.al2, go1.x, go1.9, byol, nodejs10.x, python3.10, java8, nodejs12.x, nodejs8.x, nodejs14.x, nodejs8.9, nodejs16.x, provided.al2, nodejs4.3-edge, nodejs18.x, python3.4, ruby2.5, python3.6, python2.7]"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "list_layers_exc_compatiblearchitecture_invalid": {
        "Error": {
          "Code": "ValidationException",
          "Message": "1 validation error detected: Value 'archdoesnotexist' at 'compatibleArchitecture' failed to satisfy constraint: Member must satisfy enum value set: [x86_64, arm64]"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "list_nonexistent_layer": {
        "LayerVersions": [],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_layer_version_exc_layer_doesnotexist": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "The resource you requested does not exist."
        },
        "Message": "The resource you requested does not exist.",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "get_layer_version_exc_layer_version_doesnotexist_negative": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "Layer Version Cannot be less than 1"
        },
        "Type": "User",
        "message": "Layer Version Cannot be less than 1",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "get_layer_version_exc_layer_version_doesnotexist_zero": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "Layer Version Cannot be less than 1"
        },
        "Type": "User",
        "message": "Layer Version Cannot be less than 1",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "get_layer_version_exc_layer_version_doesnotexist_2": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "The resource you requested does not exist."
        },
        "Message": "The resource you requested does not exist.",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "get_layer_version_by_arn_exc_invalidarn": {
        "Error": {
          "Code": "ValidationException",
          "Message": "1 validation error detected: Value 'arn:aws:lambda:<region>:111111111111:layer:<resource:1>' at 'arn' failed to satisfy constraint: Member must satisfy regular expression pattern: arn:[a-zA-Z0-9-]+:lambda:[a-zA-Z0-9-]+:\\d{12}:layer:[a-zA-Z0-9-_]+:[0-9]+"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "get_layer_version_by_arn_exc_nonexistentversion": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "The resource you requested does not exist."
        },
        "Message": "The resource you requested does not exist.",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "delete_nonexistent_response": {
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 204
        }
      },
      "delete_nonexistent_version_response": {
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 204
        }
      },
      "delete_layer_response": {
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 204
        }
      },
      "delete_layer_again_response": {
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 204
        }
      },
      "delete_layer_version_exc_layerversion_invalid_version": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "Layer Version Cannot be less than 1"
        },
        "Type": "User",
        "message": "Layer Version Cannot be less than 1",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "publish_empty_result": {
        "CompatibleArchitectures": [],
        "CompatibleRuntimes": [],
        "Content": {
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": "<code-size>",
          "Location": "<layer-location>"
        },
        "CreatedDate": "date",
        "Description": "",
        "LayerArn": "arn:aws:lambda:<region>:111111111111:layer:<resource:2>",
        "LayerVersionArn": "arn:aws:lambda:<region>:111111111111:layer:<resource:2>:1",
        "Version": 1,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "publish_layer_version_exc_invalid_runtime_arch": {
        "Error": {
          "Code": "ValidationException",
          "Message": "2 validation errors detected: Value '[invalidruntime]' at 'compatibleRuntimes' failed to satisfy constraint: Member must satisfy enum value set: [nodejs12.x, provided, nodejs16.x, nodejs14.x, ruby2.7, java11, dotnet6, go1.x, nodejs18.x, provided.al2, java8, java8.al2, dotnetcore3.1, python3.7, python3.8, python3.9]; Value '[invalidarch]' at 'compatibleArchitectures' failed to satisfy constraint: Member must satisfy constraint: [Member must satisfy enum value set: [x86_64, arm64]]"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "publish_layer_version_exc_partially_invalid_values": {
        "Error": {
          "Code": "ValidationException",
          "Message": "2 validation errors detected: Value '[invalidruntime, invalidruntime2, nodejs16.x]' at 'compatibleRuntimes' failed to satisfy constraint: Member must satisfy enum value set: [nodejs12.x, provided, nodejs16.x, nodejs14.x, ruby2.7, java11, dotnet6, go1.x, nodejs18.x, provided.al2, java8, java8.al2, dotnetcore3.1, python3.7, python3.8, python3.9]; Value '[invalidarch, x86_64]' at 'compatibleArchitectures' failed to satisfy constraint: Member must satisfy constraint: [Member must satisfy enum value set: [x86_64, arm64]]"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaLayer::test_layer_lifecycle": {
    "recorded-date": "22-11-2022, 20:22:40",
    "recorded-content": {
      "get_fn_result": {
        "Code": {
          "Location": "<location>",
          "RepositoryType": "S3"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": "<code-size>",
          "Description": "",
          "Environment": {
            "Variables": {}
          },
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "Handler": "handler.handler",
          "LastModified": "date",
          "LastUpdateStatus": "Successful",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:1>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.9",
          "State": "Active",
          "Timeout": 30,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_fn_config_result": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:1>",
        "CodeSize": "<code-size>",
        "Description": "",
        "Environment": {
          "Variables": {}
        },
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "FunctionName": "<function-name:1>",
        "Handler": "handler.handler",
        "LastModified": "date",
        "LastUpdateStatus": "Successful",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:1>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.9",
        "State": "Active",
        "Timeout": 30,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "$LATEST",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "publish_result": {
        "CompatibleArchitectures": [
          "x86_64"
        ],
        "CompatibleRuntimes": [
          "python3.9"
        ],
        "Content": {
          "CodeSha256": "<code-sha256:2>",
          "CodeSize": "<code-size>",
          "Location": "<layer-location>"
        },
        "CreatedDate": "date",
        "Description": "<description>",
        "LayerArn": "arn:aws:lambda:<region>:111111111111:layer:<resource:2>",
        "LayerVersionArn": "arn:aws:lambda:<region>:111111111111:layer:<resource:2>:1",
        "LicenseInfo": "<license-info>",
        "Version": 1,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "publish_result_2": {
        "CompatibleArchitectures": [
          "x86_64"
        ],
        "CompatibleRuntimes": [
          "python3.9"
        ],
        "Content": {
          "CodeSha256": "<code-sha256:2>",
          "CodeSize": "<code-size>",
          "Location": "<layer-location>"
        },
        "CreatedDate": "date",
        "Description": "<description>",
        "LayerArn": "arn:aws:lambda:<region>:111111111111:layer:<resource:2>",
        "LayerVersionArn": "arn:aws:lambda:<region>:111111111111:layer:<resource:2>:2",
        "LicenseInfo": "<license-info>",
        "Version": 2,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "update_fn_config": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:1>",
        "CodeSize": "<code-size>",
        "Description": "",
        "Environment": {
          "Variables": {}
        },
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "FunctionName": "<function-name:1>",
        "Handler": "handler.handler",
        "LastModified": "date",
        "LastUpdateStatus": "InProgress",
        "LastUpdateStatusReason": "The function is being created.",
        "LastUpdateStatusReasonCode": "Creating",
        "Layers": [
          {
            "Arn": "arn:aws:lambda:<region>:111111111111:layer:<resource:2>:1",
            "CodeSize": "<code-size>"
          }
        ],
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:2>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.9",
        "State": "Active",
        "Timeout": 30,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "$LATEST",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_fn_config": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:1>",
        "CodeSize": "<code-size>",
        "Description": "",
        "Environment": {
          "Variables": {}
        },
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "FunctionName": "<function-name:1>",
        "Handler": "handler.handler",
        "LastModified": "date",
        "LastUpdateStatus": "Successful",
        "Layers": [
          {
            "Arn": "arn:aws:lambda:<region>:111111111111:layer:<resource:2>:1",
            "CodeSize": "<code-size>"
          }
        ],
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:3>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.9",
        "State": "Active",
        "Timeout": 30,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "$LATEST",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_layer_ver_result": {
        "CompatibleArchitectures": [
          "x86_64"
        ],
        "CompatibleRuntimes": [
          "python3.9"
        ],
        "Content": {
          "CodeSha256": "<code-sha256:2>",
          "CodeSize": "<code-size>",
          "Location": "<layer-location>"
        },
        "CreatedDate": "date",
        "Description": "<description>",
        "LayerArn": "arn:aws:lambda:<region>:111111111111:layer:<resource:2>",
        "LayerVersionArn": "arn:aws:lambda:<region>:111111111111:layer:<resource:2>:1",
        "LicenseInfo": "<license-info>",
        "Version": 1,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_layer_by_arn_version": {
        "CompatibleArchitectures": [
          "x86_64"
        ],
        "CompatibleRuntimes": [
          "python3.9"
        ],
        "Content": {
          "CodeSha256": "<code-sha256:2>",
          "CodeSize": "<code-size>",
          "Location": "<layer-location>"
        },
        "CreatedDate": "date",
        "Description": "<description>",
        "LayerArn": "arn:aws:lambda:<region>:111111111111:layer:<resource:2>",
        "LayerVersionArn": "arn:aws:lambda:<region>:111111111111:layer:<resource:2>:1",
        "LicenseInfo": "<license-info>",
        "Version": 1,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "list_layer_versions_predelete": {
        "LayerVersions": [
          {
            "CompatibleArchitectures": [
              "x86_64"
            ],
            "CompatibleRuntimes": [
              "python3.9"
            ],
            "CreatedDate": "date",
            "Description": "<description>",
            "LayerVersionArn": "arn:aws:lambda:<region>:111111111111:layer:<resource:2>:2",
            "LicenseInfo": "<license-info>",
            "Version": 2
          },
          {
            "CompatibleArchitectures": [
              "x86_64"
            ],
            "CompatibleRuntimes": [
              "python3.9"
            ],
            "CreatedDate": "date",
            "Description": "<description>",
            "LayerVersionArn": "arn:aws:lambda:<region>:111111111111:layer:<resource:2>:1",
            "LicenseInfo": "<license-info>",
            "Version": 1
          }
        ],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "delete_layer_1": {
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 204
        }
      },
      "get_fn_config_postdelete": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:1>",
        "CodeSize": "<code-size>",
        "Description": "",
        "Environment": {
          "Variables": {}
        },
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "FunctionName": "<function-name:1>",
        "Handler": "handler.handler",
        "LastModified": "date",
        "LastUpdateStatus": "Successful",
        "Layers": [
          {
            "Arn": "arn:aws:lambda:<region>:111111111111:layer:<resource:2>:1",
            "CodeSize": "<code-size>"
          }
        ],
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:3>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.9",
        "State": "Active",
        "Timeout": 30,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "$LATEST",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "delete_layer_2": {
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 204
        }
      },
      "list_layer_versions_postdelete": {
        "LayerVersions": [],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "publish_result_3": {
        "CompatibleArchitectures": [
          "x86_64"
        ],
        "CompatibleRuntimes": [
          "python3.9"
        ],
        "Content": {
          "CodeSha256": "<code-sha256:2>",
          "CodeSize": "<code-size>",
          "Location": "<layer-location>"
        },
        "CreatedDate": "date",
        "Description": "<description>",
        "LayerArn": "arn:aws:lambda:<region>:111111111111:layer:<resource:2>",
        "LayerVersionArn": "arn:aws:lambda:<region>:111111111111:layer:<resource:2>:3",
        "LicenseInfo": "<license-info>",
        "Version": 3,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaLayer::test_layer_policy_exceptions": {
    "recorded-date": "16-01-2023, 14:08:15",
    "recorded-content": {
      "publish_result": {
        "CompatibleArchitectures": [
          "x86_64"
        ],
        "CompatibleRuntimes": [
          "python3.9"
        ],
        "Content": {
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": "<code-size>",
          "Location": "<layer-location>"
        },
        "CreatedDate": "date",
        "Description": "",
        "LayerArn": "arn:aws:lambda:<region>:111111111111:layer:<resource:1>",
        "LayerVersionArn": "arn:aws:lambda:<region>:111111111111:layer:<resource:1>:1",
        "Version": 1,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "layer_permission_nopolicy_get": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "No policy is associated with the given resource."
        },
        "Message": "No policy is associated with the given resource.",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "add_layer_permission_result": {
        "RevisionId": "<uuid:1>",
        "Statement": {
          "Sid": "s1",
          "Effect": "Allow",
          "Principal": "*",
          "Action": "lambda:GetLayerVersion",
          "Resource": "arn:aws:lambda:<region>:111111111111:layer:<resource:1>:1"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "layer_permission_action_invalid": {
        "Error": {
          "Code": "ValidationException",
          "Message": "1 validation error detected: Value '*' at 'action' failed to satisfy constraint: Member must satisfy regular expression pattern: lambda:GetLayerVersion"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "layer_permission_duplicate_statement": {
        "Error": {
          "Code": "ResourceConflictException",
          "Message": "The statement id (s1) provided already exists. Please provide a new statement id, or remove the existing statement."
        },
        "Type": "User",
        "message": "The statement id (s1) provided already exists. Please provide a new statement id, or remove the existing statement.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 409
        }
      },
      "layer_permission_wrong_revision": {
        "Error": {
          "Code": "PreconditionFailedException",
          "Message": "The Revision Id provided does not match the latest Revision Id. Call the GetLayerPolicy API to retrieve the latest Revision Id"
        },
        "Type": "User",
        "message": "The Revision Id provided does not match the latest Revision Id. Call the GetLayerPolicy API to retrieve the latest Revision Id",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 412
        }
      },
      "layer_permission_layername_doesnotexist_add": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Layer version arn:aws:lambda:<region>:111111111111:layer:<resource:1>-doesnotexist:1 does not exist."
        },
        "Message": "Layer version arn:aws:lambda:<region>:111111111111:layer:<resource:1>-doesnotexist:1 does not exist.",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "layer_permission_layername_doesnotexist_get": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Layer version arn:aws:lambda:<region>:111111111111:layer:<resource:1>-doesnotexist:1 does not exist."
        },
        "Message": "Layer version arn:aws:lambda:<region>:111111111111:layer:<resource:1>-doesnotexist:1 does not exist.",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "layer_permission_layername_doesnotexist_remove": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Layer version arn:aws:lambda:<region>:111111111111:layer:<resource:1>-doesnotexist:1 does not exist."
        },
        "Message": "Layer version arn:aws:lambda:<region>:111111111111:layer:<resource:1>-doesnotexist:1 does not exist.",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "layer_permission_layerversion_doesnotexist_add": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Layer version arn:aws:lambda:<region>:111111111111:layer:<resource:1>:2 does not exist."
        },
        "Message": "Layer version arn:aws:lambda:<region>:111111111111:layer:<resource:1>:2 does not exist.",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "layer_permission_layerversion_doesnotexist_get": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Layer version arn:aws:lambda:<region>:111111111111:layer:<resource:1>:2 does not exist."
        },
        "Message": "Layer version arn:aws:lambda:<region>:111111111111:layer:<resource:1>:2 does not exist.",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "layer_permission_layerversion_doesnotexist_remove": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Layer version arn:aws:lambda:<region>:111111111111:layer:<resource:1>:2 does not exist."
        },
        "Message": "Layer version arn:aws:lambda:<region>:111111111111:layer:<resource:1>:2 does not exist.",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "layer_permission_statementid_doesnotexist_remove": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "Statement doesnotexist is not found in resource policy."
        },
        "Message": "Statement doesnotexist is not found in resource policy.",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "layer_permission_wrong_revision_remove": {
        "Error": {
          "Code": "PreconditionFailedException",
          "Message": "The Revision Id provided does not match the latest Revision Id. Call the GetLayerPolicy API to retrieve the latest Revision Id"
        },
        "Type": "User",
        "message": "The Revision Id provided does not match the latest Revision Id. Call the GetLayerPolicy API to retrieve the latest Revision Id",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 412
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaLayer::test_layer_policy_lifecycle": {
    "recorded-date": "16-01-2023, 14:12:10",
    "recorded-content": {
      "publish_result": {
        "CompatibleArchitectures": [
          "x86_64"
        ],
        "CompatibleRuntimes": [
          "python3.9"
        ],
        "Content": {
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": "<code-size>",
          "Location": "<layer-location>"
        },
        "CreatedDate": "date",
        "Description": "",
        "LayerArn": "arn:aws:lambda:<region>:111111111111:layer:<resource:1>",
        "LayerVersionArn": "arn:aws:lambda:<region>:111111111111:layer:<resource:1>:1",
        "Version": 1,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "add_policy_s1": {
        "RevisionId": "<uuid:1>",
        "Statement": {
          "Sid": "s1",
          "Effect": "Allow",
          "Principal": "*",
          "Action": "lambda:GetLayerVersion",
          "Resource": "arn:aws:lambda:<region>:111111111111:layer:<resource:1>:1"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "get_layer_version_policy": {
        "Policy": {
          "Version": "2012-10-17",
          "Id": "default",
          "Statement": [
            {
              "Sid": "s1",
              "Effect": "Allow",
              "Principal": "*",
              "Action": "lambda:GetLayerVersion",
              "Resource": "arn:aws:lambda:<region>:111111111111:layer:<resource:1>:1"
            }
          ]
        },
        "RevisionId": "<uuid:1>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "add_policy_s2": {
        "RevisionId": "<uuid:2>",
        "Statement": {
          "Sid": "s2",
          "Effect": "Allow",
          "Principal": "*",
          "Action": "lambda:GetLayerVersion",
          "Resource": "arn:aws:lambda:<region>:111111111111:layer:<resource:1>:1"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "get_layer_version_policy_postadd2": {
        "Policy": {
          "Version": "2012-10-17",
          "Id": "default",
          "Statement": [
            {
              "Sid": "s1",
              "Effect": "Allow",
              "Principal": "*",
              "Action": "lambda:GetLayerVersion",
              "Resource": "arn:aws:lambda:<region>:111111111111:layer:<resource:1>:1"
            },
            {
              "Sid": "s2",
              "Effect": "Allow",
              "Principal": "*",
              "Action": "lambda:GetLayerVersion",
              "Resource": "arn:aws:lambda:<region>:111111111111:layer:<resource:1>:1"
            }
          ]
        },
        "RevisionId": "<uuid:2>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "remove_s2": {
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 204
        }
      },
      "get_layer_version_policy_postdeletes2": {
        "Policy": {
          "Version": "2012-10-17",
          "Id": "default",
          "Statement": [
            {
              "Sid": "s1",
              "Effect": "Allow",
              "Principal": "*",
              "Action": "lambda:GetLayerVersion",
              "Resource": "arn:aws:lambda:<region>:111111111111:layer:<resource:1>:1"
            }
          ]
        },
        "RevisionId": "<uuid:3>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaLayer::test_layer_s3_content": {
    "recorded-date": "21-11-2022, 16:55:19",
    "recorded-content": {
      "publish_layer_result": {
        "Content": {
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": "<code-size>",
          "Location": "<layer-location>"
        },
        "CreatedDate": "date",
        "Description": "",
        "LayerArn": "arn:aws:lambda:<region>:111111111111:layer:<resource:1>",
        "LayerVersionArn": "arn:aws:lambda:<region>:111111111111:layer:<resource:1>:1",
        "Version": 1,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaLayer::test_layer_function_exceptions": {
    "recorded-date": "26-01-2023, 22:16:37",
    "recorded-content": {
      "publish_result": {
        "CompatibleArchitectures": [
          "x86_64"
        ],
        "CompatibleRuntimes": [],
        "Content": {
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": "<code-size>",
          "Location": "<layer-location>"
        },
        "CreatedDate": "date",
        "Description": "",
        "LayerArn": "arn:aws:lambda:<region>:111111111111:layer:<resource:1>",
        "LayerVersionArn": "arn:aws:lambda:<region>:111111111111:layer:<resource:1>:1",
        "Version": 1,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "publish_result_2": {
        "CompatibleArchitectures": [
          "x86_64"
        ],
        "CompatibleRuntimes": [],
        "Content": {
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": "<code-size>",
          "Location": "<layer-location>"
        },
        "CreatedDate": "date",
        "Description": "",
        "LayerArn": "arn:aws:lambda:<region>:111111111111:layer:<resource:1>",
        "LayerVersionArn": "arn:aws:lambda:<region>:111111111111:layer:<resource:1>:2",
        "Version": 2,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "publish_result_3": {
        "CompatibleArchitectures": [
          "x86_64"
        ],
        "CompatibleRuntimes": [],
        "Content": {
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": "<code-size>",
          "Location": "<layer-location>"
        },
        "CreatedDate": "date",
        "Description": "",
        "LayerArn": "arn:aws:lambda:<region>:111111111111:layer:<resource:1>",
        "LayerVersionArn": "arn:aws:lambda:<region>:111111111111:layer:<resource:1>:3",
        "Version": 3,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "get_fn_result": {
        "Code": {
          "Location": "<location>",
          "RepositoryType": "S3"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:2>",
          "CodeSize": "<code-size>",
          "Description": "",
          "Environment": {
            "Variables": {}
          },
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "Handler": "handler.handler",
          "LastModified": "date",
          "LastUpdateStatus": "Successful",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:1>",
          "Role": "arn:aws:iam::111111111111:role/<resource:2>",
          "Runtime": "python3.9",
          "SnapStart": {
            "ApplyOn": "None",
            "OptimizationStatus": "Off"
          },
          "State": "Active",
          "Timeout": 30,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "two_layer_versions_single_function_exc": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "Two different versions of the same layer are not allowed to be referenced in the same function. arn:aws:lambda:<region>:111111111111:layer:<resource:1>:1 and arn:aws:lambda:<region>:111111111111:layer:<resource:1>:2 are versions of the same layer."
        },
        "Type": "User",
        "message": "Two different versions of the same layer are not allowed to be referenced in the same function. arn:aws:lambda:<region>:111111111111:layer:<resource:1>:1 and arn:aws:lambda:<region>:111111111111:layer:<resource:1>:2 are versions of the same layer.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "three_layer_versions_single_function_exc": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "Two different versions of the same layer are not allowed to be referenced in the same function. arn:aws:lambda:<region>:111111111111:layer:<resource:1>:1 and arn:aws:lambda:<region>:111111111111:layer:<resource:1>:2 are versions of the same layer."
        },
        "Type": "User",
        "message": "Two different versions of the same layer are not allowed to be referenced in the same function. arn:aws:lambda:<region>:111111111111:layer:<resource:1>:1 and arn:aws:lambda:<region>:111111111111:layer:<resource:1>:2 are versions of the same layer.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "two_identical_layer_versions_single_function_exc": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "Two different versions of the same layer are not allowed to be referenced in the same function. arn:aws:lambda:<region>:111111111111:layer:<resource:1>:1 and arn:aws:lambda:<region>:111111111111:layer:<resource:1>:1 are versions of the same layer."
        },
        "Type": "User",
        "message": "Two different versions of the same layer are not allowed to be referenced in the same function. arn:aws:lambda:<region>:111111111111:layer:<resource:1>:1 and arn:aws:lambda:<region>:111111111111:layer:<resource:1>:1 are versions of the same layer.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "add_nonexistent_layer_exc": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "Layer version arn:aws:lambda:<region>:111111111111:layer:doesnotexist:1 does not exist."
        },
        "Type": "User",
        "message": "Layer version arn:aws:lambda:<region>:111111111111:layer:doesnotexist:1 does not exist.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "add_nonexistent_layer_version_exc": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "Layer version arn:aws:lambda:<region>:111111111111:layer:<resource:1>:9 does not exist."
        },
        "Type": "User",
        "message": "Layer version arn:aws:lambda:<region>:111111111111:layer:<resource:1>:9 does not exist.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "add_layer_arn_without_version_exc": {
        "Error": {
          "Code": "ValidationException",
          "Message": "1 validation error detected: Value '[arn:aws:lambda:<region>:111111111111:layer:<resource:1>]' at 'layers' failed to satisfy constraint: Member must satisfy constraint: [Member must have length less than or equal to 140, Member must have length greater than or equal to 1, Member must satisfy regular expression pattern: (arn:[a-zA-Z0-9-]+:lambda:[a-zA-Z0-9-]+:\\d{12}:layer:[a-zA-Z0-9-_]+:[0-9]+)|(arn:[a-zA-Z0-9-]+:lambda:::awslayer:[a-zA-Z0-9-_]+), Member must not be null]"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "create_function_with_layer_in_different_region": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "Layers are not in the same region as the function. Layers are expected to be in region <region>."
        },
        "Type": "User",
        "message": "Layers are not in the same region as the function. Layers are expected to be in region <region>.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaImages::test_lambda_image_crud": {
    "recorded-date": "30-11-2022, 20:38:27",
    "recorded-content": {
      "create-image-response": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:1>",
        "CodeSize": 0,
        "Description": "",
        "Environment": {
          "Variables": {
            "CUSTOM_ENV": "test"
          }
        },
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "FunctionName": "<function-name:1>",
        "LastModified": "date",
        "MemorySize": 128,
        "PackageType": "Image",
        "RevisionId": "<uuid:1>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "State": "Pending",
        "StateReason": "The function is being created.",
        "StateReasonCode": "Creating",
        "Timeout": 3,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "$LATEST",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "get-function-code-response": {
        "Code": {
          "ImageUri": "<repo_uri>:latest",
          "RepositoryType": "ECR",
          "ResolvedImageUri": "<repo_uri>@sha256:<code-sha256:1>"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": 0,
          "Description": "",
          "Environment": {
            "Variables": {
              "CUSTOM_ENV": "test"
            }
          },
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "LastModified": "date",
          "LastUpdateStatus": "Successful",
          "MemorySize": 128,
          "PackageType": "Image",
          "RevisionId": "<uuid:2>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "State": "Active",
          "Timeout": 3,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get-function-config-response": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:1>",
        "CodeSize": 0,
        "Description": "",
        "Environment": {
          "Variables": {
            "CUSTOM_ENV": "test"
          }
        },
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "FunctionName": "<function-name:1>",
        "LastModified": "date",
        "LastUpdateStatus": "Successful",
        "MemorySize": 128,
        "PackageType": "Image",
        "RevisionId": "<uuid:2>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "State": "Active",
        "Timeout": 3,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "$LATEST",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "image-to-zipfile-error": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "Please provide ImageUri when updating a function with packageType Image."
        },
        "Type": "User",
        "message": "Please provide ImageUri when updating a function with packageType Image.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "update-function-code-response": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:2>",
        "CodeSize": 0,
        "Description": "",
        "Environment": {
          "Variables": {
            "CUSTOM_ENV": "test"
          }
        },
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "FunctionName": "<function-name:1>",
        "LastModified": "date",
        "LastUpdateStatus": "InProgress",
        "LastUpdateStatusReason": "The function is being created.",
        "LastUpdateStatusReasonCode": "Creating",
        "MemorySize": 128,
        "PackageType": "Image",
        "RevisionId": "<uuid:3>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "State": "Active",
        "Timeout": 3,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "$LATEST",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get-function-code-response-after-update": {
        "Code": {
          "ImageUri": "<repo_uri_2>:latest",
          "RepositoryType": "ECR",
          "ResolvedImageUri": "<repo_uri_2>@sha256:<code-sha256:2>"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:2>",
          "CodeSize": 0,
          "Description": "",
          "Environment": {
            "Variables": {
              "CUSTOM_ENV": "test"
            }
          },
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "LastModified": "date",
          "LastUpdateStatus": "Successful",
          "MemorySize": 128,
          "PackageType": "Image",
          "RevisionId": "<uuid:4>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "State": "Active",
          "Timeout": 3,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get-function-config-response-after-update": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:2>",
        "CodeSize": 0,
        "Description": "",
        "Environment": {
          "Variables": {
            "CUSTOM_ENV": "test"
          }
        },
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "FunctionName": "<function-name:1>",
        "LastModified": "date",
        "LastUpdateStatus": "Successful",
        "MemorySize": 128,
        "PackageType": "Image",
        "RevisionId": "<uuid:4>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "State": "Active",
        "Timeout": 3,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "$LATEST",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaImages::test_lambda_image_and_image_config_crud": {
    "recorded-date": "30-11-2022, 21:35:01",
    "recorded-content": {
      "create-image-with-config-response": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:1>",
        "CodeSize": 0,
        "Description": "",
        "Environment": {
          "Variables": {
            "CUSTOM_ENV": "test"
          }
        },
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "FunctionName": "<function-name:1>",
        "ImageConfigResponse": {
          "ImageConfig": {
            "Command": [
              "-c",
              "echo test"
            ],
            "EntryPoint": [
              "sh"
            ],
            "WorkingDirectory": "/app1"
          }
        },
        "LastModified": "date",
        "MemorySize": 128,
        "PackageType": "Image",
        "RevisionId": "<uuid:1>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "State": "Pending",
        "StateReason": "The function is being created.",
        "StateReasonCode": "Creating",
        "Timeout": 3,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "$LATEST",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "get-function-code-with-config-response": {
        "Code": {
          "ImageUri": "<repo_uri>:latest",
          "RepositoryType": "ECR",
          "ResolvedImageUri": "<repo_uri>@sha256:<code-sha256:1>"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": 0,
          "Description": "",
          "Environment": {
            "Variables": {
              "CUSTOM_ENV": "test"
            }
          },
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "ImageConfigResponse": {
            "ImageConfig": {
              "Command": [
                "-c",
                "echo test"
              ],
              "EntryPoint": [
                "sh"
              ],
              "WorkingDirectory": "/app1"
            }
          },
          "LastModified": "date",
          "LastUpdateStatus": "Successful",
          "MemorySize": 128,
          "PackageType": "Image",
          "RevisionId": "<uuid:2>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "State": "Active",
          "Timeout": 3,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get-function-config-with-config-response": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:1>",
        "CodeSize": 0,
        "Description": "",
        "Environment": {
          "Variables": {
            "CUSTOM_ENV": "test"
          }
        },
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "FunctionName": "<function-name:1>",
        "ImageConfigResponse": {
          "ImageConfig": {
            "Command": [
              "-c",
              "echo test"
            ],
            "EntryPoint": [
              "sh"
            ],
            "WorkingDirectory": "/app1"
          }
        },
        "LastModified": "date",
        "LastUpdateStatus": "Successful",
        "MemorySize": 128,
        "PackageType": "Image",
        "RevisionId": "<uuid:2>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "State": "Active",
        "Timeout": 3,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "$LATEST",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "update-function-code-response": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:1>",
        "CodeSize": 0,
        "Description": "",
        "Environment": {
          "Variables": {
            "CUSTOM_ENV": "test"
          }
        },
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "FunctionName": "<function-name:1>",
        "ImageConfigResponse": {
          "ImageConfig": {
            "Command": [
              "-c",
              "echo test1"
            ],
            "WorkingDirectory": "/app1"
          }
        },
        "LastModified": "date",
        "LastUpdateStatus": "InProgress",
        "LastUpdateStatusReason": "The function is being created.",
        "LastUpdateStatusReasonCode": "Creating",
        "MemorySize": 128,
        "PackageType": "Image",
        "RevisionId": "<uuid:3>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "State": "Active",
        "Timeout": 3,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "$LATEST",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get-function-code-response-after-update": {
        "Code": {
          "ImageUri": "<repo_uri>:latest",
          "RepositoryType": "ECR",
          "ResolvedImageUri": "<repo_uri>@sha256:<code-sha256:1>"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": 0,
          "Description": "",
          "Environment": {
            "Variables": {
              "CUSTOM_ENV": "test"
            }
          },
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "ImageConfigResponse": {
            "ImageConfig": {
              "Command": [
                "-c",
                "echo test1"
              ],
              "WorkingDirectory": "/app1"
            }
          },
          "LastModified": "date",
          "LastUpdateStatus": "Successful",
          "MemorySize": 128,
          "PackageType": "Image",
          "RevisionId": "<uuid:4>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "State": "Active",
          "Timeout": 3,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get-function-config-response-after-update": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:1>",
        "CodeSize": 0,
        "Description": "",
        "Environment": {
          "Variables": {
            "CUSTOM_ENV": "test"
          }
        },
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "FunctionName": "<function-name:1>",
        "ImageConfigResponse": {
          "ImageConfig": {
            "Command": [
              "-c",
              "echo test1"
            ],
            "WorkingDirectory": "/app1"
          }
        },
        "LastModified": "date",
        "LastUpdateStatus": "Successful",
        "MemorySize": 128,
        "PackageType": "Image",
        "RevisionId": "<uuid:4>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "State": "Active",
        "Timeout": 3,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "$LATEST",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "update-function-code-delete-imageconfig-response": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:1>",
        "CodeSize": 0,
        "Description": "",
        "Environment": {
          "Variables": {
            "CUSTOM_ENV": "test"
          }
        },
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "FunctionName": "<function-name:1>",
        "LastModified": "date",
        "LastUpdateStatus": "InProgress",
        "LastUpdateStatusReason": "The function is being created.",
        "LastUpdateStatusReasonCode": "Creating",
        "MemorySize": 128,
        "PackageType": "Image",
        "RevisionId": "<uuid:5>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "State": "Active",
        "Timeout": 3,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "$LATEST",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get-function-code-response-after-delete-imageconfig": {
        "Code": {
          "ImageUri": "<repo_uri>:latest",
          "RepositoryType": "ECR",
          "ResolvedImageUri": "<repo_uri>@sha256:<code-sha256:1>"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": 0,
          "Description": "",
          "Environment": {
            "Variables": {
              "CUSTOM_ENV": "test"
            }
          },
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "LastModified": "date",
          "LastUpdateStatus": "Successful",
          "MemorySize": 128,
          "PackageType": "Image",
          "RevisionId": "<uuid:6>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "State": "Active",
          "Timeout": 3,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get-function-config-response-after-delete-imageconfig": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:1>",
        "CodeSize": 0,
        "Description": "",
        "Environment": {
          "Variables": {
            "CUSTOM_ENV": "test"
          }
        },
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "FunctionName": "<function-name:1>",
        "LastModified": "date",
        "LastUpdateStatus": "Successful",
        "MemorySize": 128,
        "PackageType": "Image",
        "RevisionId": "<uuid:6>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "State": "Active",
        "Timeout": 3,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "$LATEST",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaImages::test_lambda_zip_file_to_image": {
    "recorded-date": "01-12-2022, 13:34:38",
    "recorded-content": {
      "create-image-response": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:1>",
        "CodeSize": "<code-size>",
        "Description": "",
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "FunctionName": "<function-name:1>",
        "Handler": "handler.handler",
        "LastModified": "date",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:1>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.9",
        "State": "Pending",
        "StateReason": "The function is being created.",
        "StateReasonCode": "Creating",
        "Timeout": 3,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "$LATEST",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "get-function-code-response": {
        "Code": {
          "Location": "<location>",
          "RepositoryType": "S3"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": "<code-size>",
          "Description": "",
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "Handler": "handler.handler",
          "LastModified": "date",
          "LastUpdateStatus": "Successful",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:2>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.9",
          "State": "Active",
          "Timeout": 3,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get-function-config-response": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:1>",
        "CodeSize": "<code-size>",
        "Description": "",
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "FunctionName": "<function-name:1>",
        "Handler": "handler.handler",
        "LastModified": "date",
        "LastUpdateStatus": "Successful",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:2>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.9",
        "State": "Active",
        "Timeout": 3,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "$LATEST",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "zipfile-to-image-error": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "Please don't provide ImageUri when updating a function with packageType Zip."
        },
        "Type": "User",
        "message": "Please don't provide ImageUri when updating a function with packageType Zip.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "get-function-code-response-after-update": {
        "Code": {
          "Location": "<location>",
          "RepositoryType": "S3"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": "<code-size>",
          "Description": "",
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "Handler": "handler.handler",
          "LastModified": "date",
          "LastUpdateStatus": "Successful",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:2>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.9",
          "State": "Active",
          "Timeout": 3,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get-function-config-response-after-update": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:1>",
        "CodeSize": "<code-size>",
        "Description": "",
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "FunctionName": "<function-name:1>",
        "Handler": "handler.handler",
        "LastModified": "date",
        "LastUpdateStatus": "Successful",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:2>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.9",
        "State": "Active",
        "Timeout": 3,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "$LATEST",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaAccountSettings::test_account_settings_total_code_size": {
    "recorded-date": "07-12-2022, 09:31:14",
    "recorded-content": {
      "total_code_size_diff_create_function": 276,
      "total_code_size_diff_update_function": 276,
      "total_code_size_diff_publish_layer": 169,
      "total_code_size_diff_publish_layer_version": 169
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaAccountSettings::test_account_settings_total_code_size_config_update": {
    "recorded-date": "07-12-2022, 09:32:59",
    "recorded-content": {
      "is_total_code_size_diff_create_function_more_than_200": true,
      "total_code_size_diff_update_function_configuration": 0,
      "is_total_code_size_diff_publish_version_after_config_update_more_than_200": true
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaEventInvokeConfig::test_lambda_eventinvokeconfig_lifecycle": {
    "recorded-date": "19-12-2022, 14:17:11",
    "recorded-content": {
      "put_invokeconfig_retries_0": {
        "DestinationConfig": {
          "OnFailure": {},
          "OnSuccess": {}
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:$LATEST",
        "LastModified": "datetime",
        "MaximumRetryAttempts": 0,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "put_invokeconfig_eventage_60": {
        "DestinationConfig": {
          "OnFailure": {},
          "OnSuccess": {}
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:$LATEST",
        "LastModified": "datetime",
        "MaximumEventAgeInSeconds": 60,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "update_invokeconfig_eventage_nochange": {
        "DestinationConfig": {
          "OnFailure": {},
          "OnSuccess": {}
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:$LATEST",
        "LastModified": "datetime",
        "MaximumEventAgeInSeconds": 60,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "update_invokeconfig_retries": {
        "DestinationConfig": {
          "OnFailure": {},
          "OnSuccess": {}
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:$LATEST",
        "LastModified": "datetime",
        "MaximumEventAgeInSeconds": 60,
        "MaximumRetryAttempts": 1,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_invokeconfig": {
        "DestinationConfig": {
          "OnFailure": {},
          "OnSuccess": {}
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:$LATEST",
        "LastModified": "datetime",
        "MaximumEventAgeInSeconds": 60,
        "MaximumRetryAttempts": 1,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_invokeconfig_latest": {
        "DestinationConfig": {
          "OnFailure": {},
          "OnSuccess": {}
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:$LATEST",
        "LastModified": "datetime",
        "MaximumEventAgeInSeconds": 60,
        "MaximumRetryAttempts": 1,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "list_single_invokeconfig": {
        "FunctionEventInvokeConfigs": [
          {
            "DestinationConfig": {
              "OnFailure": {},
              "OnSuccess": {}
            },
            "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:$LATEST",
            "LastModified": "datetime",
            "MaximumEventAgeInSeconds": 60,
            "MaximumRetryAttempts": 1
          }
        ],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "publish_version_result": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:1>",
        "CodeSize": "<code-size>",
        "Description": "",
        "Environment": {
          "Variables": {}
        },
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:1",
        "FunctionName": "<function-name:1>",
        "Handler": "handler.handler",
        "LastModified": "date",
        "LastUpdateStatus": "Successful",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:1>",
        "Role": "arn:aws:iam::111111111111:role/<resource:2>",
        "Runtime": "python3.9",
        "State": "Active",
        "Timeout": 30,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "1",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "get_invokeconfig_postpublish": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "The function arn:aws:lambda:<region>:111111111111:function:<function-name:1>:1 doesn't have an EventInvokeConfig"
        },
        "Message": "The function arn:aws:lambda:<region>:111111111111:function:<function-name:1>:1 doesn't have an EventInvokeConfig",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "put_published_invokeconfig": {
        "DestinationConfig": {
          "OnFailure": {},
          "OnSuccess": {}
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:1",
        "LastModified": "datetime",
        "MaximumEventAgeInSeconds": 120,
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "list_paging_nolimit_postdelete": {
        "FunctionEventInvokeConfigs": [
          {
            "DestinationConfig": {
              "OnFailure": {},
              "OnSuccess": {}
            },
            "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:1",
            "LastModified": "datetime",
            "MaximumEventAgeInSeconds": 120
          }
        ],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaPermissions::test_add_lambda_permission_optional_fields": {
    "recorded-date": "21-12-2022, 21:09:27",
    "recorded-content": {}
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaPermissions::test_lambda_permission_versioning": {
    "recorded-date": "21-12-2022, 20:35:15",
    "recorded-content": {
      "add_permission": {
        "Statement": {
          "Sid": "s3",
          "Effect": "Allow",
          "Principal": {
            "Service": "s3.amazonaws.com"
          },
          "Action": "lambda:InvokeFunction",
          "Resource": "arn:aws:lambda:<region>:111111111111:function:<resource:1>",
          "Condition": {
            "ArnLike": {
              "AWS:SourceArn": "arn:aws:s3:::<resource:2>"
            }
          }
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "get_policy": {
        "Policy": {
          "Version": "2012-10-17",
          "Id": "default",
          "Statement": [
            {
              "Sid": "s3",
              "Effect": "Allow",
              "Principal": {
                "Service": "s3.amazonaws.com"
              },
              "Action": "lambda:InvokeFunction",
              "Resource": "arn:aws:lambda:<region>:111111111111:function:<resource:1>",
              "Condition": {
                "ArnLike": {
                  "AWS:SourceArn": "arn:aws:s3:::<resource:2>"
                }
              }
            }
          ]
        },
        "RevisionId": "<uuid:1>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_policy_after_publishing_latest": {
        "Policy": {
          "Version": "2012-10-17",
          "Id": "default",
          "Statement": [
            {
              "Sid": "s3",
              "Effect": "Allow",
              "Principal": {
                "Service": "s3.amazonaws.com"
              },
              "Action": "lambda:InvokeFunction",
              "Resource": "arn:aws:lambda:<region>:111111111111:function:<resource:1>",
              "Condition": {
                "ArnLike": {
                  "AWS:SourceArn": "arn:aws:s3:::<resource:2>"
                }
              }
            }
          ]
        },
        "RevisionId": "<uuid:2>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_policy_after_publishing_new_version": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "The resource you requested does not exist."
        },
        "Message": "The resource you requested does not exist.",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "get_policy_after_adding_to_new_version": {
        "Policy": {
          "Version": "2012-10-17",
          "Id": "default",
          "Statement": [
            {
              "Sid": "s3",
              "Effect": "Allow",
              "Principal": {
                "Service": "s3.amazonaws.com"
              },
              "Action": "lambda:InvokeFunction",
              "Resource": "arn:aws:lambda:<region>:111111111111:function:<resource:1>",
              "Condition": {
                "ArnLike": {
                  "AWS:SourceArn": "arn:aws:s3:::<resource:2>"
                }
              }
            }
          ]
        },
        "RevisionId": "<uuid:2>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_policy_after_adding_2": {
        "Policy": {
          "Version": "2012-10-17",
          "Id": "default",
          "Statement": [
            {
              "Sid": "s3",
              "Effect": "Allow",
              "Principal": {
                "Service": "s3.amazonaws.com"
              },
              "Action": "lambda:InvokeFunction",
              "Resource": "arn:aws:lambda:<region>:111111111111:function:<resource:1>",
              "Condition": {
                "ArnLike": {
                  "AWS:SourceArn": "arn:aws:s3:::<resource:2>"
                }
              }
            },
            {
              "Sid": "s3_2",
              "Effect": "Allow",
              "Principal": {
                "Service": "s3.amazonaws.com"
              },
              "Action": "lambda:InvokeFunction",
              "Resource": "arn:aws:lambda:<region>:111111111111:function:<resource:1>",
              "Condition": {
                "ArnLike": {
                  "AWS:SourceArn": "arn:aws:s3:::<resource:2>"
                }
              }
            }
          ]
        },
        "RevisionId": "<uuid:3>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaPermissions::test_add_lambda_permission_fields": {
    "recorded-date": "22-12-2022, 15:46:35",
    "recorded-content": {
      "add_permission_principal_wildcard": {
        "Statement": {
          "Sid": "wilcard",
          "Effect": "Allow",
          "Principal": "*",
          "Action": "lambda:InvokeFunction",
          "Resource": "arn:aws:lambda:<region>:111111111111:function:<resource:1>",
          "Condition": {
            "StringEquals": {
              "AWS:SourceAccount": "111111111111"
            }
          }
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "add_permission_principal_service": {
        "Statement": {
          "Sid": "lambda",
          "Effect": "Allow",
          "Principal": {
            "Service": "lambda.amazonaws.com"
          },
          "Action": "lambda:InvokeFunction",
          "Resource": "arn:aws:lambda:<region>:111111111111:function:<resource:1>",
          "Condition": {
            "StringEquals": {
              "AWS:SourceAccount": "111111111111"
            }
          }
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "add_permission_principal_account": {
        "Statement": {
          "Sid": "account-id",
          "Effect": "Allow",
          "Principal": {
            "AWS": "arn:aws:iam::111111111111:<resource:2>"
          },
          "Action": "lambda:InvokeFunction",
          "Resource": "arn:aws:lambda:<region>:111111111111:function:<resource:1>"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "add_permission_principal_arn": {
        "Statement": {
          "Sid": "user-arn",
          "Effect": "Allow",
          "Principal": {
            "AWS": "<user_arn>"
          },
          "Action": "lambda:InvokeFunction",
          "Resource": "arn:aws:lambda:<region>:111111111111:function:<resource:1>",
          "Condition": {
            "StringEquals": {
              "AWS:SourceAccount": "111111111111"
            }
          }
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "add_permission_optional_fields": {
        "Statement": {
          "Sid": "urlPermission",
          "Effect": "Allow",
          "Principal": "*",
          "Action": "lambda:InvokeFunctionUrl",
          "Resource": "arn:aws:lambda:<region>:111111111111:function:<resource:1>",
          "Condition": {
            "StringEquals": {
              "lambda:FunctionUrlAuthType": "NONE",
              "aws:PrincipalOrgID": "o-1234567890",
              "AWS:SourceAccount": "111111111111"
            },
            "ArnLike": {
              "AWS:SourceArn": "arn:aws:s3:::<resource:3>"
            }
          }
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "add_permission_alexa_skill": {
        "Statement": {
          "Sid": "alexaSkill",
          "Effect": "Allow",
          "Principal": "*",
          "Action": "lambda:InvokeFunction",
          "Resource": "arn:aws:lambda:<region>:111111111111:function:<resource:1>",
          "Condition": {
            "StringEquals": {
              "lambda:EventSourceToken": "amzn1.ask.skill.xxxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
            }
          }
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaPermissions::test_lambda_permission_fn_versioning": {
    "recorded-date": "16-01-2023, 12:41:51",
    "recorded-content": {
      "add_permission": {
        "Statement": {
          "Sid": "s3",
          "Effect": "Allow",
          "Principal": {
            "Service": "s3.amazonaws.com"
          },
          "Action": "lambda:InvokeFunction",
          "Resource": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "Condition": {
            "ArnLike": {
              "AWS:SourceArn": "arn:aws:s3:::<resource:1>"
            }
          }
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "get_policy": {
        "Policy": {
          "Version": "2012-10-17",
          "Id": "default",
          "Statement": [
            {
              "Sid": "s3",
              "Effect": "Allow",
              "Principal": {
                "Service": "s3.amazonaws.com"
              },
              "Action": "lambda:InvokeFunction",
              "Resource": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
              "Condition": {
                "ArnLike": {
                  "AWS:SourceArn": "arn:aws:s3:::<resource:1>"
                }
              }
            }
          ]
        },
        "RevisionId": "<uuid:1>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "publish_version_result": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:1>",
        "CodeSize": "<code-size>",
        "Description": "",
        "Environment": {
          "Variables": {}
        },
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:1",
        "FunctionName": "<function-name:1>",
        "Handler": "handler.handler",
        "LastModified": "date",
        "LastUpdateStatus": "Successful",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:2>",
        "Role": "arn:aws:iam::111111111111:role/<resource:3>",
        "Runtime": "python3.9",
        "SnapStart": {
          "ApplyOn": "None",
          "OptimizationStatus": "Off"
        },
        "State": "Active",
        "Timeout": 30,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "1",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "get_function_result_after_publishing": {
        "Code": {
          "Location": "<location>",
          "RepositoryType": "S3"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": "<code-size>",
          "Description": "",
          "Environment": {
            "Variables": {}
          },
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "Handler": "handler.handler",
          "LastModified": "date",
          "LastUpdateStatus": "Successful",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:3>",
          "Role": "arn:aws:iam::111111111111:role/<resource:3>",
          "Runtime": "python3.9",
          "SnapStart": {
            "ApplyOn": "None",
            "OptimizationStatus": "Off"
          },
          "State": "Active",
          "Timeout": 30,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_policy_after_publishing_latest": {
        "Policy": {
          "Version": "2012-10-17",
          "Id": "default",
          "Statement": [
            {
              "Sid": "s3",
              "Effect": "Allow",
              "Principal": {
                "Service": "s3.amazonaws.com"
              },
              "Action": "lambda:InvokeFunction",
              "Resource": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
              "Condition": {
                "ArnLike": {
                  "AWS:SourceArn": "arn:aws:s3:::<resource:1>"
                }
              }
            }
          ]
        },
        "RevisionId": "<uuid:3>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_policy_after_publishing_new_version": {
        "Error": {
          "Code": "ResourceNotFoundException",
          "Message": "The resource you requested does not exist."
        },
        "Message": "The resource you requested does not exist.",
        "Type": "User",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 404
        }
      },
      "get_policy_version": {
        "Policy": {
          "Version": "2012-10-17",
          "Id": "default",
          "Statement": [
            {
              "Sid": "s3",
              "Effect": "Allow",
              "Principal": {
                "Service": "s3.amazonaws.com"
              },
              "Action": "lambda:InvokeFunction",
              "Resource": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:1",
              "Condition": {
                "ArnLike": {
                  "AWS:SourceArn": "arn:aws:s3:::<resource:1>"
                }
              }
            }
          ]
        },
        "RevisionId": "<uuid:4>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "create_alias_response": {
        "AliasArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:permission-alias",
        "Description": "",
        "FunctionVersion": "1",
        "Name": "permission-alias",
        "RevisionId": "<uuid:5>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "get_alias": {
        "AliasArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:permission-alias",
        "Description": "",
        "FunctionVersion": "1",
        "Name": "permission-alias",
        "RevisionId": "<uuid:5>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "add_permission_alias_revision_exception": {
        "Error": {
          "Code": "PreconditionFailedException",
          "Message": "The Revision Id provided does not match the latest Revision Id. Call the GetFunction/GetAlias API to retrieve the latest Revision Id"
        },
        "Type": "User",
        "message": "The Revision Id provided does not match the latest Revision Id. Call the GetFunction/GetAlias API to retrieve the latest Revision Id",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 412
        }
      },
      "get_policy_alias": {
        "Policy": {
          "Version": "2012-10-17",
          "Id": "default",
          "Statement": [
            {
              "Sid": "s3",
              "Effect": "Allow",
              "Principal": {
                "Service": "s3.amazonaws.com"
              },
              "Action": "lambda:InvokeFunction",
              "Resource": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:permission-alias",
              "Condition": {
                "ArnLike": {
                  "AWS:SourceArn": "arn:aws:s3:::<resource:1>"
                }
              }
            }
          ]
        },
        "RevisionId": "<uuid:6>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_policy_after_adding_to_new_version": {
        "Policy": {
          "Version": "2012-10-17",
          "Id": "default",
          "Statement": [
            {
              "Sid": "s3",
              "Effect": "Allow",
              "Principal": {
                "Service": "s3.amazonaws.com"
              },
              "Action": "lambda:InvokeFunction",
              "Resource": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
              "Condition": {
                "ArnLike": {
                  "AWS:SourceArn": "arn:aws:s3:::<resource:1>"
                }
              }
            }
          ]
        },
        "RevisionId": "<uuid:3>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_policy_after_adding_2": {
        "Policy": {
          "Version": "2012-10-17",
          "Id": "default",
          "Statement": [
            {
              "Sid": "s3",
              "Effect": "Allow",
              "Principal": {
                "Service": "s3.amazonaws.com"
              },
              "Action": "lambda:InvokeFunction",
              "Resource": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
              "Condition": {
                "ArnLike": {
                  "AWS:SourceArn": "arn:aws:s3:::<resource:1>"
                }
              }
            },
            {
              "Sid": "s3_2",
              "Effect": "Allow",
              "Principal": {
                "Service": "s3.amazonaws.com"
              },
              "Action": "lambda:InvokeFunction",
              "Resource": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
              "Condition": {
                "ArnLike": {
                  "AWS:SourceArn": "arn:aws:s3:::<resource:1>"
                }
              }
            }
          ]
        },
        "RevisionId": "<uuid:7>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaPermissions::test_lambda_permission_revisions": {
    "recorded-date": "23-12-2022, 09:38:35",
    "recorded-content": {
      "add_permission_revision_id_doesnotmatch": {
        "Error": {
          "Code": "PreconditionFailedException",
          "Message": "The Revision Id provided does not match the latest Revision Id. Call the GetFunction/GetAlias API to retrieve the latest Revision Id"
        },
        "Type": "User",
        "message": "The Revision Id provided does not match the latest Revision Id. Call the GetFunction/GetAlias API to retrieve the latest Revision Id",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 412
        }
      },
      "remove_permission_fn_revision_id_doesnotmatch": {
        "Error": {
          "Code": "PreconditionFailedException",
          "Message": "The Revision Id provided does not match the latest Revision Id. Call the GetFunction/GetAlias API to retrieve the latest Revision Id"
        },
        "Type": "User",
        "message": "The Revision Id provided does not match the latest Revision Id. Call the GetFunction/GetAlias API to retrieve the latest Revision Id",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 412
        }
      },
      "get_policy_after_publish_version": {
        "Policy": {
          "Version": "2012-10-17",
          "Id": "default",
          "Statement": [
            {
              "Sid": "s3",
              "Effect": "Allow",
              "Principal": {
                "Service": "s3.amazonaws.com"
              },
              "Action": "lambda:InvokeFunction",
              "Resource": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
              "Condition": {
                "ArnLike": {
                  "AWS:SourceArn": "arn:aws:s3:::<resource:1>"
                }
              }
            },
            {
              "Sid": "s3_2",
              "Effect": "Allow",
              "Principal": {
                "Service": "s3.amazonaws.com"
              },
              "Action": "lambda:InvokeFunction",
              "Resource": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
              "Condition": {
                "ArnLike": {
                  "AWS:SourceArn": "arn:aws:s3:::<resource:1>"
                }
              }
            }
          ]
        },
        "RevisionId": "<uuid:1>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_policy_v1_after_publish_version": {
        "Policy": {
          "Version": "2012-10-17",
          "Id": "default",
          "Statement": [
            {
              "Sid": "s3_2",
              "Effect": "Allow",
              "Principal": {
                "Service": "s3.amazonaws.com"
              },
              "Action": "lambda:InvokeFunction",
              "Resource": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:1",
              "Condition": {
                "ArnLike": {
                  "AWS:SourceArn": "arn:aws:s3:::<resource:1>"
                }
              }
            }
          ]
        },
        "RevisionId": "<uuid:2>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_function_fn8": {
        "Code": {
          "Location": "<location>",
          "RepositoryType": "S3"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": "<code-size>",
          "Description": "",
          "Environment": {
            "Variables": {}
          },
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "Handler": "handler.handler",
          "LastModified": "date",
          "LastUpdateStatus": "Successful",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:1>",
          "Role": "arn:aws:iam::111111111111:role/<resource:3>",
          "Runtime": "python3.9",
          "State": "Active",
          "Timeout": 30,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_function_fn8_v1": {
        "Code": {
          "Location": "<location>",
          "RepositoryType": "S3"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": "<code-size>",
          "Description": "",
          "Environment": {
            "Variables": {}
          },
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:1",
          "FunctionName": "<function-name:1>",
          "Handler": "handler.handler",
          "LastModified": "date",
          "LastUpdateStatus": "Successful",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:2>",
          "Role": "arn:aws:iam::111111111111:role/<resource:3>",
          "Runtime": "python3.8",
          "State": "Active",
          "Timeout": 30,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "1"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_function_fn9": {
        "Code": {
          "Location": "<location>",
          "RepositoryType": "S3"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": "<code-size>",
          "Description": "",
          "Environment": {
            "Variables": {}
          },
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "Handler": "handler.handler",
          "LastModified": "date",
          "LastUpdateStatus": "Successful",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:1>",
          "Role": "arn:aws:iam::111111111111:role/<resource:3>",
          "Runtime": "python3.9",
          "State": "Active",
          "Timeout": 30,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_function_fn9_v1": {
        "Code": {
          "Location": "<location>",
          "RepositoryType": "S3"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": "<code-size>",
          "Description": "",
          "Environment": {
            "Variables": {}
          },
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:1",
          "FunctionName": "<function-name:1>",
          "Handler": "handler.handler",
          "LastModified": "date",
          "LastUpdateStatus": "Successful",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:3>",
          "Role": "arn:aws:iam::111111111111:role/<resource:3>",
          "Runtime": "python3.8",
          "State": "Active",
          "Timeout": 30,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "1"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_policy_v1_after_add_permission9": {
        "Policy": {
          "Version": "2012-10-17",
          "Id": "default",
          "Statement": [
            {
              "Sid": "s3_2",
              "Effect": "Allow",
              "Principal": {
                "Service": "s3.amazonaws.com"
              },
              "Action": "lambda:InvokeFunction",
              "Resource": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:1",
              "Condition": {
                "ArnLike": {
                  "AWS:SourceArn": "arn:aws:s3:::<resource:1>"
                }
              }
            },
            {
              "Sid": "s3_3",
              "Effect": "Allow",
              "Principal": {
                "Service": "s3.amazonaws.com"
              },
              "Action": "lambda:InvokeFunction",
              "Resource": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:1",
              "Condition": {
                "ArnLike": {
                  "AWS:SourceArn": "arn:aws:s3:::<resource:1>"
                }
              }
            }
          ]
        },
        "RevisionId": "<uuid:3>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaRevisions::test_function_revisions_basic": {
    "recorded-date": "06-01-2023, 22:19:13",
    "recorded-content": {
      "create_function_response_rev1": {
        "CreateEventSourceMappingResponse": null,
        "CreateFunctionResponse": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": "<code-size>",
          "Description": "",
          "Environment": {
            "Variables": {}
          },
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "Handler": "index.handler",
          "LastModified": "date",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:1>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.9",
          "SnapStart": {
            "ApplyOn": "None",
            "OptimizationStatus": "Off"
          },
          "State": "Pending",
          "StateReason": "The function is being created.",
          "StateReasonCode": "Creating",
          "Timeout": 30,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST",
          "ResponseMetadata": {
            "HTTPHeaders": {},
            "HTTPStatusCode": 201
          }
        }
      },
      "get_function_response_rev2": {
        "Code": {
          "Location": "<location>",
          "RepositoryType": "S3"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": "<code-size>",
          "Description": "",
          "Environment": {
            "Variables": {}
          },
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "Handler": "index.handler",
          "LastModified": "date",
          "LastUpdateStatus": "Successful",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:2>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.9",
          "SnapStart": {
            "ApplyOn": "None",
            "OptimizationStatus": "Off"
          },
          "State": "Active",
          "Timeout": 30,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "update_function_revision_exception": {
        "Error": {
          "Code": "PreconditionFailedException",
          "Message": "The Revision Id provided does not match the latest Revision Id. Call the GetFunction/GetAlias API to retrieve the latest Revision Id"
        },
        "Type": "User",
        "message": "The Revision Id provided does not match the latest Revision Id. Call the GetFunction/GetAlias API to retrieve the latest Revision Id",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 412
        }
      },
      "update_function_code_response_rev3": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:1>",
        "CodeSize": "<code-size>",
        "Description": "",
        "Environment": {
          "Variables": {}
        },
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "FunctionName": "<function-name:1>",
        "Handler": "index.handler",
        "LastModified": "date",
        "LastUpdateStatus": "InProgress",
        "LastUpdateStatusReason": "The function is being created.",
        "LastUpdateStatusReasonCode": "Creating",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:3>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.9",
        "SnapStart": {
          "ApplyOn": "None",
          "OptimizationStatus": "Off"
        },
        "State": "Active",
        "Timeout": 30,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "$LATEST",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_function_response_rev4": {
        "Code": {
          "Location": "<location>",
          "RepositoryType": "S3"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": "<code-size>",
          "Description": "",
          "Environment": {
            "Variables": {}
          },
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "Handler": "index.handler",
          "LastModified": "date",
          "LastUpdateStatus": "Successful",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:4>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.9",
          "SnapStart": {
            "ApplyOn": "None",
            "OptimizationStatus": "Off"
          },
          "State": "Active",
          "Timeout": 30,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "update_function_configuration_revision_exception": {
        "Error": {
          "Code": "PreconditionFailedException",
          "Message": "The Revision Id provided does not match the latest Revision Id. Call the GetFunction/GetAlias API to retrieve the latest Revision Id"
        },
        "Type": "User",
        "message": "The Revision Id provided does not match the latest Revision Id. Call the GetFunction/GetAlias API to retrieve the latest Revision Id",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 412
        }
      },
      "update_function_configuration_response_rev5": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:1>",
        "CodeSize": "<code-size>",
        "Description": "",
        "Environment": {
          "Variables": {}
        },
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "FunctionName": "<function-name:1>",
        "Handler": "index.handler",
        "LastModified": "date",
        "LastUpdateStatus": "InProgress",
        "LastUpdateStatusReason": "The function is being created.",
        "LastUpdateStatusReasonCode": "Creating",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:5>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.8",
        "SnapStart": {
          "ApplyOn": "None",
          "OptimizationStatus": "Off"
        },
        "State": "Active",
        "Timeout": 30,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "$LATEST",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_function_response_rev6": {
        "Code": {
          "Location": "<location>",
          "RepositoryType": "S3"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": "<code-size>",
          "Description": "",
          "Environment": {
            "Variables": {}
          },
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "Handler": "index.handler",
          "LastModified": "date",
          "LastUpdateStatus": "Successful",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:6>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.8",
          "SnapStart": {
            "ApplyOn": "None",
            "OptimizationStatus": "Off"
          },
          "State": "Active",
          "Timeout": 30,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaRevisions::test_function_revisions_version_and_alias": {
    "recorded-date": "13-01-2023, 18:36:42",
    "recorded-content": {
      "create_function_response_rev1": {
        "CreateEventSourceMappingResponse": null,
        "CreateFunctionResponse": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": "<code-size>",
          "Description": "",
          "Environment": {
            "Variables": {}
          },
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "Handler": "handler.handler",
          "LastModified": "date",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:1>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.9",
          "SnapStart": {
            "ApplyOn": "None",
            "OptimizationStatus": "Off"
          },
          "State": "Pending",
          "StateReason": "The function is being created.",
          "StateReasonCode": "Creating",
          "Timeout": 30,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST",
          "ResponseMetadata": {
            "HTTPHeaders": {},
            "HTTPStatusCode": 201
          }
        }
      },
      "get_function_active_rev2": {
        "Code": {
          "Location": "<location>",
          "RepositoryType": "S3"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": "<code-size>",
          "Description": "",
          "Environment": {
            "Variables": {}
          },
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "Handler": "handler.handler",
          "LastModified": "date",
          "LastUpdateStatus": "Successful",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:2>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.9",
          "SnapStart": {
            "ApplyOn": "None",
            "OptimizationStatus": "Off"
          },
          "State": "Active",
          "Timeout": 30,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "publish_version_revision_exception": {
        "Error": {
          "Code": "PreconditionFailedException",
          "Message": "The Revision Id provided does not match the latest Revision Id. Call the GetFunction/GetAlias API to retrieve the latest Revision Id"
        },
        "Type": "User",
        "message": "The Revision Id provided does not match the latest Revision Id. Call the GetFunction/GetAlias API to retrieve the latest Revision Id",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 412
        }
      },
      "publish_version_response_rev_v1": {
        "Architectures": [
          "x86_64"
        ],
        "CodeSha256": "<code-sha256:1>",
        "CodeSize": "<code-size>",
        "Description": "",
        "Environment": {
          "Variables": {}
        },
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:1",
        "FunctionName": "<function-name:1>",
        "Handler": "handler.handler",
        "LastModified": "date",
        "LastUpdateStatus": "Successful",
        "MemorySize": 128,
        "PackageType": "Zip",
        "RevisionId": "<uuid:3>",
        "Role": "arn:aws:iam::111111111111:role/<resource:1>",
        "Runtime": "python3.9",
        "SnapStart": {
          "ApplyOn": "None",
          "OptimizationStatus": "Off"
        },
        "State": "Active",
        "Timeout": 30,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "1",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "get_function_published_version_rev_v2": {
        "Code": {
          "Location": "<location>",
          "RepositoryType": "S3"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": "<code-size>",
          "Description": "",
          "Environment": {
            "Variables": {}
          },
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:1",
          "FunctionName": "<function-name:1>",
          "Handler": "handler.handler",
          "LastModified": "date",
          "LastUpdateStatus": "Successful",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:3>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.9",
          "SnapStart": {
            "ApplyOn": "None",
            "OptimizationStatus": "Off"
          },
          "State": "Active",
          "Timeout": 30,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "1"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_function_latest_rev3": {
        "Code": {
          "Location": "<location>",
          "RepositoryType": "S3"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": "<code-size>",
          "Description": "",
          "Environment": {
            "Variables": {}
          },
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "Handler": "handler.handler",
          "LastModified": "date",
          "LastUpdateStatus": "Successful",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:4>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.9",
          "SnapStart": {
            "ApplyOn": "None",
            "OptimizationStatus": "Off"
          },
          "State": "Active",
          "Timeout": 30,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "create_alias_response_rev_a1": {
        "AliasArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:revision_alias",
        "Description": "",
        "FunctionVersion": "1",
        "Name": "revision_alias",
        "RevisionId": "<uuid:5>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "get_function_latest_rev4": {
        "Code": {
          "Location": "<location>",
          "RepositoryType": "S3"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": "<code-size>",
          "Description": "",
          "Environment": {
            "Variables": {}
          },
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "Handler": "handler.handler",
          "LastModified": "date",
          "LastUpdateStatus": "Successful",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:4>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.9",
          "SnapStart": {
            "ApplyOn": "None",
            "OptimizationStatus": "Off"
          },
          "State": "Active",
          "Timeout": 30,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "get_function_published_version_rev_v3": {
        "Code": {
          "Location": "<location>",
          "RepositoryType": "S3"
        },
        "Configuration": {
          "Architectures": [
            "x86_64"
          ],
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": "<code-size>",
          "Description": "",
          "Environment": {
            "Variables": {}
          },
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:1",
          "FunctionName": "<function-name:1>",
          "Handler": "handler.handler",
          "LastModified": "date",
          "LastUpdateStatus": "Successful",
          "MemorySize": 128,
          "PackageType": "Zip",
          "RevisionId": "<uuid:3>",
          "Role": "arn:aws:iam::111111111111:role/<resource:1>",
          "Runtime": "python3.9",
          "SnapStart": {
            "ApplyOn": "None",
            "OptimizationStatus": "Off"
          },
          "State": "Active",
          "Timeout": 30,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "1"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "update_alias_revision_exception": {
        "Error": {
          "Code": "PreconditionFailedException",
          "Message": "The Revision Id provided does not match the latest Revision Id. Call the GetFunction/GetAlias API to retrieve the latest Revision Id"
        },
        "Type": "User",
        "message": "The Revision Id provided does not match the latest Revision Id. Call the GetFunction/GetAlias API to retrieve the latest Revision Id",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 412
        }
      },
      "update_alias_response_rev_a2": {
        "AliasArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>:revision_alias",
        "Description": "something changed",
        "FunctionVersion": "1",
        "Name": "revision_alias",
        "RevisionId": "<uuid:6>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaRevisions::test_function_revisions_permissions": {
    "recorded-date": "06-01-2023, 22:30:27",
    "recorded-content": {
      "add_permission_revision_exception": {
        "Error": {
          "Code": "PreconditionFailedException",
          "Message": "The Revision Id provided does not match the latest Revision Id. Call the GetFunction/GetAlias API to retrieve the latest Revision Id"
        },
        "Type": "User",
        "message": "The Revision Id provided does not match the latest Revision Id. Call the GetFunction/GetAlias API to retrieve the latest Revision Id",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 412
        }
      },
      "add_permission_response": {
        "Statement": {
          "Sid": "s3",
          "Effect": "Allow",
          "Principal": {
            "Service": "s3.amazonaws.com"
          },
          "Action": "lambda:InvokeFunction",
          "Resource": "arn:aws:lambda:<region>:111111111111:function:<resource:1>"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 201
        }
      },
      "get_policy_response_rev3": {
        "Policy": {
          "Version": "2012-10-17",
          "Id": "default",
          "Statement": [
            {
              "Sid": "s3",
              "Effect": "Allow",
              "Principal": {
                "Service": "s3.amazonaws.com"
              },
              "Action": "lambda:InvokeFunction",
              "Resource": "arn:aws:lambda:<region>:111111111111:function:<resource:1>"
            }
          ]
        },
        "RevisionId": "<uuid:1>",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "remove_permission_revision_exception": {
        "Error": {
          "Code": "PreconditionFailedException",
          "Message": "The Revision Id provided does not match the latest Revision Id. Call the GetFunction/GetAlias API to retrieve the latest Revision Id"
        },
        "Type": "User",
        "message": "The Revision Id provided does not match the latest Revision Id. Call the GetFunction/GetAlias API to retrieve the latest Revision Id",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 412
        }
      },
      "remove_permission_response": {
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 204
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_api.py::TestLambdaLayer::test_layer_function_quota_exception": {
    "recorded-date": "26-01-2023, 22:52:19",
    "recorded-content": {
      "create_function_with_six_layers": {
        "Error": {
          "Code": "InvalidParameterValueException",
          "Message": "Cannot reference more than 5 layers."
        },
        "Type": "User",
        "message": "Cannot reference more than 5 layers.",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      }
    }
  }
}
