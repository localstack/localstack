{
  "tests/integration/awslambda/test_lambda.py::TestLambdaAPI::test_lambda_asynchronous_invocations": {
    "put_function_event_invoke_config": {
      "ResponseMetadata": {
        "HTTPStatusCode": 200,
        "HTTPHeaders": {
          "content-type": "application/json"
        }
      },
      "LastModified": "<date>",
      "FunctionArn": "<arn>",
      "MaximumRetryAttempts": 2,
      "MaximumEventAgeInSeconds": 123,
      "DestinationConfig": {
        "OnSuccess": {
          "Destination": "<arn>"
        },
        "OnFailure": {
          "Destination": "<arn>"
        }
      }
    },
    "put_function_event_invoke_config_overwritemaxeventage": {
      "ResponseMetadata": {
        "HTTPStatusCode": 200,
        "HTTPHeaders": {
          "content-type": "application/json"
        }
      },
      "LastModified": "<date>",
      "FunctionArn": "<arn>",
      "MaximumRetryAttempts": 2,
      "DestinationConfig": {
        "OnSuccess": {
          "Destination": "<arn>"
        },
        "OnFailure": {
          "Destination": "<arn>"
        }
      }
    },
    "put_function_event_invoke_config_maxattempt1": {
      "ResponseMetadata": {
        "HTTPStatusCode": 200,
        "HTTPHeaders": {
          "content-type": "application/json"
        }
      },
      "LastModified": "<date>",
      "FunctionArn": "<arn>",
      "MaximumRetryAttempts": 1,
      "DestinationConfig": {
        "OnSuccess": {
          "Destination": "<arn>"
        },
        "OnFailure": {
          "Destination": "<arn>"
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda.py::TestLambdaAPI::test_add_lambda_permission_aws": {
    "create_lambda": {
      "ResponseMetadata": {
        "HTTPStatusCode": 201,
        "HTTPHeaders": {
          "content-type": "application/json"
        }
      },
      "FunctionName": "<function-name>",
      "FunctionArn": "<arn>",
      "Runtime": "python3.6",
      "Role": "<arn>",
      "Handler": "handler.handler",
      "CodeSize": 264,
      "Description": "",
      "Timeout": 30,
      "MemorySize": 128,
      "LastModified": "<date>",
      "CodeSha256": "<sha-256>",
      "Version": "$LATEST",
      "Environment": {
        "Variables": {}
      },
      "TracingConfig": {
        "Mode": "PassThrough"
      },
      "RevisionId": "<uuid>",
      "State": "Pending",
      "StateReason": "The function is being created.",
      "StateReasonCode": "Creating",
      "PackageType": "Zip",
      "Architectures": [
        "x86_64"
      ],
      "EphemeralStorage": {
        "Size": 512
      }
    },
    "add_permission": {
      "ResponseMetadata": {
        "HTTPStatusCode": 201,
        "HTTPHeaders": {
          "content-type": "application/json"
        }
      },
      "Statement": {
        "Sid": "s3",
        "Effect": "Allow",
        "Principal": {
          "Service": "s3.amazonaws.com"
        },
        "Action": "lambda:InvokeFunction",
        "Resource": "<arn>",
        "Condition": {
          "ArnLike": {
            "AWS:SourceArn": "<arn>"
          }
        }
      }
    },
    "get_policy": {
      "ResponseMetadata": {
        "HTTPStatusCode": 200,
        "HTTPHeaders": {
          "content-type": "application/json"
        }
      },
      "Policy": {
        "Version": "2012-10-17",
        "Id": "default",
        "Statement": [
          {
            "Sid": "s3",
            "Effect": "Allow",
            "Principal": {
              "Service": "s3.amazonaws.com"
            },
            "Action": "lambda:InvokeFunction",
            "Resource": "<arn>",
            "Condition": {
              "ArnLike": {
                "AWS:SourceArn": "<arn>"
              }
            }
          }
        ]
      },
      "RevisionId": "<uuid>"
    }
  }
}
