{
  "tests/integration/awslambda/test_lambda_destinations.py::TestLambdaDestinationSqs::test_assess_lambda_destination_invocation[Success-payload0]": {
    "recorded-date": "01-09-2022, 09:00:22",
    "recorded-content": {
      "put_function_event_invoke_config": {
        "DestinationConfig": {
          "OnFailure": {
            "Destination": "arn:aws:sqs:<region>:111111111111:<resource:1>"
          },
          "OnSuccess": {
            "Destination": "arn:aws:sqs:<region>:111111111111:<resource:1>"
          }
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<resource:2>:$LATEST",
        "LastModified": "datetime",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "receive_message_result": {
        "Messages": [
          {
            "Body": {
              "version": "1.0",
              "timestamp": "date",
              "requestContext": {
                "requestId": "<uuid:1>",
                "functionArn": "arn:aws:lambda:<region>:111111111111:function:<resource:2>:$LATEST",
                "condition": "Success",
                "approximateInvokeCount": 1
              },
              "requestPayload": {},
              "responseContext": {
                "statusCode": 200,
                "executedVersion": "$LATEST"
              },
              "responsePayload": {
                "event": {},
                "context": {
                  "invoked_function_arn": "arn:aws:lambda:<region>:111111111111:function:<resource:2>",
                  "function_version": "$LATEST",
                  "function_name": "<resource:2>",
                  "memory_limit_in_mb": "128",
                  "aws_request_id": "<uuid:1>",
                  "log_group_name": "/aws/lambda/<resource:2>",
                  "log_stream_name": "<log-stream-name:1>",
                  "client_context": null
                }
              }
            },
            "MD5OfBody": "<m-d5-of-body:1>",
            "MessageId": "<uuid:2>",
            "ReceiptHandle": "<receipt-handle:1>"
          }
        ],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_destinations.py::TestLambdaDestinationSqs::test_assess_lambda_destination_invocation[RetriesExhausted-payload1]": {
    "recorded-date": "01-09-2022, 09:03:35",
    "recorded-content": {
      "put_function_event_invoke_config": {
        "DestinationConfig": {
          "OnFailure": {
            "Destination": "arn:aws:sqs:<region>:111111111111:<resource:1>"
          },
          "OnSuccess": {
            "Destination": "arn:aws:sqs:<region>:111111111111:<resource:1>"
          }
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<resource:2>:$LATEST",
        "LastModified": "datetime",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "receive_message_result": {
        "Messages": [
          {
            "Body": {
              "version": "1.0",
              "timestamp": "date",
              "requestContext": {
                "requestId": "<uuid:1>",
                "functionArn": "arn:aws:lambda:<region>:111111111111:function:<resource:2>:$LATEST",
                "condition": "RetriesExhausted",
                "approximateInvokeCount": 3
              },
              "requestPayload": {
                "raise_error": 1
              },
              "responseContext": {
                "statusCode": 200,
                "executedVersion": "$LATEST",
                "functionError": "Unhandled"
              },
              "responsePayload": {
                "errorMessage": "Test exception (this is intentional)",
                "errorType": "Exception",
                "stackTrace": [
                  "  File \"/var/task/handler.py\", line 54, in handler\n    raise Exception(\"Test exception (this is intentional)\")\n"
                ]
              }
            },
            "MD5OfBody": "<m-d5-of-body:1>",
            "MessageId": "<uuid:2>",
            "ReceiptHandle": "<receipt-handle:1>"
          }
        ],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_destinations.py::TestLambdaDestinationSqs::test_assess_lambda_destination_invocation[payload0]": {
    "recorded-date": "01-09-2022, 09:09:20",
    "recorded-content": {
      "put_function_event_invoke_config": {
        "DestinationConfig": {
          "OnFailure": {
            "Destination": "arn:aws:sqs:<region>:111111111111:<resource:1>"
          },
          "OnSuccess": {
            "Destination": "arn:aws:sqs:<region>:111111111111:<resource:1>"
          }
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<resource:2>:$LATEST",
        "LastModified": "datetime",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "receive_message_result": {
        "Messages": [
          {
            "Body": {
              "version": "1.0",
              "timestamp": "date",
              "requestContext": {
                "requestId": "<uuid:1>",
                "functionArn": "arn:aws:lambda:<region>:111111111111:function:<resource:2>:$LATEST",
                "condition": "Success",
                "approximateInvokeCount": 1
              },
              "requestPayload": {},
              "responseContext": {
                "statusCode": 200,
                "executedVersion": "$LATEST"
              },
              "responsePayload": {
                "event": {},
                "context": {
                  "invoked_function_arn": "arn:aws:lambda:<region>:111111111111:function:<resource:2>",
                  "function_version": "$LATEST",
                  "function_name": "<resource:2>",
                  "memory_limit_in_mb": "128",
                  "aws_request_id": "<uuid:1>",
                  "log_group_name": "/aws/lambda/<resource:2>",
                  "log_stream_name": "<log-stream-name:1>",
                  "client_context": null
                }
              }
            },
            "MD5OfBody": "<m-d5-of-body:1>",
            "MessageId": "<uuid:2>",
            "ReceiptHandle": "<receipt-handle:1>"
          }
        ],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_destinations.py::TestLambdaDestinationSqs::test_assess_lambda_destination_invocation[payload1]": {
    "recorded-date": "01-09-2022, 09:12:37",
    "recorded-content": {
      "put_function_event_invoke_config": {
        "DestinationConfig": {
          "OnFailure": {
            "Destination": "arn:aws:sqs:<region>:111111111111:<resource:1>"
          },
          "OnSuccess": {
            "Destination": "arn:aws:sqs:<region>:111111111111:<resource:1>"
          }
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<resource:2>:$LATEST",
        "LastModified": "datetime",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "receive_message_result": {
        "Messages": [
          {
            "Body": {
              "version": "1.0",
              "timestamp": "date",
              "requestContext": {
                "requestId": "<uuid:1>",
                "functionArn": "arn:aws:lambda:<region>:111111111111:function:<resource:2>:$LATEST",
                "condition": "RetriesExhausted",
                "approximateInvokeCount": 3
              },
              "requestPayload": {
                "raise_error": 1
              },
              "responseContext": {
                "statusCode": 200,
                "executedVersion": "$LATEST",
                "functionError": "Unhandled"
              },
              "responsePayload": {
                "errorMessage": "Test exception (this is intentional)",
                "errorType": "Exception",
                "stackTrace": [
                  "  File \"/var/task/handler.py\", line 54, in handler\n    raise Exception(\"Test exception (this is intentional)\")\n"
                ]
              }
            },
            "MD5OfBody": "<m-d5-of-body:1>",
            "MessageId": "<uuid:2>",
            "ReceiptHandle": "<receipt-handle:1>"
          }
        ],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  },
  "tests/integration/awslambda/test_lambda_destinations.py::TestLambdaDLQ::test_dead_letter_queue": {
    "recorded-date": "01-09-2022, 09:57:06",
    "recorded-content": {
      "create_lambda_with_dlq": {
        "CreateEventSourceMappingResponse": null,
        "CreateFunctionResponse": {
          "CodeSha256": "<code-sha256:1>",
          "CodeSize": 17481634,
          "DeadLetterConfig": {
            "TargetArn": "arn:aws:sqs:<region>:111111111111:<resource:1>"
          },
          "Description": "",
          "Environment": {
            "Variables": {}
          },
          "EphemeralStorage": {
            "Size": 512
          },
          "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
          "FunctionName": "<function-name:1>",
          "Handler": "handler.handler",
          "LastModified": "date",
          "MemorySize": 128,
          "PackageType": "Zip",
          "ResponseMetadata": {
            "HTTPHeaders": {},
            "HTTPStatusCode": 201
          },
          "RevisionId": "<uuid:1>",
          "Role": "arn:aws:iam::111111111111:role/<resource:2>",
          "Runtime": "python3.9",
          "State": "Pending",
          "StateReason": "The function is being created.",
          "StateReasonCode": "Creating",
          "Timeout": 30,
          "TracingConfig": {
            "Mode": "PassThrough"
          },
          "Version": "$LATEST"
        }
      },
      "receive_result": {
        "Messages": [
          {
            "Body": {
              "raise_error": 1
            },
            "MD5OfBody": "ba08269cbd0ce515889bfba6593731e1",
            "MD5OfMessageAttributes": "<m-d5-of-message-attributes:1>",
            "MessageAttributes": {
              "ErrorCode": {
                "DataType": "Number",
                "StringValue": "200"
              },
              "ErrorMessage": {
                "DataType": "String",
                "StringValue": "Test exception (this is intentional)"
              },
              "RequestID": {
                "DataType": "String",
                "StringValue": "<request-id:1>"
              }
            },
            "MessageId": "<uuid:2>",
            "ReceiptHandle": "<receipt-handle:1>"
          }
        ],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      },
      "delete_dlq": {
        "CodeSha256": "<code-sha256:1>",
        "CodeSize": 17481634,
        "DeadLetterConfig": {
          "TargetArn": "arn:aws:sqs:<region>:111111111111:<resource:1>"
        },
        "Description": "",
        "Environment": {
          "Variables": {}
        },
        "EphemeralStorage": {
          "Size": 512
        },
        "FunctionArn": "arn:aws:lambda:<region>:111111111111:function:<function-name:1>",
        "FunctionName": "<function-name:1>",
        "Handler": "handler.handler",
        "LastModified": "date",
        "LastUpdateStatus": "InProgress",
        "LastUpdateStatusReason": "The function is being created.",
        "LastUpdateStatusReasonCode": "Creating",
        "MemorySize": 128,
        "PackageType": "Zip",
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        },
        "RevisionId": "<uuid:3>",
        "Role": "arn:aws:iam::111111111111:role/<resource:2>",
        "Runtime": "python3.9",
        "State": "Active",
        "Timeout": 30,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Version": "$LATEST"
      },
      "invoke_result": {
        "ExecutedVersion": "$LATEST",
        "FunctionError": "Unhandled",
        "LogResult": "<log-result:1>",
        "Payload": {
          "errorMessage": "Test exception (this is intentional)",
          "errorType": "Exception",
          "requestId": "<uuid:4>",
          "stackTrace": [
            "  File \"/var/task/handler.py\", line 54, in handler\n    raise Exception(\"Test exception (this is intentional)\")\n"
          ]
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        },
        "StatusCode": 200
      },
      "log_result": {
        "log_result": [
          "START RequestId: <uuid:4> Version: $LATEST",
          "Lambda log message - print function",
          "[INFO]\tdate\t<uuid:4>\tLambda log message - logging module",
          "[ERROR] Exception: Test exception (this is intentional)",
          "Traceback (most recent call last):",
          "\u00a0\u00a0File \"/var/task/handler.py\", line 54, in handler",
          "\u00a0\u00a0\u00a0\u00a0raise Exception(\"Test exception (this is intentional)\")END RequestId: <uuid:4>"
        ]
      }
    }
  }
}
