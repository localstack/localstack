{
  "tests/integration/s3/test_s3_notifications_lambda.py::TestS3NotificationsToLambda::test_create_object_put_via_dynamodb": {
    "recorded-date": "20-09-2022, 14:23:56",
    "recorded-content": {
      "table_content": {
        "awsRegion": "<region>",
        "eventName": "ObjectCreated:Put",
        "eventSource": "aws:s3",
        "eventTime": "date",
        "eventVersion": "2.1",
        "requestParameters": {
          "sourceIPAddress": "<ip-address:1>"
        },
        "responseElements": {
          "x-amz-id-2": "amz-id",
          "x-amz-request-id": "amz-request-id"
        },
        "s3": {
          "bucket": {
            "arn": "arn:aws:s3:::<bucket-name:1>",
            "name": "<bucket-name:1>",
            "ownerIdentity": {
              "principalId": "<principal-id:1>"
            }
          },
          "configurationId": "<config-id:1>",
          "object": {
            "eTag": "e9fb1ed1d5eaa36781088aae37acffbd",
            "key": "<object-key:1>",
            "sequencer": "sequencer",
            "size": "11"
          },
          "s3SchemaVersion": "1.0"
        },
        "userIdentity": {
          "principalId": "<principal-id:2>"
        }
      }
    }
  },
  "tests/integration/s3/test_s3_notifications_lambda.py::TestS3NotificationsToLambda::test_create_object_by_presigned_request_via_dynamodb": {
    "recorded-date": "20-09-2022, 15:08:43",
    "recorded-content": {
      "items": [
        {
          "uuid": "<uuid>",
          "data": {
            "s3": {
              "bucket": {
                "name": "<bucket-name:1>",
                "arn": "arn:aws:s3:::<bucket-name:1>",
                "ownerIdentity": {
                  "principalId": "<principal-id:1>"
                }
              },
              "configurationId": "<config-id:1>",
              "s3SchemaVersion": "1.0",
              "object": {
                "eTag": "232d7472010db416df31c55fdc0490a5",
                "size": "16",
                "key": "<object-key:1>",
                "sequencer": "sequencer"
              }
            },
            "awsRegion": "<region>",
            "eventVersion": "2.1",
            "responseElements": {
              "x-amz-id-2": "amz-id",
              "x-amz-request-id": "amz-request-id"
            },
            "eventSource": "aws:s3",
            "eventTime": "date",
            "requestParameters": {
              "sourceIPAddress": "<ip-address:1>"
            },
            "eventName": "ObjectCreated:Post",
            "userIdentity": {
              "principalId": "<principal-id:2>"
            }
          }
        },
        {
          "uuid": "<uuid>",
          "data": {
            "s3": {
              "bucket": {
                "name": "<bucket-name:1>",
                "arn": "arn:aws:s3:::<bucket-name:1>",
                "ownerIdentity": {
                  "principalId": "<principal-id:1>"
                }
              },
              "configurationId": "<config-id:1>",
              "s3SchemaVersion": "1.0",
              "object": {
                "eTag": "b0d833b208acd18be70a25c9323f210d",
                "size": "16",
                "key": "<object-key:1>",
                "sequencer": "sequencer"
              }
            },
            "awsRegion": "<region>",
            "eventVersion": "2.1",
            "responseElements": {
              "x-amz-id-2": "amz-id",
              "x-amz-request-id": "amz-request-id"
            },
            "eventSource": "aws:s3",
            "eventTime": "date",
            "requestParameters": {
              "sourceIPAddress": "<ip-address:1>"
            },
            "eventName": "ObjectCreated:Put",
            "userIdentity": {
              "principalId": "<principal-id:2>"
            }
          }
        }
      ]
    }
  },
  "tests/integration/s3/test_s3_notifications_lambda.py::TestS3NotificationsToLambda::test_invalid_lambda_arn": {
    "recorded-date": "05-05-2023, 16:10:00",
    "recorded-content": {
      "invalid_not_skip": {
        "Error": {
          "ArgumentName": "CloudFunction",
          "ArgumentValue": "invalid-queue",
          "Code": "InvalidArgument",
          "Message": "The ARN could not be parsed"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "invalid_skip": {
        "Error": {
          "ArgumentName": "CloudFunction",
          "ArgumentValue": "invalid-queue",
          "Code": "InvalidArgument",
          "Message": "The ARN could not be parsed"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "lambda-does-not-exist": {
        "Error": {
          "ArgumentName1": "arn:aws:lambda:<region>:111111111111:function:my-lambda, null",
          "ArgumentValue1": "Not authorized to invoke function [arn:aws:lambda:<region>:111111111111:function:my-lambda]",
          "Code": "InvalidArgument",
          "Message": "Unable to validate the following destination configurations"
        },
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 400
        }
      },
      "skip_destination_validation": {
        "LambdaFunctionConfigurations": [
          {
            "Events": [
              "s3:ObjectCreated:*"
            ],
            "Id": "id123",
            "LambdaFunctionArn": "arn:aws:lambda:<region>:111111111111:function:my-lambda"
          }
        ],
        "ResponseMetadata": {
          "HTTPHeaders": {},
          "HTTPStatusCode": 200
        }
      }
    }
  }
}
